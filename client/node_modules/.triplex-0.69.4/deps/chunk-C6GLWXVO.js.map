{
  "version": 3,
  "sources": ["../../react-reconciler/cjs/react-reconciler-constants.development.js", "../../react-reconciler/constants.js", "../../scheduler/cjs/scheduler.development.js", "../../scheduler/index.js", "../../react-reconciler/cjs/react-reconciler.development.js", "../../react-reconciler/index.js", "../../debounce/index.js", "../../@react-three/fiber/dist/events-3515660a.esm.js", "../../zustand/esm/index.js", "../../suspend-react/index.js", "../../@react-three/fiber/dist/react-three-fiber.esm.js", "../../its-fine/dist/index.js"],
  "sourcesContent": ["/**\n * @license React\n * react-reconciler-constants.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar SyncLane =\n/*                        */\n1;\nvar InputContinuousLane =\n/*            */\n4;\nvar DefaultLane =\n/*                    */\n16;\nvar IdleLane =\n/*                       */\n536870912;\n\nvar DiscreteEventPriority = SyncLane;\nvar ContinuousEventPriority = InputContinuousLane;\nvar DefaultEventPriority = DefaultLane;\nvar IdleEventPriority = IdleLane;\n\nvar LegacyRoot = 0;\nvar ConcurrentRoot = 1;\n\nexports.ConcurrentRoot = ConcurrentRoot;\nexports.ContinuousEventPriority = ContinuousEventPriority;\nexports.DefaultEventPriority = DefaultEventPriority;\nexports.DiscreteEventPriority = DiscreteEventPriority;\nexports.IdleEventPriority = IdleEventPriority;\nexports.LegacyRoot = LegacyRoot;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-reconciler-constants.production.min.js');\n} else {\n  module.exports = require('./cjs/react-reconciler-constants.development.js');\n}\n", "/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var enableSchedulerDebugging = false;\nvar enableProfiling = false;\nvar frameYieldMs = 5;\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  return heap.length === 0 ? null : heap[0];\n}\nfunction pop(heap) {\n  if (heap.length === 0) {\n    return null;\n  }\n\n  var first = heap[0];\n  var last = heap.pop();\n\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (index > 0) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n  var halfLength = length >>> 1;\n\n  while (index < halfLength) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.\n\nvar localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\nvar localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;\nvar localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\nvar isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar isMessageLoopRunning = false;\nvar scheduledHostCallback = null;\nvar taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\n\nvar frameInterval = frameYieldMs;\nvar startTime = -1;\n\nfunction shouldYieldToHost() {\n  var timeElapsed = exports.unstable_now() - startTime;\n\n  if (timeElapsed < frameInterval) {\n    // The main thread has only been blocked for a really short amount of time;\n    // smaller than a single frame. Don't yield yet.\n    return false;\n  } // The main thread has been blocked for a non-negligible amount of time. We\n\n\n  return true;\n}\n\nfunction requestPaint() {\n\n}\n\nfunction forceFrameRate(fps) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n    return;\n  }\n\n  if (fps > 0) {\n    frameInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    frameInterval = frameYieldMs;\n  }\n}\n\nvar performWorkUntilDeadline = function () {\n  if (scheduledHostCallback !== null) {\n    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread\n    // has been blocked.\n\n    startTime = currentTime;\n    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\n\n    var hasMoreWork = true;\n\n    try {\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        schedulePerformWorkUntilDeadline();\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  } // Yielding to the browser will give it a chance to paint, so we can\n};\n\nvar schedulePerformWorkUntilDeadline;\n\nif (typeof localSetImmediate === 'function') {\n  // Node.js and old IE.\n  // There's a few reasons for why we prefer setImmediate.\n  //\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n  // (Even though this is a DOM fork of the Scheduler, you could get here\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n  // https://github.com/facebook/react/issues/20756\n  //\n  // But also, it runs earlier which is the semantic we want.\n  // If other browsers ever implement it, it's better to use it.\n  // Although both of these would be inferior to native scheduling.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\n} else if (typeof MessageChannel !== 'undefined') {\n  // DOM and Worker environments.\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else {\n  // We should only fallback here in non-browser environments.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\n}\n\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  localClearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  null;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_forceFrameRate = forceFrameRate;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n", "/**\n * @license React\n * react-reconciler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */'use strict';if(process.env.NODE_ENV!==\"production\"){module.exports=function $$$reconciler($$$hostConfig){var exports={};'use strict';var React=require('react');var Scheduler=require('scheduler');var ReactSharedInternals=React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;var suppressWarning=false;function setSuppressWarning(newSuppressWarning){{suppressWarning=newSuppressWarning;}}// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\nfunction warn(format){{if(!suppressWarning){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}printWarning('warn',format,args);}}}function error(format){{if(!suppressWarning){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}printWarning('error',format,args);}}}function printWarning(level,format,args){// When changing this logic, you might want to also\n// update consoleWithStackDev.www.js as well.\n{var ReactDebugCurrentFrame=ReactSharedInternals.ReactDebugCurrentFrame;var stack=ReactDebugCurrentFrame.getStackAddendum();if(stack!==''){format+='%s';args=args.concat([stack]);}// eslint-disable-next-line react-internal/safe-string-coercion\nvar argsWithFormat=args.map(function(item){return String(item);});// Careful: RN currently depends on this prefix\nargsWithFormat.unshift('Warning: '+format);// We intentionally don't use spread (or .apply) directly because it\n// breaks IE9: https://github.com/facebook/react/issues/13610\n// eslint-disable-next-line react-internal/no-production-logging\nFunction.prototype.apply.call(console[level],console,argsWithFormat);}}var assign=Object.assign;/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */function get(key){return key._reactInternals;}function set(key,value){key._reactInternals=value;}// -----------------------------------------------------------------------------\nvar enablePersistentOffscreenHostContainer=false;// -----------------------------------------------------------------------------\n// the react-reconciler package.\nvar enableNewReconciler=false;// Support legacy Primer support on internal FB www\nvar enableLazyContextPropagation=false;// FB-only usage. The new API has different semantics.\nvar enableLegacyHidden=false;// Enables unstable_avoidThisFallback feature in Fiber\nvar enableSuspenseAvoidThisFallback=false;// Enables unstable_avoidThisFallback feature in Fizz\nvar warnAboutStringRefs=false;// -----------------------------------------------------------------------------\n// Debugging and DevTools\n// -----------------------------------------------------------------------------\n// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n// for an experimental timeline tool.\nvar enableSchedulingProfiler=true;// Helps identify side effects in render-phase lifecycle hooks and setState\nvar enableProfilerTimer=true;// Record durations for commit and passive effects phases.\nvar enableProfilerCommitHooks=true;// Phase param passed to onRender callback differentiates between an \"update\" and a \"cascading-update\".\nvar FunctionComponent=0;var ClassComponent=1;var IndeterminateComponent=2;// Before we know whether it is function or class\nvar HostRoot=3;// Root of a host tree. Could be nested inside another node.\nvar HostPortal=4;// A subtree. Could be an entry point to a different renderer.\nvar HostComponent=5;var HostText=6;var Fragment=7;var Mode=8;var ContextConsumer=9;var ContextProvider=10;var ForwardRef=11;var Profiler=12;var SuspenseComponent=13;var MemoComponent=14;var SimpleMemoComponent=15;var LazyComponent=16;var IncompleteClassComponent=17;var DehydratedFragment=18;var SuspenseListComponent=19;var ScopeComponent=21;var OffscreenComponent=22;var LegacyHiddenComponent=23;var CacheComponent=24;var TracingMarkerComponent=25;// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE=Symbol.for('react.element');var REACT_PORTAL_TYPE=Symbol.for('react.portal');var REACT_FRAGMENT_TYPE=Symbol.for('react.fragment');var REACT_STRICT_MODE_TYPE=Symbol.for('react.strict_mode');var REACT_PROFILER_TYPE=Symbol.for('react.profiler');var REACT_PROVIDER_TYPE=Symbol.for('react.provider');var REACT_CONTEXT_TYPE=Symbol.for('react.context');var REACT_FORWARD_REF_TYPE=Symbol.for('react.forward_ref');var REACT_SUSPENSE_TYPE=Symbol.for('react.suspense');var REACT_SUSPENSE_LIST_TYPE=Symbol.for('react.suspense_list');var REACT_MEMO_TYPE=Symbol.for('react.memo');var REACT_LAZY_TYPE=Symbol.for('react.lazy');var REACT_SCOPE_TYPE=Symbol.for('react.scope');var REACT_DEBUG_TRACING_MODE_TYPE=Symbol.for('react.debug_trace_mode');var REACT_OFFSCREEN_TYPE=Symbol.for('react.offscreen');var REACT_LEGACY_HIDDEN_TYPE=Symbol.for('react.legacy_hidden');var REACT_CACHE_TYPE=Symbol.for('react.cache');var REACT_TRACING_MARKER_TYPE=Symbol.for('react.tracing_marker');var MAYBE_ITERATOR_SYMBOL=Symbol.iterator;var FAUX_ITERATOR_SYMBOL='@@iterator';function getIteratorFn(maybeIterable){if(maybeIterable===null||typeof maybeIterable!=='object'){return null;}var maybeIterator=MAYBE_ITERATOR_SYMBOL&&maybeIterable[MAYBE_ITERATOR_SYMBOL]||maybeIterable[FAUX_ITERATOR_SYMBOL];if(typeof maybeIterator==='function'){return maybeIterator;}return null;}function getWrappedName(outerType,innerType,wrapperName){var displayName=outerType.displayName;if(displayName){return displayName;}var functionName=innerType.displayName||innerType.name||'';return functionName!==''?wrapperName+\"(\"+functionName+\")\":wrapperName;}// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getContextName(type){return type.displayName||'Context';}// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\nfunction getComponentNameFromType(type){if(type==null){// Host root, text node or just invalid type.\nreturn null;}{if(typeof type.tag==='number'){error('Received an unexpected object in getComponentNameFromType(). '+'This is likely a bug in React. Please file an issue.');}}if(typeof type==='function'){return type.displayName||type.name||null;}if(typeof type==='string'){return type;}switch(type){case REACT_FRAGMENT_TYPE:return'Fragment';case REACT_PORTAL_TYPE:return'Portal';case REACT_PROFILER_TYPE:return'Profiler';case REACT_STRICT_MODE_TYPE:return'StrictMode';case REACT_SUSPENSE_TYPE:return'Suspense';case REACT_SUSPENSE_LIST_TYPE:return'SuspenseList';}if(typeof type==='object'){switch(type.$$typeof){case REACT_CONTEXT_TYPE:var context=type;return getContextName(context)+'.Consumer';case REACT_PROVIDER_TYPE:var provider=type;return getContextName(provider._context)+'.Provider';case REACT_FORWARD_REF_TYPE:return getWrappedName(type,type.render,'ForwardRef');case REACT_MEMO_TYPE:var outerName=type.displayName||null;if(outerName!==null){return outerName;}return getComponentNameFromType(type.type)||'Memo';case REACT_LAZY_TYPE:{var lazyComponent=type;var payload=lazyComponent._payload;var init=lazyComponent._init;try{return getComponentNameFromType(init(payload));}catch(x){return null;}}// eslint-disable-next-line no-fallthrough\n}}return null;}function getWrappedName$1(outerType,innerType,wrapperName){var functionName=innerType.displayName||innerType.name||'';return outerType.displayName||(functionName!==''?wrapperName+\"(\"+functionName+\")\":wrapperName);}// Keep in sync with shared/getComponentNameFromType\nfunction getContextName$1(type){return type.displayName||'Context';}function getComponentNameFromFiber(fiber){var tag=fiber.tag,type=fiber.type;switch(tag){case CacheComponent:return'Cache';case ContextConsumer:var context=type;return getContextName$1(context)+'.Consumer';case ContextProvider:var provider=type;return getContextName$1(provider._context)+'.Provider';case DehydratedFragment:return'DehydratedFragment';case ForwardRef:return getWrappedName$1(type,type.render,'ForwardRef');case Fragment:return'Fragment';case HostComponent:// Host component type is the display name (e.g. \"div\", \"View\")\nreturn type;case HostPortal:return'Portal';case HostRoot:return'Root';case HostText:return'Text';case LazyComponent:// Name comes from the type in this case; we don't have a tag.\nreturn getComponentNameFromType(type);case Mode:if(type===REACT_STRICT_MODE_TYPE){// Don't be less specific than shared/getComponentNameFromType\nreturn'StrictMode';}return'Mode';case OffscreenComponent:return'Offscreen';case Profiler:return'Profiler';case ScopeComponent:return'Scope';case SuspenseComponent:return'Suspense';case SuspenseListComponent:return'SuspenseList';case TracingMarkerComponent:return'TracingMarker';// The display name for this tags come from the user-provided type:\ncase ClassComponent:case FunctionComponent:case IncompleteClassComponent:case IndeterminateComponent:case MemoComponent:case SimpleMemoComponent:if(typeof type==='function'){return type.displayName||type.name||null;}if(typeof type==='string'){return type;}break;}return null;}// Don't change these two values. They're used by React Dev Tools.\nvar NoFlags=/*                      */0;var PerformedWork=/*                */1;// You can change the rest (and add more).\nvar Placement=/*                    */2;var Update=/*                       */4;var PlacementAndUpdate=/*           */Placement|Update;var ChildDeletion=/*                */16;var ContentReset=/*                 */32;var Callback=/*                     */64;var DidCapture=/*                   */128;var ForceClientRender=/*            */256;var Ref=/*                          */512;var Snapshot=/*                     */1024;var Passive=/*                      */2048;var Hydrating=/*                    */4096;var HydratingAndUpdate=/*           */Hydrating|Update;var Visibility=/*                   */8192;var StoreConsistency=/*             */16384;var LifecycleEffectMask=Passive|Update|Callback|Ref|Snapshot|StoreConsistency;// Union of all commit flags (flags with the lifetime of a particular commit)\nvar HostEffectMask=/*               */32767;// These are not really side effects, but we still reuse this field.\nvar Incomplete=/*                   */32768;var ShouldCapture=/*                */65536;var ForceUpdateForLegacySuspense=/* */131072;var Forked=/*                       */1048576;// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nvar RefStatic=/*                    */2097152;var LayoutStatic=/*                 */4194304;var PassiveStatic=/*                */8388608;// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nvar MountLayoutDev=/*               */16777216;var MountPassiveDev=/*              */33554432;// Groups of flags that are used in the commit phase to skip over trees that\n// don't contain effects, by checking subtreeFlags.\nvar BeforeMutationMask=// TODO: Remove Update flag from before mutation phase by re-landing Visibility\n// flag logic (see #20043)\nUpdate|Snapshot|0;var MutationMask=Placement|Update|ChildDeletion|ContentReset|Ref|Hydrating|Visibility;var LayoutMask=Update|Callback|Ref|Visibility;// TODO: Split into PassiveMountMask and PassiveUnmountMask\nvar PassiveMask=Passive|ChildDeletion;// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\nvar StaticMask=LayoutStatic|PassiveStatic|RefStatic;var ReactCurrentOwner=ReactSharedInternals.ReactCurrentOwner;function getNearestMountedFiber(fiber){var node=fiber;var nearestMounted=fiber;if(!fiber.alternate){// If there is no alternate, this might be a new tree that isn't inserted\n// yet. If it is, then it will have a pending insertion effect on it.\nvar nextNode=node;do{node=nextNode;if((node.flags&(Placement|Hydrating))!==NoFlags){// This is an insertion or in-progress hydration. The nearest possible\n// mounted fiber is the parent but we need to continue to figure out\n// if that one is still mounted.\nnearestMounted=node.return;}nextNode=node.return;}while(nextNode);}else{while(node.return){node=node.return;}}if(node.tag===HostRoot){// TODO: Check if this was a nested HostRoot when used with\n// renderContainerIntoSubtree.\nreturn nearestMounted;}// If we didn't hit the root, that means that we're in an disconnected tree\n// that has been unmounted.\nreturn null;}function isFiberMounted(fiber){return getNearestMountedFiber(fiber)===fiber;}function isMounted(component){{var owner=ReactCurrentOwner.current;if(owner!==null&&owner.tag===ClassComponent){var ownerFiber=owner;var instance=ownerFiber.stateNode;if(!instance._warnedAboutRefsInRender){error('%s is accessing isMounted inside its render() function. '+'render() should be a pure function of props and state. It should '+'never access something that requires stale data from the previous '+'render, such as refs. Move this logic to componentDidMount and '+'componentDidUpdate instead.',getComponentNameFromFiber(ownerFiber)||'A component');}instance._warnedAboutRefsInRender=true;}}var fiber=get(component);if(!fiber){return false;}return getNearestMountedFiber(fiber)===fiber;}function assertIsMounted(fiber){if(getNearestMountedFiber(fiber)!==fiber){throw new Error('Unable to find node on an unmounted component.');}}function findCurrentFiberUsingSlowPath(fiber){var alternate=fiber.alternate;if(!alternate){// If there is no alternate, then we only need to check if it is mounted.\nvar nearestMounted=getNearestMountedFiber(fiber);if(nearestMounted===null){throw new Error('Unable to find node on an unmounted component.');}if(nearestMounted!==fiber){return null;}return fiber;}// If we have two possible branches, we'll walk backwards up to the root\n// to see what path the root points to. On the way we may hit one of the\n// special cases and we'll deal with them.\nvar a=fiber;var b=alternate;while(true){var parentA=a.return;if(parentA===null){// We're at the root.\nbreak;}var parentB=parentA.alternate;if(parentB===null){// There is no alternate. This is an unusual case. Currently, it only\n// happens when a Suspense component is hidden. An extra fragment fiber\n// is inserted in between the Suspense fiber and its children. Skip\n// over this extra fragment fiber and proceed to the next parent.\nvar nextParent=parentA.return;if(nextParent!==null){a=b=nextParent;continue;}// If there's no parent, we're at the root.\nbreak;}// If both copies of the parent fiber point to the same child, we can\n// assume that the child is current. This happens when we bailout on low\n// priority: the bailed out fiber's child reuses the current child.\nif(parentA.child===parentB.child){var child=parentA.child;while(child){if(child===a){// We've determined that A is the current branch.\nassertIsMounted(parentA);return fiber;}if(child===b){// We've determined that B is the current branch.\nassertIsMounted(parentA);return alternate;}child=child.sibling;}// We should never have an alternate for any mounting node. So the only\n// way this could possibly happen is if this was unmounted, if at all.\nthrow new Error('Unable to find node on an unmounted component.');}if(a.return!==b.return){// The return pointer of A and the return pointer of B point to different\n// fibers. We assume that return pointers never criss-cross, so A must\n// belong to the child set of A.return, and B must belong to the child\n// set of B.return.\na=parentA;b=parentB;}else{// The return pointers point to the same fiber. We'll have to use the\n// default, slow path: scan the child sets of each parent alternate to see\n// which child belongs to which set.\n//\n// Search parent A's child set\nvar didFindChild=false;var _child=parentA.child;while(_child){if(_child===a){didFindChild=true;a=parentA;b=parentB;break;}if(_child===b){didFindChild=true;b=parentA;a=parentB;break;}_child=_child.sibling;}if(!didFindChild){// Search parent B's child set\n_child=parentB.child;while(_child){if(_child===a){didFindChild=true;a=parentB;b=parentA;break;}if(_child===b){didFindChild=true;b=parentB;a=parentA;break;}_child=_child.sibling;}if(!didFindChild){throw new Error('Child was not found in either parent set. This indicates a bug '+'in React related to the return pointer. Please file an issue.');}}}if(a.alternate!==b){throw new Error(\"Return fibers should always be each others' alternates. \"+'This error is likely caused by a bug in React. Please file an issue.');}}// If the root is not a host container, we're in a disconnected tree. I.e.\n// unmounted.\nif(a.tag!==HostRoot){throw new Error('Unable to find node on an unmounted component.');}if(a.stateNode.current===a){// We've determined that A is the current branch.\nreturn fiber;}// Otherwise B has to be current branch.\nreturn alternate;}function findCurrentHostFiber(parent){var currentParent=findCurrentFiberUsingSlowPath(parent);return currentParent!==null?findCurrentHostFiberImpl(currentParent):null;}function findCurrentHostFiberImpl(node){// Next we'll drill down this component to find the first HostComponent/Text.\nif(node.tag===HostComponent||node.tag===HostText){return node;}var child=node.child;while(child!==null){var match=findCurrentHostFiberImpl(child);if(match!==null){return match;}child=child.sibling;}return null;}function findCurrentHostFiberWithNoPortals(parent){var currentParent=findCurrentFiberUsingSlowPath(parent);return currentParent!==null?findCurrentHostFiberWithNoPortalsImpl(currentParent):null;}function findCurrentHostFiberWithNoPortalsImpl(node){// Next we'll drill down this component to find the first HostComponent/Text.\nif(node.tag===HostComponent||node.tag===HostText){return node;}var child=node.child;while(child!==null){if(child.tag!==HostPortal){var match=findCurrentHostFiberWithNoPortalsImpl(child);if(match!==null){return match;}}child=child.sibling;}return null;}var isArrayImpl=Array.isArray;// eslint-disable-next-line no-redeclare\nfunction isArray(a){return isArrayImpl(a);}// This is a host config that's used for the `react-reconciler` package on npm.\n// It is only used by third-party renderers.\n//\n// Its API lets you pass the host config as an argument.\n// However, inside the `react-reconciler` we treat host config as a module.\n// This file is a shim between two worlds.\n//\n// It works because the `react-reconciler` bundle is wrapped in something like:\n//\n// module.exports = function ($$$config) {\n//   /* reconciler code */\n// }\n//\n// So `$$$config` looks like a global variable, but it's\n// really an argument to a top-level wrapping function.\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\n// eslint-disable-line no-undef\nvar getPublicInstance=$$$hostConfig.getPublicInstance;var getRootHostContext=$$$hostConfig.getRootHostContext;var getChildHostContext=$$$hostConfig.getChildHostContext;var prepareForCommit=$$$hostConfig.prepareForCommit;var resetAfterCommit=$$$hostConfig.resetAfterCommit;var createInstance=$$$hostConfig.createInstance;var appendInitialChild=$$$hostConfig.appendInitialChild;var finalizeInitialChildren=$$$hostConfig.finalizeInitialChildren;var prepareUpdate=$$$hostConfig.prepareUpdate;var shouldSetTextContent=$$$hostConfig.shouldSetTextContent;var createTextInstance=$$$hostConfig.createTextInstance;var scheduleTimeout=$$$hostConfig.scheduleTimeout;var cancelTimeout=$$$hostConfig.cancelTimeout;var noTimeout=$$$hostConfig.noTimeout;var now=$$$hostConfig.now;var isPrimaryRenderer=$$$hostConfig.isPrimaryRenderer;var warnsIfNotActing=$$$hostConfig.warnsIfNotActing;var supportsMutation=$$$hostConfig.supportsMutation;var supportsPersistence=$$$hostConfig.supportsPersistence;var supportsHydration=$$$hostConfig.supportsHydration;var getInstanceFromNode=$$$hostConfig.getInstanceFromNode;var beforeActiveInstanceBlur=$$$hostConfig.beforeActiveInstanceBlur;var afterActiveInstanceBlur=$$$hostConfig.afterActiveInstanceBlur;var preparePortalMount=$$$hostConfig.preparePortalMount;var prepareScopeUpdate=$$$hostConfig.preparePortalMount;var getInstanceFromScope=$$$hostConfig.getInstanceFromScope;var getCurrentEventPriority=$$$hostConfig.getCurrentEventPriority;var detachDeletedInstance=$$$hostConfig.detachDeletedInstance;// -------------------\n//      Microtasks\n//     (optional)\n// -------------------\nvar supportsMicrotasks=$$$hostConfig.supportsMicrotasks;var scheduleMicrotask=$$$hostConfig.scheduleMicrotask;// -------------------\n//      Test selectors\n//     (optional)\n// -------------------\nvar supportsTestSelectors=$$$hostConfig.supportsTestSelectors;var findFiberRoot=$$$hostConfig.findFiberRoot;var getBoundingRect=$$$hostConfig.getBoundingRect;var getTextContent=$$$hostConfig.getTextContent;var isHiddenSubtree=$$$hostConfig.isHiddenSubtree;var matchAccessibilityRole=$$$hostConfig.matchAccessibilityRole;var setFocusIfFocusable=$$$hostConfig.setFocusIfFocusable;var setupIntersectionObserver=$$$hostConfig.setupIntersectionObserver;// -------------------\n//      Mutation\n//     (optional)\n// -------------------\nvar appendChild=$$$hostConfig.appendChild;var appendChildToContainer=$$$hostConfig.appendChildToContainer;var commitTextUpdate=$$$hostConfig.commitTextUpdate;var commitMount=$$$hostConfig.commitMount;var commitUpdate=$$$hostConfig.commitUpdate;var insertBefore=$$$hostConfig.insertBefore;var insertInContainerBefore=$$$hostConfig.insertInContainerBefore;var removeChild=$$$hostConfig.removeChild;var removeChildFromContainer=$$$hostConfig.removeChildFromContainer;var resetTextContent=$$$hostConfig.resetTextContent;var hideInstance=$$$hostConfig.hideInstance;var hideTextInstance=$$$hostConfig.hideTextInstance;var unhideInstance=$$$hostConfig.unhideInstance;var unhideTextInstance=$$$hostConfig.unhideTextInstance;var clearContainer=$$$hostConfig.clearContainer;// -------------------\n//     Persistence\n//     (optional)\n// -------------------\nvar cloneInstance=$$$hostConfig.cloneInstance;var createContainerChildSet=$$$hostConfig.createContainerChildSet;var appendChildToContainerChildSet=$$$hostConfig.appendChildToContainerChildSet;var finalizeContainerChildren=$$$hostConfig.finalizeContainerChildren;var replaceContainerChildren=$$$hostConfig.replaceContainerChildren;var getOffscreenContainerType=$$$hostConfig.getOffscreenContainerType;var getOffscreenContainerProps=$$$hostConfig.getOffscreenContainerProps;var cloneHiddenInstance=$$$hostConfig.cloneHiddenInstance;var cloneHiddenTextInstance=$$$hostConfig.cloneHiddenTextInstance;// -------------------\n//     Hydration\n//     (optional)\n// -------------------\nvar canHydrateInstance=$$$hostConfig.canHydrateInstance;var canHydrateTextInstance=$$$hostConfig.canHydrateTextInstance;var canHydrateSuspenseInstance=$$$hostConfig.canHydrateSuspenseInstance;var isSuspenseInstancePending=$$$hostConfig.isSuspenseInstancePending;var isSuspenseInstanceFallback=$$$hostConfig.isSuspenseInstanceFallback;var registerSuspenseInstanceRetry=$$$hostConfig.registerSuspenseInstanceRetry;var getNextHydratableSibling=$$$hostConfig.getNextHydratableSibling;var getFirstHydratableChild=$$$hostConfig.getFirstHydratableChild;var getFirstHydratableChildWithinContainer=$$$hostConfig.getFirstHydratableChildWithinContainer;var getFirstHydratableChildWithinSuspenseInstance=$$$hostConfig.getFirstHydratableChildWithinSuspenseInstance;var hydrateInstance=$$$hostConfig.hydrateInstance;var hydrateTextInstance=$$$hostConfig.hydrateTextInstance;var hydrateSuspenseInstance=$$$hostConfig.hydrateSuspenseInstance;var getNextHydratableInstanceAfterSuspenseInstance=$$$hostConfig.getNextHydratableInstanceAfterSuspenseInstance;var commitHydratedContainer=$$$hostConfig.commitHydratedContainer;var commitHydratedSuspenseInstance=$$$hostConfig.commitHydratedSuspenseInstance;var clearSuspenseBoundary=$$$hostConfig.clearSuspenseBoundary;var clearSuspenseBoundaryFromContainer=$$$hostConfig.clearSuspenseBoundaryFromContainer;var shouldDeleteUnhydratedTailInstances=$$$hostConfig.shouldDeleteUnhydratedTailInstances;var didNotMatchHydratedContainerTextInstance=$$$hostConfig.didNotMatchHydratedContainerTextInstance;var didNotMatchHydratedTextInstance=$$$hostConfig.didNotMatchHydratedTextInstance;var didNotHydrateInstanceWithinContainer=$$$hostConfig.didNotHydrateInstanceWithinContainer;var didNotHydrateInstanceWithinSuspenseInstance=$$$hostConfig.didNotHydrateInstanceWithinSuspenseInstance;var didNotHydrateInstance=$$$hostConfig.didNotHydrateInstance;var didNotFindHydratableInstanceWithinContainer=$$$hostConfig.didNotFindHydratableInstanceWithinContainer;var didNotFindHydratableTextInstanceWithinContainer=$$$hostConfig.didNotFindHydratableTextInstanceWithinContainer;var didNotFindHydratableSuspenseInstanceWithinContainer=$$$hostConfig.didNotFindHydratableSuspenseInstanceWithinContainer;var didNotFindHydratableInstanceWithinSuspenseInstance=$$$hostConfig.didNotFindHydratableInstanceWithinSuspenseInstance;var didNotFindHydratableTextInstanceWithinSuspenseInstance=$$$hostConfig.didNotFindHydratableTextInstanceWithinSuspenseInstance;var didNotFindHydratableSuspenseInstanceWithinSuspenseInstance=$$$hostConfig.didNotFindHydratableSuspenseInstanceWithinSuspenseInstance;var didNotFindHydratableInstance=$$$hostConfig.didNotFindHydratableInstance;var didNotFindHydratableTextInstance=$$$hostConfig.didNotFindHydratableTextInstance;var didNotFindHydratableSuspenseInstance=$$$hostConfig.didNotFindHydratableSuspenseInstance;var errorHydratingContainer=$$$hostConfig.errorHydratingContainer;// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth=0;var prevLog;var prevInfo;var prevWarn;var prevError;var prevGroup;var prevGroupCollapsed;var prevGroupEnd;function disabledLog(){}disabledLog.__reactDisabledLog=true;function disableLogs(){{if(disabledDepth===0){/* eslint-disable react-internal/no-production-logging */prevLog=console.log;prevInfo=console.info;prevWarn=console.warn;prevError=console.error;prevGroup=console.group;prevGroupCollapsed=console.groupCollapsed;prevGroupEnd=console.groupEnd;// https://github.com/facebook/react/issues/19099\nvar props={configurable:true,enumerable:true,value:disabledLog,writable:true};// $FlowFixMe Flow thinks console is immutable.\nObject.defineProperties(console,{info:props,log:props,warn:props,error:props,group:props,groupCollapsed:props,groupEnd:props});/* eslint-enable react-internal/no-production-logging */}disabledDepth++;}}function reenableLogs(){{disabledDepth--;if(disabledDepth===0){/* eslint-disable react-internal/no-production-logging */var props={configurable:true,enumerable:true,writable:true};// $FlowFixMe Flow thinks console is immutable.\nObject.defineProperties(console,{log:assign({},props,{value:prevLog}),info:assign({},props,{value:prevInfo}),warn:assign({},props,{value:prevWarn}),error:assign({},props,{value:prevError}),group:assign({},props,{value:prevGroup}),groupCollapsed:assign({},props,{value:prevGroupCollapsed}),groupEnd:assign({},props,{value:prevGroupEnd})});/* eslint-enable react-internal/no-production-logging */}if(disabledDepth<0){error('disabledDepth fell below zero. '+'This is a bug in React. Please file an issue.');}}}var ReactCurrentDispatcher=ReactSharedInternals.ReactCurrentDispatcher;var prefix;function describeBuiltInComponentFrame(name,source,ownerFn){{if(prefix===undefined){// Extract the VM specific prefix used by each line.\ntry{throw Error();}catch(x){var match=x.stack.trim().match(/\\n( *(at )?)/);prefix=match&&match[1]||'';}}// We use the prefix to ensure our stacks line up with native stack frames.\nreturn'\\n'+prefix+name;}}var reentry=false;var componentFrameCache;{var PossiblyWeakMap=typeof WeakMap==='function'?WeakMap:Map;componentFrameCache=new PossiblyWeakMap();}function describeNativeComponentFrame(fn,construct){// If something asked for a stack inside a fake render, it should get ignored.\nif(!fn||reentry){return'';}{var frame=componentFrameCache.get(fn);if(frame!==undefined){return frame;}}var control;reentry=true;var previousPrepareStackTrace=Error.prepareStackTrace;// $FlowFixMe It does accept undefined.\nError.prepareStackTrace=undefined;var previousDispatcher;{previousDispatcher=ReactCurrentDispatcher.current;// Set the dispatcher in DEV because this might be call in the render function\n// for warnings.\nReactCurrentDispatcher.current=null;disableLogs();}try{// This should throw.\nif(construct){// Something should be setting the props in the constructor.\nvar Fake=function(){throw Error();};// $FlowFixMe\nObject.defineProperty(Fake.prototype,'props',{set:function(){// We use a throwing setter instead of frozen or non-writable props\n// because that won't throw in a non-strict mode function.\nthrow Error();}});if(typeof Reflect==='object'&&Reflect.construct){// We construct a different control for this case to include any extra\n// frames added by the construct call.\ntry{Reflect.construct(Fake,[]);}catch(x){control=x;}Reflect.construct(fn,[],Fake);}else{try{Fake.call();}catch(x){control=x;}fn.call(Fake.prototype);}}else{try{throw Error();}catch(x){control=x;}fn();}}catch(sample){// This is inlined manually because closure doesn't do it for us.\nif(sample&&control&&typeof sample.stack==='string'){// This extracts the first frame from the sample that isn't also in the control.\n// Skipping one frame that we assume is the frame that calls the two.\nvar sampleLines=sample.stack.split('\\n');var controlLines=control.stack.split('\\n');var s=sampleLines.length-1;var c=controlLines.length-1;while(s>=1&&c>=0&&sampleLines[s]!==controlLines[c]){// We expect at least one stack frame to be shared.\n// Typically this will be the root most one. However, stack frames may be\n// cut off due to maximum stack limits. In this case, one maybe cut off\n// earlier than the other. We assume that the sample is longer or the same\n// and there for cut off earlier. So we should find the root most frame in\n// the sample somewhere in the control.\nc--;}for(;s>=1&&c>=0;s--,c--){// Next we find the first one that isn't the same which should be the\n// frame that called our sample function and the control.\nif(sampleLines[s]!==controlLines[c]){// In V8, the first line is describing the message but other VMs don't.\n// If we're about to return the first line, and the control is also on the same\n// line, that's a pretty good indicator that our sample threw at same line as\n// the control. I.e. before we entered the sample frame. So we ignore this result.\n// This can happen if you passed a class to function component, or non-function.\nif(s!==1||c!==1){do{s--;c--;// We may still have similar intermediate frames from the construct call.\n// The next one that isn't the same should be our match though.\nif(c<0||sampleLines[s]!==controlLines[c]){// V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\nvar _frame='\\n'+sampleLines[s].replace(' at new ',' at ');// If our component frame is labeled \"<anonymous>\"\n// but we have a user-provided \"displayName\"\n// splice it in to make the stack more readable.\nif(fn.displayName&&_frame.includes('<anonymous>')){_frame=_frame.replace('<anonymous>',fn.displayName);}{if(typeof fn==='function'){componentFrameCache.set(fn,_frame);}}// Return the line we found.\nreturn _frame;}}while(s>=1&&c>=0);}break;}}}}finally{reentry=false;{ReactCurrentDispatcher.current=previousDispatcher;reenableLogs();}Error.prepareStackTrace=previousPrepareStackTrace;}// Fallback to just using the name if we couldn't make it throw.\nvar name=fn?fn.displayName||fn.name:'';var syntheticFrame=name?describeBuiltInComponentFrame(name):'';{if(typeof fn==='function'){componentFrameCache.set(fn,syntheticFrame);}}return syntheticFrame;}function describeClassComponentFrame(ctor,source,ownerFn){{return describeNativeComponentFrame(ctor,true);}}function describeFunctionComponentFrame(fn,source,ownerFn){{return describeNativeComponentFrame(fn,false);}}function shouldConstruct(Component){var prototype=Component.prototype;return!!(prototype&&prototype.isReactComponent);}function describeUnknownElementTypeFrameInDEV(type,source,ownerFn){if(type==null){return'';}if(typeof type==='function'){{return describeNativeComponentFrame(type,shouldConstruct(type));}}if(typeof type==='string'){return describeBuiltInComponentFrame(type);}switch(type){case REACT_SUSPENSE_TYPE:return describeBuiltInComponentFrame('Suspense');case REACT_SUSPENSE_LIST_TYPE:return describeBuiltInComponentFrame('SuspenseList');}if(typeof type==='object'){switch(type.$$typeof){case REACT_FORWARD_REF_TYPE:return describeFunctionComponentFrame(type.render);case REACT_MEMO_TYPE:// Memo may contain any component type so we recursively resolve it.\nreturn describeUnknownElementTypeFrameInDEV(type.type,source,ownerFn);case REACT_LAZY_TYPE:{var lazyComponent=type;var payload=lazyComponent._payload;var init=lazyComponent._init;try{// Lazy may contain any component type so we recursively resolve it.\nreturn describeUnknownElementTypeFrameInDEV(init(payload),source,ownerFn);}catch(x){}}}}return'';}var hasOwnProperty=Object.prototype.hasOwnProperty;var loggedTypeFailures={};var ReactDebugCurrentFrame=ReactSharedInternals.ReactDebugCurrentFrame;function setCurrentlyValidatingElement(element){{if(element){var owner=element._owner;var stack=describeUnknownElementTypeFrameInDEV(element.type,element._source,owner?owner.type:null);ReactDebugCurrentFrame.setExtraStackFrame(stack);}else{ReactDebugCurrentFrame.setExtraStackFrame(null);}}}function checkPropTypes(typeSpecs,values,location,componentName,element){{// $FlowFixMe This is okay but Flow doesn't know it.\nvar has=Function.call.bind(hasOwnProperty);for(var typeSpecName in typeSpecs){if(has(typeSpecs,typeSpecName)){var error$1=void 0;// Prop type validation may throw. In case they do, we don't want to\n// fail the render phase where it didn't fail before. So we log it.\n// After these have been cleaned up, we'll let them throw.\ntry{// This is intentionally an invariant that gets caught. It's the same\n// behavior as without this statement except with a better message.\nif(typeof typeSpecs[typeSpecName]!=='function'){// eslint-disable-next-line react-internal/prod-error-codes\nvar err=Error((componentName||'React class')+': '+location+' type `'+typeSpecName+'` is invalid; '+'it must be a function, usually from the `prop-types` package, but received `'+typeof typeSpecs[typeSpecName]+'`.'+'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');err.name='Invariant Violation';throw err;}error$1=typeSpecs[typeSpecName](values,typeSpecName,componentName,location,null,'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');}catch(ex){error$1=ex;}if(error$1&&!(error$1 instanceof Error)){setCurrentlyValidatingElement(element);error('%s: type specification of %s'+' `%s` is invalid; the type checker '+'function must return `null` or an `Error` but returned a %s. '+'You may have forgotten to pass an argument to the type checker '+'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and '+'shape all require an argument).',componentName||'React class',location,typeSpecName,typeof error$1);setCurrentlyValidatingElement(null);}if(error$1 instanceof Error&&!(error$1.message in loggedTypeFailures)){// Only monitor this failure once because there tends to be a lot of the\n// same error.\nloggedTypeFailures[error$1.message]=true;setCurrentlyValidatingElement(element);error('Failed %s type: %s',location,error$1.message);setCurrentlyValidatingElement(null);}}}}}var valueStack=[];var fiberStack;{fiberStack=[];}var index=-1;function createCursor(defaultValue){return{current:defaultValue};}function pop(cursor,fiber){if(index<0){{error('Unexpected pop.');}return;}{if(fiber!==fiberStack[index]){error('Unexpected Fiber popped.');}}cursor.current=valueStack[index];valueStack[index]=null;{fiberStack[index]=null;}index--;}function push(cursor,value,fiber){index++;valueStack[index]=cursor.current;{fiberStack[index]=fiber;}cursor.current=value;}var warnedAboutMissingGetChildContext;{warnedAboutMissingGetChildContext={};}var emptyContextObject={};{Object.freeze(emptyContextObject);}// A cursor to the current merged context object on the stack.\nvar contextStackCursor=createCursor(emptyContextObject);// A cursor to a boolean indicating whether the context has changed.\nvar didPerformWorkStackCursor=createCursor(false);// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nvar previousContext=emptyContextObject;function getUnmaskedContext(workInProgress,Component,didPushOwnContextIfProvider){{if(didPushOwnContextIfProvider&&isContextProvider(Component)){// If the fiber is a context provider itself, when we read its context\n// we may have already pushed its own child context on the stack. A context\n// provider should not \"see\" its own child context. Therefore we read the\n// previous (parent) context instead for a context provider.\nreturn previousContext;}return contextStackCursor.current;}}function cacheContext(workInProgress,unmaskedContext,maskedContext){{var instance=workInProgress.stateNode;instance.__reactInternalMemoizedUnmaskedChildContext=unmaskedContext;instance.__reactInternalMemoizedMaskedChildContext=maskedContext;}}function getMaskedContext(workInProgress,unmaskedContext){{var type=workInProgress.type;var contextTypes=type.contextTypes;if(!contextTypes){return emptyContextObject;}// Avoid recreating masked context unless unmasked context has changed.\n// Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n// This may trigger infinite loops if componentWillReceiveProps calls setState.\nvar instance=workInProgress.stateNode;if(instance&&instance.__reactInternalMemoizedUnmaskedChildContext===unmaskedContext){return instance.__reactInternalMemoizedMaskedChildContext;}var context={};for(var key in contextTypes){context[key]=unmaskedContext[key];}{var name=getComponentNameFromFiber(workInProgress)||'Unknown';checkPropTypes(contextTypes,context,'context',name);}// Cache unmasked context so we can avoid recreating masked context unless necessary.\n// Context is created before the class component is instantiated so check for instance.\nif(instance){cacheContext(workInProgress,unmaskedContext,context);}return context;}}function hasContextChanged(){{return didPerformWorkStackCursor.current;}}function isContextProvider(type){{var childContextTypes=type.childContextTypes;return childContextTypes!==null&&childContextTypes!==undefined;}}function popContext(fiber){{pop(didPerformWorkStackCursor,fiber);pop(contextStackCursor,fiber);}}function popTopLevelContextObject(fiber){{pop(didPerformWorkStackCursor,fiber);pop(contextStackCursor,fiber);}}function pushTopLevelContextObject(fiber,context,didChange){{if(contextStackCursor.current!==emptyContextObject){throw new Error('Unexpected context found on stack. '+'This error is likely caused by a bug in React. Please file an issue.');}push(contextStackCursor,context,fiber);push(didPerformWorkStackCursor,didChange,fiber);}}function processChildContext(fiber,type,parentContext){{var instance=fiber.stateNode;var childContextTypes=type.childContextTypes;// TODO (bvaughn) Replace this behavior with an invariant() in the future.\n// It has only been added in Fiber to match the (unintentional) behavior in Stack.\nif(typeof instance.getChildContext!=='function'){{var componentName=getComponentNameFromFiber(fiber)||'Unknown';if(!warnedAboutMissingGetChildContext[componentName]){warnedAboutMissingGetChildContext[componentName]=true;error('%s.childContextTypes is specified but there is no getChildContext() method '+'on the instance. You can either define getChildContext() on %s or remove '+'childContextTypes from it.',componentName,componentName);}}return parentContext;}var childContext=instance.getChildContext();for(var contextKey in childContext){if(!(contextKey in childContextTypes)){throw new Error((getComponentNameFromFiber(fiber)||'Unknown')+\".getChildContext(): key \\\"\"+contextKey+\"\\\" is not defined in childContextTypes.\");}}{var name=getComponentNameFromFiber(fiber)||'Unknown';checkPropTypes(childContextTypes,childContext,'child context',name);}return assign({},parentContext,childContext);}}function pushContextProvider(workInProgress){{var instance=workInProgress.stateNode;// We push the context as early as possible to ensure stack integrity.\n// If the instance does not exist yet, we will push null at first,\n// and replace it on the stack later when invalidating the context.\nvar memoizedMergedChildContext=instance&&instance.__reactInternalMemoizedMergedChildContext||emptyContextObject;// Remember the parent context so we can merge with it later.\n// Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\npreviousContext=contextStackCursor.current;push(contextStackCursor,memoizedMergedChildContext,workInProgress);push(didPerformWorkStackCursor,didPerformWorkStackCursor.current,workInProgress);return true;}}function invalidateContextProvider(workInProgress,type,didChange){{var instance=workInProgress.stateNode;if(!instance){throw new Error('Expected to have an instance by this point. '+'This error is likely caused by a bug in React. Please file an issue.');}if(didChange){// Merge parent and own context.\n// Skip this if we're not updating due to sCU.\n// This avoids unnecessarily recomputing memoized values.\nvar mergedContext=processChildContext(workInProgress,type,previousContext);instance.__reactInternalMemoizedMergedChildContext=mergedContext;// Replace the old (or empty) context with the new one.\n// It is important to unwind the context in the reverse order.\npop(didPerformWorkStackCursor,workInProgress);pop(contextStackCursor,workInProgress);// Now push the new context and mark that it has changed.\npush(contextStackCursor,mergedContext,workInProgress);push(didPerformWorkStackCursor,didChange,workInProgress);}else{pop(didPerformWorkStackCursor,workInProgress);push(didPerformWorkStackCursor,didChange,workInProgress);}}}function findCurrentUnmaskedContext(fiber){{// Currently this is only used with renderSubtreeIntoContainer; not sure if it\n// makes sense elsewhere\nif(!isFiberMounted(fiber)||fiber.tag!==ClassComponent){throw new Error('Expected subtree parent to be a mounted class component. '+'This error is likely caused by a bug in React. Please file an issue.');}var node=fiber;do{switch(node.tag){case HostRoot:return node.stateNode.context;case ClassComponent:{var Component=node.type;if(isContextProvider(Component)){return node.stateNode.__reactInternalMemoizedMergedChildContext;}break;}}node=node.return;}while(node!==null);throw new Error('Found unexpected detached subtree parent. '+'This error is likely caused by a bug in React. Please file an issue.');}}var LegacyRoot=0;var ConcurrentRoot=1;var NoMode=/*                         */0;// TODO: Remove ConcurrentMode by reading from the root tag instead\nvar ConcurrentMode=/*                 */1;var ProfileMode=/*                    */2;var StrictLegacyMode=/*               */8;var StrictEffectsMode=/*              */16;// TODO: This is pretty well supported by browsers. Maybe we can drop it.\nvar clz32=Math.clz32?Math.clz32:clz32Fallback;// Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nvar log=Math.log;var LN2=Math.LN2;function clz32Fallback(x){var asUint=x>>>0;if(asUint===0){return 32;}return 31-(log(asUint)/LN2|0)|0;}// If those values are changed that package should be rebuilt and redeployed.\nvar TotalLanes=31;var NoLanes=/*                        */0;var NoLane=/*                          */0;var SyncLane=/*                        */1;var InputContinuousHydrationLane=/*    */2;var InputContinuousLane=/*            */4;var DefaultHydrationLane=/*            */8;var DefaultLane=/*                    */16;var TransitionHydrationLane=/*                */32;var TransitionLanes=/*                       */4194240;var TransitionLane1=/*                        */64;var TransitionLane2=/*                        */128;var TransitionLane3=/*                        */256;var TransitionLane4=/*                        */512;var TransitionLane5=/*                        */1024;var TransitionLane6=/*                        */2048;var TransitionLane7=/*                        */4096;var TransitionLane8=/*                        */8192;var TransitionLane9=/*                        */16384;var TransitionLane10=/*                       */32768;var TransitionLane11=/*                       */65536;var TransitionLane12=/*                       */131072;var TransitionLane13=/*                       */262144;var TransitionLane14=/*                       */524288;var TransitionLane15=/*                       */1048576;var TransitionLane16=/*                       */2097152;var RetryLanes=/*                            */130023424;var RetryLane1=/*                             */4194304;var RetryLane2=/*                             */8388608;var RetryLane3=/*                             */16777216;var RetryLane4=/*                             */33554432;var RetryLane5=/*                             */67108864;var SomeRetryLane=RetryLane1;var SelectiveHydrationLane=/*          */134217728;var NonIdleLanes=/*                                 */268435455;var IdleHydrationLane=/*               */268435456;var IdleLane=/*                       */536870912;var OffscreenLane=/*                   */1073741824;// This function is used for the experimental timeline (react-devtools-timeline)\n// It should be kept in sync with the Lanes values above.\nfunction getLabelForLane(lane){{if(lane&SyncLane){return'Sync';}if(lane&InputContinuousHydrationLane){return'InputContinuousHydration';}if(lane&InputContinuousLane){return'InputContinuous';}if(lane&DefaultHydrationLane){return'DefaultHydration';}if(lane&DefaultLane){return'Default';}if(lane&TransitionHydrationLane){return'TransitionHydration';}if(lane&TransitionLanes){return'Transition';}if(lane&RetryLanes){return'Retry';}if(lane&SelectiveHydrationLane){return'SelectiveHydration';}if(lane&IdleHydrationLane){return'IdleHydration';}if(lane&IdleLane){return'Idle';}if(lane&OffscreenLane){return'Offscreen';}}}var NoTimestamp=-1;var nextTransitionLane=TransitionLane1;var nextRetryLane=RetryLane1;function getHighestPriorityLanes(lanes){switch(getHighestPriorityLane(lanes)){case SyncLane:return SyncLane;case InputContinuousHydrationLane:return InputContinuousHydrationLane;case InputContinuousLane:return InputContinuousLane;case DefaultHydrationLane:return DefaultHydrationLane;case DefaultLane:return DefaultLane;case TransitionHydrationLane:return TransitionHydrationLane;case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:return lanes&TransitionLanes;case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:return lanes&RetryLanes;case SelectiveHydrationLane:return SelectiveHydrationLane;case IdleHydrationLane:return IdleHydrationLane;case IdleLane:return IdleLane;case OffscreenLane:return OffscreenLane;default:{error('Should have found matching lanes. This is a bug in React.');}// This shouldn't be reachable, but as a fallback, return the entire bitmask.\nreturn lanes;}}function getNextLanes(root,wipLanes){// Early bailout if there's no pending work left.\nvar pendingLanes=root.pendingLanes;if(pendingLanes===NoLanes){return NoLanes;}var nextLanes=NoLanes;var suspendedLanes=root.suspendedLanes;var pingedLanes=root.pingedLanes;// Do not work on any idle work until all the non-idle work has finished,\n// even if the work is suspended.\nvar nonIdlePendingLanes=pendingLanes&NonIdleLanes;if(nonIdlePendingLanes!==NoLanes){var nonIdleUnblockedLanes=nonIdlePendingLanes&~suspendedLanes;if(nonIdleUnblockedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(nonIdleUnblockedLanes);}else{var nonIdlePingedLanes=nonIdlePendingLanes&pingedLanes;if(nonIdlePingedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(nonIdlePingedLanes);}}}else{// The only remaining work is Idle.\nvar unblockedLanes=pendingLanes&~suspendedLanes;if(unblockedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(unblockedLanes);}else{if(pingedLanes!==NoLanes){nextLanes=getHighestPriorityLanes(pingedLanes);}}}if(nextLanes===NoLanes){// This should only be reachable if we're suspended\n// TODO: Consider warning in this path if a fallback timer is not scheduled.\nreturn NoLanes;}// If we're already in the middle of a render, switching lanes will interrupt\n// it and we'll lose our progress. We should only do this if the new lanes are\n// higher priority.\nif(wipLanes!==NoLanes&&wipLanes!==nextLanes&&// If we already suspended with a delay, then interrupting is fine. Don't\n// bother waiting until the root is complete.\n(wipLanes&suspendedLanes)===NoLanes){var nextLane=getHighestPriorityLane(nextLanes);var wipLane=getHighestPriorityLane(wipLanes);if(// Tests whether the next lane is equal or lower priority than the wip\n// one. This works because the bits decrease in priority as you go left.\nnextLane>=wipLane||// Default priority updates should not interrupt transition updates. The\n// only difference between default updates and transition updates is that\n// default updates do not support refresh transitions.\nnextLane===DefaultLane&&(wipLane&TransitionLanes)!==NoLanes){// Keep working on the existing in-progress tree. Do not interrupt.\nreturn wipLanes;}}if((nextLanes&InputContinuousLane)!==NoLanes){// When updates are sync by default, we entangle continuous priority updates\n// and default updates, so they render in the same batch. The only reason\n// they use separate lanes is because continuous updates should interrupt\n// transitions, but default updates should not.\nnextLanes|=pendingLanes&DefaultLane;}// Check for entangled lanes and add them to the batch.\n//\n// A lane is said to be entangled with another when it's not allowed to render\n// in a batch that does not also include the other lane. Typically we do this\n// when multiple updates have the same source, and we only want to respond to\n// the most recent event from that source.\n//\n// Note that we apply entanglements *after* checking for partial work above.\n// This means that if a lane is entangled during an interleaved event while\n// it's already rendering, we won't interrupt it. This is intentional, since\n// entanglement is usually \"best effort\": we'll try our best to render the\n// lanes in the same batch, but it's not worth throwing out partially\n// completed work in order to do it.\n// TODO: Reconsider this. The counter-argument is that the partial work\n// represents an intermediate state, which we don't want to show to the user.\n// And by spending extra time finishing it, we're increasing the amount of\n// time it takes to show the final state, which is what they are actually\n// waiting for.\n//\n// For those exceptions where entanglement is semantically important, like\n// useMutableSource, we should ensure that there is no partial work at the\n// time we apply the entanglement.\nvar entangledLanes=root.entangledLanes;if(entangledLanes!==NoLanes){var entanglements=root.entanglements;var lanes=nextLanes&entangledLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;nextLanes|=entanglements[index];lanes&=~lane;}}return nextLanes;}function getMostRecentEventTime(root,lanes){var eventTimes=root.eventTimes;var mostRecentEventTime=NoTimestamp;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;var eventTime=eventTimes[index];if(eventTime>mostRecentEventTime){mostRecentEventTime=eventTime;}lanes&=~lane;}return mostRecentEventTime;}function computeExpirationTime(lane,currentTime){switch(lane){case SyncLane:case InputContinuousHydrationLane:case InputContinuousLane:// User interactions should expire slightly more quickly.\n//\n// NOTE: This is set to the corresponding constant as in Scheduler.js.\n// When we made it larger, a product metric in www regressed, suggesting\n// there's a user interaction that's being starved by a series of\n// synchronous updates. If that theory is correct, the proper solution is\n// to fix the starvation. However, this scenario supports the idea that\n// expiration times are an important safeguard when starvation\n// does happen.\nreturn currentTime+250;case DefaultHydrationLane:case DefaultLane:case TransitionHydrationLane:case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:return currentTime+5000;case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:// TODO: Retries should be allowed to expire if they are CPU bound for\n// too long, but when I made this change it caused a spike in browser\n// crashes. There must be some other underlying bug; not super urgent but\n// ideally should figure out why and fix it. Unfortunately we don't have\n// a repro for the crashes, only detected via production metrics.\nreturn NoTimestamp;case SelectiveHydrationLane:case IdleHydrationLane:case IdleLane:case OffscreenLane:// Anything idle priority or lower should never expire.\nreturn NoTimestamp;default:{error('Should have found matching lanes. This is a bug in React.');}return NoTimestamp;}}function markStarvedLanesAsExpired(root,currentTime){// TODO: This gets called every time we yield. We can optimize by storing\n// the earliest expiration time on the root. Then use that to quickly bail out\n// of this function.\nvar pendingLanes=root.pendingLanes;var suspendedLanes=root.suspendedLanes;var pingedLanes=root.pingedLanes;var expirationTimes=root.expirationTimes;// Iterate through the pending lanes and check if we've reached their\n// expiration time. If so, we'll assume the update is being starved and mark\n// it as expired to force it to finish.\nvar lanes=pendingLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;var expirationTime=expirationTimes[index];if(expirationTime===NoTimestamp){// Found a pending lane with no expiration time. If it's not suspended, or\n// if it's pinged, assume it's CPU-bound. Compute a new expiration time\n// using the current time.\nif((lane&suspendedLanes)===NoLanes||(lane&pingedLanes)!==NoLanes){// Assumes timestamps are monotonically increasing.\nexpirationTimes[index]=computeExpirationTime(lane,currentTime);}}else if(expirationTime<=currentTime){// This lane expired\nroot.expiredLanes|=lane;}lanes&=~lane;}}// This returns the highest priority pending lanes regardless of whether they\n// are suspended.\nfunction getHighestPriorityPendingLanes(root){return getHighestPriorityLanes(root.pendingLanes);}function getLanesToRetrySynchronouslyOnError(root){var everythingButOffscreen=root.pendingLanes&~OffscreenLane;if(everythingButOffscreen!==NoLanes){return everythingButOffscreen;}if(everythingButOffscreen&OffscreenLane){return OffscreenLane;}return NoLanes;}function includesSyncLane(lanes){return(lanes&SyncLane)!==NoLanes;}function includesNonIdleWork(lanes){return(lanes&NonIdleLanes)!==NoLanes;}function includesOnlyRetries(lanes){return(lanes&RetryLanes)===lanes;}function includesOnlyTransitions(lanes){return(lanes&TransitionLanes)===lanes;}function includesBlockingLane(root,lanes){var SyncDefaultLanes=InputContinuousHydrationLane|InputContinuousLane|DefaultHydrationLane|DefaultLane;return(lanes&SyncDefaultLanes)!==NoLanes;}function includesExpiredLane(root,lanes){// This is a separate check from includesBlockingLane because a lane can\n// expire after a render has already started.\nreturn(lanes&root.expiredLanes)!==NoLanes;}function isTransitionLane(lane){return(lane&TransitionLanes)!==0;}function claimNextTransitionLane(){// Cycle through the lanes, assigning each new transition to the next lane.\n// In most cases, this means every transition gets its own lane, until we\n// run out of lanes and cycle back to the beginning.\nvar lane=nextTransitionLane;nextTransitionLane<<=1;if((nextTransitionLane&TransitionLanes)===0){nextTransitionLane=TransitionLane1;}return lane;}function claimNextRetryLane(){var lane=nextRetryLane;nextRetryLane<<=1;if((nextRetryLane&RetryLanes)===0){nextRetryLane=RetryLane1;}return lane;}function getHighestPriorityLane(lanes){return lanes&-lanes;}function pickArbitraryLane(lanes){// This wrapper function gets inlined. Only exists so to communicate that it\n// doesn't matter which bit is selected; you can pick any bit without\n// affecting the algorithms where its used. Here I'm using\n// getHighestPriorityLane because it requires the fewest operations.\nreturn getHighestPriorityLane(lanes);}function pickArbitraryLaneIndex(lanes){return 31-clz32(lanes);}function laneToIndex(lane){return pickArbitraryLaneIndex(lane);}function includesSomeLane(a,b){return(a&b)!==NoLanes;}function isSubsetOfLanes(set,subset){return(set&subset)===subset;}function mergeLanes(a,b){return a|b;}function removeLanes(set,subset){return set&~subset;}function intersectLanes(a,b){return a&b;}// Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\nfunction laneToLanes(lane){return lane;}function higherPriorityLane(a,b){// This works because the bit ranges decrease in priority as you go left.\nreturn a!==NoLane&&a<b?a:b;}function createLaneMap(initial){// Intentionally pushing one by one.\n// https://v8.dev/blog/elements-kinds#avoid-creating-holes\nvar laneMap=[];for(var i=0;i<TotalLanes;i++){laneMap.push(initial);}return laneMap;}function markRootUpdated(root,updateLane,eventTime){root.pendingLanes|=updateLane;// If there are any suspended transitions, it's possible this new update\n// could unblock them. Clear the suspended lanes so that we can try rendering\n// them again.\n//\n// TODO: We really only need to unsuspend only lanes that are in the\n// `subtreeLanes` of the updated fiber, or the update lanes of the return\n// path. This would exclude suspended updates in an unrelated sibling tree,\n// since there's no way for this update to unblock it.\n//\n// We don't do this if the incoming update is idle, because we never process\n// idle updates until after all the regular updates have finished; there's no\n// way it could unblock a transition.\nif(updateLane!==IdleLane){root.suspendedLanes=NoLanes;root.pingedLanes=NoLanes;}var eventTimes=root.eventTimes;var index=laneToIndex(updateLane);// We can always overwrite an existing timestamp because we prefer the most\n// recent event, and we assume time is monotonically increasing.\neventTimes[index]=eventTime;}function markRootSuspended(root,suspendedLanes){root.suspendedLanes|=suspendedLanes;root.pingedLanes&=~suspendedLanes;// The suspended lanes are no longer CPU-bound. Clear their expiration times.\nvar expirationTimes=root.expirationTimes;var lanes=suspendedLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;expirationTimes[index]=NoTimestamp;lanes&=~lane;}}function markRootPinged(root,pingedLanes,eventTime){root.pingedLanes|=root.suspendedLanes&pingedLanes;}function markRootFinished(root,remainingLanes){var noLongerPendingLanes=root.pendingLanes&~remainingLanes;root.pendingLanes=remainingLanes;// Let's try everything again\nroot.suspendedLanes=0;root.pingedLanes=0;root.expiredLanes&=remainingLanes;root.mutableReadLanes&=remainingLanes;root.entangledLanes&=remainingLanes;var entanglements=root.entanglements;var eventTimes=root.eventTimes;var expirationTimes=root.expirationTimes;// Clear the lanes that no longer have pending work\nvar lanes=noLongerPendingLanes;while(lanes>0){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;entanglements[index]=NoLanes;eventTimes[index]=NoTimestamp;expirationTimes[index]=NoTimestamp;lanes&=~lane;}}function markRootEntangled(root,entangledLanes){// In addition to entangling each of the given lanes with each other, we also\n// have to consider _transitive_ entanglements. For each lane that is already\n// entangled with *any* of the given lanes, that lane is now transitively\n// entangled with *all* the given lanes.\n//\n// Translated: If C is entangled with A, then entangling A with B also\n// entangles C with B.\n//\n// If this is hard to grasp, it might help to intentionally break this\n// function and look at the tests that fail in ReactTransition-test.js. Try\n// commenting out one of the conditions below.\nvar rootEntangledLanes=root.entangledLanes|=entangledLanes;var entanglements=root.entanglements;var lanes=rootEntangledLanes;while(lanes){var index=pickArbitraryLaneIndex(lanes);var lane=1<<index;if(// Is this one of the newly entangled lanes?\nlane&entangledLanes|// Is this lane transitively entangled with the newly entangled lanes?\nentanglements[index]&entangledLanes){entanglements[index]|=entangledLanes;}lanes&=~lane;}}function getBumpedLaneForHydration(root,renderLanes){var renderLane=getHighestPriorityLane(renderLanes);var lane;switch(renderLane){case InputContinuousLane:lane=InputContinuousHydrationLane;break;case DefaultLane:lane=DefaultHydrationLane;break;case TransitionLane1:case TransitionLane2:case TransitionLane3:case TransitionLane4:case TransitionLane5:case TransitionLane6:case TransitionLane7:case TransitionLane8:case TransitionLane9:case TransitionLane10:case TransitionLane11:case TransitionLane12:case TransitionLane13:case TransitionLane14:case TransitionLane15:case TransitionLane16:case RetryLane1:case RetryLane2:case RetryLane3:case RetryLane4:case RetryLane5:lane=TransitionHydrationLane;break;case IdleLane:lane=IdleHydrationLane;break;default:// Everything else is already either a hydration lane, or shouldn't\n// be retried at a hydration lane.\nlane=NoLane;break;}// Check if the lane we chose is suspended. If so, that indicates that we\n// already attempted and failed to hydrate at that level. Also check if we're\n// already rendering that lane, which is rare but could happen.\nif((lane&(root.suspendedLanes|renderLanes))!==NoLane){// Give up trying to hydrate and fall back to client render.\nreturn NoLane;}return lane;}function addFiberToLanesMap(root,fiber,lanes){if(!isDevToolsPresent){return;}var pendingUpdatersLaneMap=root.pendingUpdatersLaneMap;while(lanes>0){var index=laneToIndex(lanes);var lane=1<<index;var updaters=pendingUpdatersLaneMap[index];updaters.add(fiber);lanes&=~lane;}}function movePendingFibersToMemoized(root,lanes){if(!isDevToolsPresent){return;}var pendingUpdatersLaneMap=root.pendingUpdatersLaneMap;var memoizedUpdaters=root.memoizedUpdaters;while(lanes>0){var index=laneToIndex(lanes);var lane=1<<index;var updaters=pendingUpdatersLaneMap[index];if(updaters.size>0){updaters.forEach(function(fiber){var alternate=fiber.alternate;if(alternate===null||!memoizedUpdaters.has(alternate)){memoizedUpdaters.add(fiber);}});updaters.clear();}lanes&=~lane;}}var DiscreteEventPriority=SyncLane;var ContinuousEventPriority=InputContinuousLane;var DefaultEventPriority=DefaultLane;var IdleEventPriority=IdleLane;var currentUpdatePriority=NoLane;function getCurrentUpdatePriority(){return currentUpdatePriority;}function setCurrentUpdatePriority(newPriority){currentUpdatePriority=newPriority;}function runWithPriority(priority,fn){var previousPriority=currentUpdatePriority;try{currentUpdatePriority=priority;return fn();}finally{currentUpdatePriority=previousPriority;}}function higherEventPriority(a,b){return a!==0&&a<b?a:b;}function lowerEventPriority(a,b){return a===0||a>b?a:b;}function isHigherEventPriority(a,b){return a!==0&&a<b;}function lanesToEventPriority(lanes){var lane=getHighestPriorityLane(lanes);if(!isHigherEventPriority(DiscreteEventPriority,lane)){return DiscreteEventPriority;}if(!isHigherEventPriority(ContinuousEventPriority,lane)){return ContinuousEventPriority;}if(includesNonIdleWork(lane)){return DefaultEventPriority;}return IdleEventPriority;}// This module only exists as an ESM wrapper around the external CommonJS\nvar scheduleCallback=Scheduler.unstable_scheduleCallback;var cancelCallback=Scheduler.unstable_cancelCallback;var shouldYield=Scheduler.unstable_shouldYield;var requestPaint=Scheduler.unstable_requestPaint;var now$1=Scheduler.unstable_now;var ImmediatePriority=Scheduler.unstable_ImmediatePriority;var UserBlockingPriority=Scheduler.unstable_UserBlockingPriority;var NormalPriority=Scheduler.unstable_NormalPriority;var IdlePriority=Scheduler.unstable_IdlePriority;// this doesn't actually exist on the scheduler, but it *does*\n// on scheduler/unstable_mock, which we'll need for internal testing\nvar unstable_yieldValue=Scheduler.unstable_yieldValue;var unstable_setDisableYieldValue=Scheduler.unstable_setDisableYieldValue;var rendererID=null;var injectedHook=null;var injectedProfilingHooks=null;var hasLoggedError=false;var isDevToolsPresent=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!=='undefined';function injectInternals(internals){if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__==='undefined'){// No DevTools\nreturn false;}var hook=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(hook.isDisabled){// This isn't a real property on the hook, but it can be set to opt out\n// of DevTools integration and associated warnings and logs.\n// https://github.com/facebook/react/issues/3877\nreturn true;}if(!hook.supportsFiber){{error('The installed version of React DevTools is too old and will not work '+'with the current version of React. Please update React DevTools. '+'https://reactjs.org/link/react-devtools');}// DevTools exists, even though it doesn't support Fiber.\nreturn true;}try{if(enableSchedulingProfiler){// Conditionally inject these hooks only if Timeline profiler is supported by this build.\n// This gives DevTools a way to feature detect that isn't tied to version number\n// (since profiling and timeline are controlled by different feature flags).\ninternals=assign({},internals,{getLaneLabelMap:getLaneLabelMap,injectProfilingHooks:injectProfilingHooks});}rendererID=hook.inject(internals);// We have successfully injected, so now it is safe to set up hooks.\ninjectedHook=hook;}catch(err){// Catch all errors because it is unsafe to throw during initialization.\n{error('React instrumentation encountered an error: %s.',err);}}if(hook.checkDCE){// This is the real DevTools.\nreturn true;}else{// This is likely a hook installed by Fast Refresh runtime.\nreturn false;}}function onScheduleRoot(root,children){{if(injectedHook&&typeof injectedHook.onScheduleFiberRoot==='function'){try{injectedHook.onScheduleFiberRoot(rendererID,root,children);}catch(err){if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onCommitRoot(root,eventPriority){if(injectedHook&&typeof injectedHook.onCommitFiberRoot==='function'){try{var didError=(root.current.flags&DidCapture)===DidCapture;if(enableProfilerTimer){var schedulerPriority;switch(eventPriority){case DiscreteEventPriority:schedulerPriority=ImmediatePriority;break;case ContinuousEventPriority:schedulerPriority=UserBlockingPriority;break;case DefaultEventPriority:schedulerPriority=NormalPriority;break;case IdleEventPriority:schedulerPriority=IdlePriority;break;default:schedulerPriority=NormalPriority;break;}injectedHook.onCommitFiberRoot(rendererID,root,schedulerPriority,didError);}else{injectedHook.onCommitFiberRoot(rendererID,root,undefined,didError);}}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onPostCommitRoot(root){if(injectedHook&&typeof injectedHook.onPostCommitFiberRoot==='function'){try{injectedHook.onPostCommitFiberRoot(rendererID,root);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function onCommitUnmount(fiber){if(injectedHook&&typeof injectedHook.onCommitFiberUnmount==='function'){try{injectedHook.onCommitFiberUnmount(rendererID,fiber);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}function setIsStrictModeForDevtools(newIsStrictMode){{if(typeof unstable_yieldValue==='function'){// We're in a test because Scheduler.unstable_yieldValue only exists\n// in SchedulerMock. To reduce the noise in strict mode tests,\n// suppress warnings and disable scheduler yielding during the double render\nunstable_setDisableYieldValue(newIsStrictMode);setSuppressWarning(newIsStrictMode);}if(injectedHook&&typeof injectedHook.setStrictMode==='function'){try{injectedHook.setStrictMode(rendererID,newIsStrictMode);}catch(err){{if(!hasLoggedError){hasLoggedError=true;error('React instrumentation encountered an error: %s',err);}}}}}}// Profiler API hooks\nfunction injectProfilingHooks(profilingHooks){injectedProfilingHooks=profilingHooks;}function getLaneLabelMap(){{var map=new Map();var lane=1;for(var index=0;index<TotalLanes;index++){var label=getLabelForLane(lane);map.set(lane,label);lane*=2;}return map;}}function markCommitStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markCommitStarted==='function'){injectedProfilingHooks.markCommitStarted(lanes);}}}function markCommitStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markCommitStopped==='function'){injectedProfilingHooks.markCommitStopped();}}}function markComponentRenderStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentRenderStarted==='function'){injectedProfilingHooks.markComponentRenderStarted(fiber);}}}function markComponentRenderStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentRenderStopped==='function'){injectedProfilingHooks.markComponentRenderStopped();}}}function markComponentPassiveEffectMountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted==='function'){injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);}}}function markComponentPassiveEffectMountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped==='function'){injectedProfilingHooks.markComponentPassiveEffectMountStopped();}}}function markComponentPassiveEffectUnmountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted==='function'){injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);}}}function markComponentPassiveEffectUnmountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped==='function'){injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();}}}function markComponentLayoutEffectMountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted==='function'){injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);}}}function markComponentLayoutEffectMountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped==='function'){injectedProfilingHooks.markComponentLayoutEffectMountStopped();}}}function markComponentLayoutEffectUnmountStarted(fiber){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted==='function'){injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);}}}function markComponentLayoutEffectUnmountStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped==='function'){injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();}}}function markComponentErrored(fiber,thrownValue,lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentErrored==='function'){injectedProfilingHooks.markComponentErrored(fiber,thrownValue,lanes);}}}function markComponentSuspended(fiber,wakeable,lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markComponentSuspended==='function'){injectedProfilingHooks.markComponentSuspended(fiber,wakeable,lanes);}}}function markLayoutEffectsStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markLayoutEffectsStarted==='function'){injectedProfilingHooks.markLayoutEffectsStarted(lanes);}}}function markLayoutEffectsStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markLayoutEffectsStopped==='function'){injectedProfilingHooks.markLayoutEffectsStopped();}}}function markPassiveEffectsStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markPassiveEffectsStarted==='function'){injectedProfilingHooks.markPassiveEffectsStarted(lanes);}}}function markPassiveEffectsStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markPassiveEffectsStopped==='function'){injectedProfilingHooks.markPassiveEffectsStopped();}}}function markRenderStarted(lanes){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderStarted==='function'){injectedProfilingHooks.markRenderStarted(lanes);}}}function markRenderYielded(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderYielded==='function'){injectedProfilingHooks.markRenderYielded();}}}function markRenderStopped(){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderStopped==='function'){injectedProfilingHooks.markRenderStopped();}}}function markRenderScheduled(lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markRenderScheduled==='function'){injectedProfilingHooks.markRenderScheduled(lane);}}}function markForceUpdateScheduled(fiber,lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markForceUpdateScheduled==='function'){injectedProfilingHooks.markForceUpdateScheduled(fiber,lane);}}}function markStateUpdateScheduled(fiber,lane){{if(injectedProfilingHooks!==null&&typeof injectedProfilingHooks.markStateUpdateScheduled==='function'){injectedProfilingHooks.markStateUpdateScheduled(fiber,lane);}}}/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */function is(x,y){return x===y&&(x!==0||1/x===1/y)||x!==x&&y!==y// eslint-disable-line no-self-compare\n;}var objectIs=typeof Object.is==='function'?Object.is:is;var syncQueue=null;var includesLegacySyncCallbacks=false;var isFlushingSyncQueue=false;function scheduleSyncCallback(callback){// Push this callback into an internal queue. We'll flush these either in\n// the next tick, or earlier if something calls `flushSyncCallbackQueue`.\nif(syncQueue===null){syncQueue=[callback];}else{// Push onto existing queue. Don't need to schedule a callback because\n// we already scheduled one when we created the queue.\nsyncQueue.push(callback);}}function scheduleLegacySyncCallback(callback){includesLegacySyncCallbacks=true;scheduleSyncCallback(callback);}function flushSyncCallbacksOnlyInLegacyMode(){// Only flushes the queue if there's a legacy sync callback scheduled.\n// TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n// it might make more sense for the queue to be a list of roots instead of a\n// list of generic callbacks. Then we can have two: one for legacy roots, one\n// for concurrent roots. And this method would only flush the legacy ones.\nif(includesLegacySyncCallbacks){flushSyncCallbacks();}}function flushSyncCallbacks(){if(!isFlushingSyncQueue&&syncQueue!==null){// Prevent re-entrance.\nisFlushingSyncQueue=true;var i=0;var previousUpdatePriority=getCurrentUpdatePriority();try{var isSync=true;var queue=syncQueue;// TODO: Is this necessary anymore? The only user code that runs in this\n// queue is in the render or commit phases.\nsetCurrentUpdatePriority(DiscreteEventPriority);for(;i<queue.length;i++){var callback=queue[i];do{callback=callback(isSync);}while(callback!==null);}syncQueue=null;includesLegacySyncCallbacks=false;}catch(error){// If something throws, leave the remaining callbacks on the queue.\nif(syncQueue!==null){syncQueue=syncQueue.slice(i+1);}// Resume flushing in the next tick\nscheduleCallback(ImmediatePriority,flushSyncCallbacks);throw error;}finally{setCurrentUpdatePriority(previousUpdatePriority);isFlushingSyncQueue=false;}}return null;}// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nfunction isRootDehydrated(root){var currentState=root.current.memoizedState;return currentState.isDehydrated;}var ReactCurrentBatchConfig=ReactSharedInternals.ReactCurrentBatchConfig;var NoTransition=null;function requestCurrentTransition(){return ReactCurrentBatchConfig.transition;}/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */function shallowEqual(objA,objB){if(objectIs(objA,objB)){return true;}if(typeof objA!=='object'||objA===null||typeof objB!=='object'||objB===null){return false;}var keysA=Object.keys(objA);var keysB=Object.keys(objB);if(keysA.length!==keysB.length){return false;}// Test for A's keys different from B.\nfor(var i=0;i<keysA.length;i++){var currentKey=keysA[i];if(!hasOwnProperty.call(objB,currentKey)||!objectIs(objA[currentKey],objB[currentKey])){return false;}}return true;}function describeFiber(fiber){var owner=fiber._debugOwner?fiber._debugOwner.type:null;var source=fiber._debugSource;switch(fiber.tag){case HostComponent:return describeBuiltInComponentFrame(fiber.type);case LazyComponent:return describeBuiltInComponentFrame('Lazy');case SuspenseComponent:return describeBuiltInComponentFrame('Suspense');case SuspenseListComponent:return describeBuiltInComponentFrame('SuspenseList');case FunctionComponent:case IndeterminateComponent:case SimpleMemoComponent:return describeFunctionComponentFrame(fiber.type);case ForwardRef:return describeFunctionComponentFrame(fiber.type.render);case ClassComponent:return describeClassComponentFrame(fiber.type);default:return'';}}function getStackByFiberInDevAndProd(workInProgress){try{var info='';var node=workInProgress;do{info+=describeFiber(node);node=node.return;}while(node);return info;}catch(x){return'\\nError generating stack: '+x.message+'\\n'+x.stack;}}var ReactDebugCurrentFrame$1=ReactSharedInternals.ReactDebugCurrentFrame;var current=null;var isRendering=false;function getCurrentFiberOwnerNameInDevOrNull(){{if(current===null){return null;}var owner=current._debugOwner;if(owner!==null&&typeof owner!=='undefined'){return getComponentNameFromFiber(owner);}}return null;}function getCurrentFiberStackInDev(){{if(current===null){return'';}// Safe because if current fiber exists, we are reconciling,\n// and it is guaranteed to be the work-in-progress version.\nreturn getStackByFiberInDevAndProd(current);}}function resetCurrentFiber(){{ReactDebugCurrentFrame$1.getCurrentStack=null;current=null;isRendering=false;}}function setCurrentFiber(fiber){{ReactDebugCurrentFrame$1.getCurrentStack=getCurrentFiberStackInDev;current=fiber;isRendering=false;}}function setIsRendering(rendering){{isRendering=rendering;}}var ReactStrictModeWarnings={recordUnsafeLifecycleWarnings:function(fiber,instance){},flushPendingUnsafeLifecycleWarnings:function(){},recordLegacyContextWarning:function(fiber,instance){},flushLegacyContextWarning:function(){},discardPendingWarnings:function(){}};{var findStrictRoot=function(fiber){var maybeStrictRoot=null;var node=fiber;while(node!==null){if(node.mode&StrictLegacyMode){maybeStrictRoot=node;}node=node.return;}return maybeStrictRoot;};var setToSortedString=function(set){var array=[];set.forEach(function(value){array.push(value);});return array.sort().join(', ');};var pendingComponentWillMountWarnings=[];var pendingUNSAFE_ComponentWillMountWarnings=[];var pendingComponentWillReceivePropsWarnings=[];var pendingUNSAFE_ComponentWillReceivePropsWarnings=[];var pendingComponentWillUpdateWarnings=[];var pendingUNSAFE_ComponentWillUpdateWarnings=[];// Tracks components we have already warned about.\nvar didWarnAboutUnsafeLifecycles=new Set();ReactStrictModeWarnings.recordUnsafeLifecycleWarnings=function(fiber,instance){// Dedupe strategy: Warn once per component.\nif(didWarnAboutUnsafeLifecycles.has(fiber.type)){return;}if(typeof instance.componentWillMount==='function'&&// Don't warn about react-lifecycles-compat polyfilled components.\ninstance.componentWillMount.__suppressDeprecationWarning!==true){pendingComponentWillMountWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillMount==='function'){pendingUNSAFE_ComponentWillMountWarnings.push(fiber);}if(typeof instance.componentWillReceiveProps==='function'&&instance.componentWillReceiveProps.__suppressDeprecationWarning!==true){pendingComponentWillReceivePropsWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillReceiveProps==='function'){pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);}if(typeof instance.componentWillUpdate==='function'&&instance.componentWillUpdate.__suppressDeprecationWarning!==true){pendingComponentWillUpdateWarnings.push(fiber);}if(fiber.mode&StrictLegacyMode&&typeof instance.UNSAFE_componentWillUpdate==='function'){pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);}};ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings=function(){// We do an initial pass to gather component names\nvar componentWillMountUniqueNames=new Set();if(pendingComponentWillMountWarnings.length>0){pendingComponentWillMountWarnings.forEach(function(fiber){componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillMountWarnings=[];}var UNSAFE_componentWillMountUniqueNames=new Set();if(pendingUNSAFE_ComponentWillMountWarnings.length>0){pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber){UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillMountWarnings=[];}var componentWillReceivePropsUniqueNames=new Set();if(pendingComponentWillReceivePropsWarnings.length>0){pendingComponentWillReceivePropsWarnings.forEach(function(fiber){componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillReceivePropsWarnings=[];}var UNSAFE_componentWillReceivePropsUniqueNames=new Set();if(pendingUNSAFE_ComponentWillReceivePropsWarnings.length>0){pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber){UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillReceivePropsWarnings=[];}var componentWillUpdateUniqueNames=new Set();if(pendingComponentWillUpdateWarnings.length>0){pendingComponentWillUpdateWarnings.forEach(function(fiber){componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingComponentWillUpdateWarnings=[];}var UNSAFE_componentWillUpdateUniqueNames=new Set();if(pendingUNSAFE_ComponentWillUpdateWarnings.length>0){pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber){UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutUnsafeLifecycles.add(fiber.type);});pendingUNSAFE_ComponentWillUpdateWarnings=[];}// Finally, we flush all the warnings\n// UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\nif(UNSAFE_componentWillMountUniqueNames.size>0){var sortedNames=setToSortedString(UNSAFE_componentWillMountUniqueNames);error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n'+'* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n'+'\\nPlease update the following components: %s',sortedNames);}if(UNSAFE_componentWillReceivePropsUniqueNames.size>0){var _sortedNames=setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended '+'and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n'+'* Move data fetching code or side effects to componentDidUpdate.\\n'+\"* If you're updating state whenever props change, \"+'refactor your code to use memoization techniques or move it to '+'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n'+'\\nPlease update the following components: %s',_sortedNames);}if(UNSAFE_componentWillUpdateUniqueNames.size>0){var _sortedNames2=setToSortedString(UNSAFE_componentWillUpdateUniqueNames);error('Using UNSAFE_componentWillUpdate in strict mode is not recommended '+'and may indicate bugs in your code. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n'+'* Move data fetching code or side effects to componentDidUpdate.\\n'+'\\nPlease update the following components: %s',_sortedNames2);}if(componentWillMountUniqueNames.size>0){var _sortedNames3=setToSortedString(componentWillMountUniqueNames);warn('componentWillMount has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n'+'* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n'+'* Rename componentWillMount to UNSAFE_componentWillMount to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n'+'\\nPlease update the following components: %s',_sortedNames3);}if(componentWillReceivePropsUniqueNames.size>0){var _sortedNames4=setToSortedString(componentWillReceivePropsUniqueNames);warn('componentWillReceiveProps has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n'+'* Move data fetching code or side effects to componentDidUpdate.\\n'+\"* If you're updating state whenever props change, refactor your \"+'code to use memoization techniques or move it to '+'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n'+'* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n'+'\\nPlease update the following components: %s',_sortedNames4);}if(componentWillUpdateUniqueNames.size>0){var _sortedNames5=setToSortedString(componentWillUpdateUniqueNames);warn('componentWillUpdate has been renamed, and is not recommended for use. '+'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n'+'* Move data fetching code or side effects to componentDidUpdate.\\n'+'* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress '+'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. '+'To rename all deprecated lifecycles to their new names, you can run '+'`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n'+'\\nPlease update the following components: %s',_sortedNames5);}};var pendingLegacyContextWarning=new Map();// Tracks components we have already warned about.\nvar didWarnAboutLegacyContext=new Set();ReactStrictModeWarnings.recordLegacyContextWarning=function(fiber,instance){var strictRoot=findStrictRoot(fiber);if(strictRoot===null){error('Expected to find a StrictMode component in a strict mode tree. '+'This error is likely caused by a bug in React. Please file an issue.');return;}// Dedup strategy: Warn once per component.\nif(didWarnAboutLegacyContext.has(fiber.type)){return;}var warningsForRoot=pendingLegacyContextWarning.get(strictRoot);if(fiber.type.contextTypes!=null||fiber.type.childContextTypes!=null||instance!==null&&typeof instance.getChildContext==='function'){if(warningsForRoot===undefined){warningsForRoot=[];pendingLegacyContextWarning.set(strictRoot,warningsForRoot);}warningsForRoot.push(fiber);}};ReactStrictModeWarnings.flushLegacyContextWarning=function(){pendingLegacyContextWarning.forEach(function(fiberArray,strictRoot){if(fiberArray.length===0){return;}var firstFiber=fiberArray[0];var uniqueNames=new Set();fiberArray.forEach(function(fiber){uniqueNames.add(getComponentNameFromFiber(fiber)||'Component');didWarnAboutLegacyContext.add(fiber.type);});var sortedNames=setToSortedString(uniqueNames);try{setCurrentFiber(firstFiber);error('Legacy context API has been detected within a strict-mode tree.'+'\\n\\nThe old API will be supported in all 16.x releases, but applications '+'using it should migrate to the new version.'+'\\n\\nPlease update the following components: %s'+'\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context',sortedNames);}finally{resetCurrentFiber();}});};ReactStrictModeWarnings.discardPendingWarnings=function(){pendingComponentWillMountWarnings=[];pendingUNSAFE_ComponentWillMountWarnings=[];pendingComponentWillReceivePropsWarnings=[];pendingUNSAFE_ComponentWillReceivePropsWarnings=[];pendingComponentWillUpdateWarnings=[];pendingUNSAFE_ComponentWillUpdateWarnings=[];pendingLegacyContextWarning=new Map();};}/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value){{// toStringTag is needed for namespaced types like Temporal.Instant\nvar hasToStringTag=typeof Symbol==='function'&&Symbol.toStringTag;var type=hasToStringTag&&value[Symbol.toStringTag]||value.constructor.name||'Object';return type;}}// $FlowFixMe only called in DEV, so void return is not possible.\nfunction willCoercionThrow(value){{try{testStringCoercion(value);return false;}catch(e){return true;}}}function testStringCoercion(value){// If you ended up here by following an exception call stack, here's what's\n// happened: you supplied an object or symbol value to React (as a prop, key,\n// DOM attribute, CSS property, string ref, etc.) and when React tried to\n// coerce it to a string using `'' + value`, an exception was thrown.\n//\n// The most common types that will cause this exception are `Symbol` instances\n// and Temporal objects like `Temporal.Instant`. But any object that has a\n// `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n// exception. (Library authors do this to prevent users from using built-in\n// numeric operators like `+` or comparison operators like `>=` because custom\n// methods are needed to perform accurate arithmetic or comparison.)\n//\n// To fix the problem, coerce this object or symbol value to a string before\n// passing it to React. The most reliable way is usually `String(value)`.\n//\n// To find which value is throwing, check the browser or debugger console.\n// Before this exception was thrown, there should be `console.error` output\n// that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n// problem and how that type was used: key, atrribute, input value prop, etc.\n// In most cases, this console output also shows the component and its\n// ancestor components where the exception happened.\n//\n// eslint-disable-next-line react-internal/safe-string-coercion\nreturn''+value;}function checkKeyStringCoercion(value){{if(willCoercionThrow(value)){error('The provided key is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)\n}}}function checkPropStringCoercion(value,propName){{if(willCoercionThrow(value)){error('The provided `%s` prop is an unsupported type %s.'+' This value must be coerced to a string before before using it here.',propName,typeName(value));return testStringCoercion(value);// throw (to help callers find troubleshooting comments)\n}}}function resolveDefaultProps(Component,baseProps){if(Component&&Component.defaultProps){// Resolve default props. Taken from ReactElement\nvar props=assign({},baseProps);var defaultProps=Component.defaultProps;for(var propName in defaultProps){if(props[propName]===undefined){props[propName]=defaultProps[propName];}}return props;}return baseProps;}var valueCursor=createCursor(null);var rendererSigil;{// Use this to detect multiple renderers using the same context\nrendererSigil={};}var currentlyRenderingFiber=null;var lastContextDependency=null;var lastFullyObservedContext=null;var isDisallowedContextReadInDEV=false;function resetContextDependencies(){// This is called right before React yields execution, to ensure `readContext`\n// cannot be called outside the render phase.\ncurrentlyRenderingFiber=null;lastContextDependency=null;lastFullyObservedContext=null;{isDisallowedContextReadInDEV=false;}}function enterDisallowedContextReadInDEV(){{isDisallowedContextReadInDEV=true;}}function exitDisallowedContextReadInDEV(){{isDisallowedContextReadInDEV=false;}}function pushProvider(providerFiber,context,nextValue){if(isPrimaryRenderer){push(valueCursor,context._currentValue,providerFiber);context._currentValue=nextValue;{if(context._currentRenderer!==undefined&&context._currentRenderer!==null&&context._currentRenderer!==rendererSigil){error('Detected multiple renderers concurrently rendering the '+'same context provider. This is currently unsupported.');}context._currentRenderer=rendererSigil;}}else{push(valueCursor,context._currentValue2,providerFiber);context._currentValue2=nextValue;{if(context._currentRenderer2!==undefined&&context._currentRenderer2!==null&&context._currentRenderer2!==rendererSigil){error('Detected multiple renderers concurrently rendering the '+'same context provider. This is currently unsupported.');}context._currentRenderer2=rendererSigil;}}}function popProvider(context,providerFiber){var currentValue=valueCursor.current;pop(valueCursor,providerFiber);if(isPrimaryRenderer){{context._currentValue=currentValue;}}else{{context._currentValue2=currentValue;}}}function scheduleContextWorkOnParentPath(parent,renderLanes,propagationRoot){// Update the child lanes of all the ancestors, including the alternates.\nvar node=parent;while(node!==null){var alternate=node.alternate;if(!isSubsetOfLanes(node.childLanes,renderLanes)){node.childLanes=mergeLanes(node.childLanes,renderLanes);if(alternate!==null){alternate.childLanes=mergeLanes(alternate.childLanes,renderLanes);}}else if(alternate!==null&&!isSubsetOfLanes(alternate.childLanes,renderLanes)){alternate.childLanes=mergeLanes(alternate.childLanes,renderLanes);}if(node===propagationRoot){break;}node=node.return;}{if(node!==propagationRoot){error('Expected to find the propagation root when scheduling context work. '+'This error is likely caused by a bug in React. Please file an issue.');}}}function propagateContextChange(workInProgress,context,renderLanes){{propagateContextChange_eager(workInProgress,context,renderLanes);}}function propagateContextChange_eager(workInProgress,context,renderLanes){var fiber=workInProgress.child;if(fiber!==null){// Set the return pointer of the child to the work-in-progress fiber.\nfiber.return=workInProgress;}while(fiber!==null){var nextFiber=void 0;// Visit this fiber.\nvar list=fiber.dependencies;if(list!==null){nextFiber=fiber.child;var dependency=list.firstContext;while(dependency!==null){// Check if the context matches.\nif(dependency.context===context){// Match! Schedule an update on this fiber.\nif(fiber.tag===ClassComponent){// Schedule a force update on the work-in-progress.\nvar lane=pickArbitraryLane(renderLanes);var update=createUpdate(NoTimestamp,lane);update.tag=ForceUpdate;// TODO: Because we don't have a work-in-progress, this will add the\n// update to the current fiber, too, which means it will persist even if\n// this render is thrown away. Since it's a race condition, not sure it's\n// worth fixing.\n// Inlined `enqueueUpdate` to remove interleaved update check\nvar updateQueue=fiber.updateQueue;if(updateQueue===null);else{var sharedQueue=updateQueue.shared;var pending=sharedQueue.pending;if(pending===null){// This is the first update. Create a circular list.\nupdate.next=update;}else{update.next=pending.next;pending.next=update;}sharedQueue.pending=update;}}fiber.lanes=mergeLanes(fiber.lanes,renderLanes);var alternate=fiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,renderLanes);}scheduleContextWorkOnParentPath(fiber.return,renderLanes,workInProgress);// Mark the updated lanes on the list, too.\nlist.lanes=mergeLanes(list.lanes,renderLanes);// Since we already found a match, we can stop traversing the\n// dependency list.\nbreak;}dependency=dependency.next;}}else if(fiber.tag===ContextProvider){// Don't scan deeper if this is a matching provider\nnextFiber=fiber.type===workInProgress.type?null:fiber.child;}else if(fiber.tag===DehydratedFragment){// If a dehydrated suspense boundary is in this subtree, we don't know\n// if it will have any context consumers in it. The best we can do is\n// mark it as having updates.\nvar parentSuspense=fiber.return;if(parentSuspense===null){throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');}parentSuspense.lanes=mergeLanes(parentSuspense.lanes,renderLanes);var _alternate=parentSuspense.alternate;if(_alternate!==null){_alternate.lanes=mergeLanes(_alternate.lanes,renderLanes);}// This is intentionally passing this fiber as the parent\n// because we want to schedule this fiber as having work\n// on its children. We'll use the childLanes on\n// this fiber to indicate that a context has changed.\nscheduleContextWorkOnParentPath(parentSuspense,renderLanes,workInProgress);nextFiber=fiber.sibling;}else{// Traverse down.\nnextFiber=fiber.child;}if(nextFiber!==null){// Set the return pointer of the child to the work-in-progress fiber.\nnextFiber.return=fiber;}else{// No child. Traverse to next sibling.\nnextFiber=fiber;while(nextFiber!==null){if(nextFiber===workInProgress){// We're back to the root of this subtree. Exit.\nnextFiber=null;break;}var sibling=nextFiber.sibling;if(sibling!==null){// Set the return pointer of the sibling to the work-in-progress fiber.\nsibling.return=nextFiber.return;nextFiber=sibling;break;}// No more siblings. Traverse up.\nnextFiber=nextFiber.return;}}fiber=nextFiber;}}function prepareToReadContext(workInProgress,renderLanes){currentlyRenderingFiber=workInProgress;lastContextDependency=null;lastFullyObservedContext=null;var dependencies=workInProgress.dependencies;if(dependencies!==null){{var firstContext=dependencies.firstContext;if(firstContext!==null){if(includesSomeLane(dependencies.lanes,renderLanes)){// Context list has a pending update. Mark that this fiber performed work.\nmarkWorkInProgressReceivedUpdate();}// Reset the work-in-progress list\ndependencies.firstContext=null;}}}}function readContext(context){{// This warning would fire if you read context inside a Hook like useMemo.\n// Unlike the class check below, it's not enforced in production for perf.\nif(isDisallowedContextReadInDEV){error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');}}var value=isPrimaryRenderer?context._currentValue:context._currentValue2;if(lastFullyObservedContext===context);else{var contextItem={context:context,memoizedValue:value,next:null};if(lastContextDependency===null){if(currentlyRenderingFiber===null){throw new Error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');}// This is the first dependency for this component. Create a new list.\nlastContextDependency=contextItem;currentlyRenderingFiber.dependencies={lanes:NoLanes,firstContext:contextItem};}else{// Append a new context item.\nlastContextDependency=lastContextDependency.next=contextItem;}}return value;}// An array of all update queues that received updates during the current\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\nvar interleavedQueues=null;function pushInterleavedQueue(queue){if(interleavedQueues===null){interleavedQueues=[queue];}else{interleavedQueues.push(queue);}}function enqueueInterleavedUpdates(){// Transfer the interleaved updates onto the main queue. Each queue has a\n// `pending` field and an `interleaved` field. When they are not null, they\n// point to the last node in a circular linked list. We need to append the\n// interleaved list to the end of the pending list by joining them into a\n// single, circular list.\nif(interleavedQueues!==null){for(var i=0;i<interleavedQueues.length;i++){var queue=interleavedQueues[i];var lastInterleavedUpdate=queue.interleaved;if(lastInterleavedUpdate!==null){queue.interleaved=null;var firstInterleavedUpdate=lastInterleavedUpdate.next;var lastPendingUpdate=queue.pending;if(lastPendingUpdate!==null){var firstPendingUpdate=lastPendingUpdate.next;lastPendingUpdate.next=firstInterleavedUpdate;lastInterleavedUpdate.next=firstPendingUpdate;}queue.pending=lastInterleavedUpdate;}}interleavedQueues=null;}}var UpdateState=0;var ReplaceState=1;var ForceUpdate=2;var CaptureUpdate=3;// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nvar hasForceUpdate=false;var didWarnUpdateInsideUpdate;var currentlyProcessingQueue;{didWarnUpdateInsideUpdate=false;currentlyProcessingQueue=null;}function initializeUpdateQueue(fiber){var queue={baseState:fiber.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:NoLanes},effects:null};fiber.updateQueue=queue;}function cloneUpdateQueue(current,workInProgress){// Clone the update queue from current. Unless it's already a clone.\nvar queue=workInProgress.updateQueue;var currentQueue=current.updateQueue;if(queue===currentQueue){var clone={baseState:currentQueue.baseState,firstBaseUpdate:currentQueue.firstBaseUpdate,lastBaseUpdate:currentQueue.lastBaseUpdate,shared:currentQueue.shared,effects:currentQueue.effects};workInProgress.updateQueue=clone;}}function createUpdate(eventTime,lane){var update={eventTime:eventTime,lane:lane,tag:UpdateState,payload:null,callback:null,next:null};return update;}function enqueueUpdate(fiber,update,lane){var updateQueue=fiber.updateQueue;if(updateQueue===null){// Only occurs if the fiber has been unmounted.\nreturn;}var sharedQueue=updateQueue.shared;if(isInterleavedUpdate(fiber)){var interleaved=sharedQueue.interleaved;if(interleaved===null){// This is the first update. Create a circular list.\nupdate.next=update;// At the end of the current render, this queue's interleaved updates will\n// be transferred to the pending queue.\npushInterleavedQueue(sharedQueue);}else{update.next=interleaved.next;interleaved.next=update;}sharedQueue.interleaved=update;}else{var pending=sharedQueue.pending;if(pending===null){// This is the first update. Create a circular list.\nupdate.next=update;}else{update.next=pending.next;pending.next=update;}sharedQueue.pending=update;}{if(currentlyProcessingQueue===sharedQueue&&!didWarnUpdateInsideUpdate){error('An update (setState, replaceState, or forceUpdate) was scheduled '+'from inside an update function. Update functions should be pure, '+'with zero side-effects. Consider using componentDidUpdate or a '+'callback.');didWarnUpdateInsideUpdate=true;}}}function entangleTransitions(root,fiber,lane){var updateQueue=fiber.updateQueue;if(updateQueue===null){// Only occurs if the fiber has been unmounted.\nreturn;}var sharedQueue=updateQueue.shared;if(isTransitionLane(lane)){var queueLanes=sharedQueue.lanes;// If any entangled lanes are no longer pending on the root, then they must\n// have finished. We can remove them from the shared queue, which represents\n// a superset of the actually pending lanes. In some cases we may entangle\n// more than we need to, but that's OK. In fact it's worse if we *don't*\n// entangle when we should.\nqueueLanes=intersectLanes(queueLanes,root.pendingLanes);// Entangle the new transition lane with the other transition lanes.\nvar newQueueLanes=mergeLanes(queueLanes,lane);sharedQueue.lanes=newQueueLanes;// Even if queue.lanes already include lane, we don't know for certain if\n// the lane finished since the last time we entangled it. So we need to\n// entangle it again, just to be sure.\nmarkRootEntangled(root,newQueueLanes);}}function enqueueCapturedUpdate(workInProgress,capturedUpdate){// Captured updates are updates that are thrown by a child during the render\n// phase. They should be discarded if the render is aborted. Therefore,\n// we should only put them on the work-in-progress queue, not the current one.\nvar queue=workInProgress.updateQueue;// Check if the work-in-progress queue is a clone.\nvar current=workInProgress.alternate;if(current!==null){var currentQueue=current.updateQueue;if(queue===currentQueue){// The work-in-progress queue is the same as current. This happens when\n// we bail out on a parent fiber that then captures an error thrown by\n// a child. Since we want to append the update only to the work-in\n// -progress queue, we need to clone the updates. We usually clone during\n// processUpdateQueue, but that didn't happen in this case because we\n// skipped over the parent when we bailed out.\nvar newFirst=null;var newLast=null;var firstBaseUpdate=queue.firstBaseUpdate;if(firstBaseUpdate!==null){// Loop through the updates and clone them.\nvar update=firstBaseUpdate;do{var clone={eventTime:update.eventTime,lane:update.lane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};if(newLast===null){newFirst=newLast=clone;}else{newLast.next=clone;newLast=clone;}update=update.next;}while(update!==null);// Append the captured update the end of the cloned list.\nif(newLast===null){newFirst=newLast=capturedUpdate;}else{newLast.next=capturedUpdate;newLast=capturedUpdate;}}else{// There are no base updates.\nnewFirst=newLast=capturedUpdate;}queue={baseState:currentQueue.baseState,firstBaseUpdate:newFirst,lastBaseUpdate:newLast,shared:currentQueue.shared,effects:currentQueue.effects};workInProgress.updateQueue=queue;return;}}// Append the update to the end of the list.\nvar lastBaseUpdate=queue.lastBaseUpdate;if(lastBaseUpdate===null){queue.firstBaseUpdate=capturedUpdate;}else{lastBaseUpdate.next=capturedUpdate;}queue.lastBaseUpdate=capturedUpdate;}function getStateFromUpdate(workInProgress,queue,update,prevState,nextProps,instance){switch(update.tag){case ReplaceState:{var payload=update.payload;if(typeof payload==='function'){// Updater function\n{enterDisallowedContextReadInDEV();}var nextState=payload.call(instance,prevState,nextProps);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{payload.call(instance,prevState,nextProps);}finally{setIsStrictModeForDevtools(false);}}exitDisallowedContextReadInDEV();}return nextState;}// State object\nreturn payload;}case CaptureUpdate:{workInProgress.flags=workInProgress.flags&~ShouldCapture|DidCapture;}// Intentional fallthrough\ncase UpdateState:{var _payload=update.payload;var partialState;if(typeof _payload==='function'){// Updater function\n{enterDisallowedContextReadInDEV();}partialState=_payload.call(instance,prevState,nextProps);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{_payload.call(instance,prevState,nextProps);}finally{setIsStrictModeForDevtools(false);}}exitDisallowedContextReadInDEV();}}else{// Partial state object\npartialState=_payload;}if(partialState===null||partialState===undefined){// Null and undefined are treated as no-ops.\nreturn prevState;}// Merge the partial state and the previous state.\nreturn assign({},prevState,partialState);}case ForceUpdate:{hasForceUpdate=true;return prevState;}}return prevState;}function processUpdateQueue(workInProgress,props,instance,renderLanes){// This is always non-null on a ClassComponent or HostRoot\nvar queue=workInProgress.updateQueue;hasForceUpdate=false;{currentlyProcessingQueue=queue.shared;}var firstBaseUpdate=queue.firstBaseUpdate;var lastBaseUpdate=queue.lastBaseUpdate;// Check if there are pending updates. If so, transfer them to the base queue.\nvar pendingQueue=queue.shared.pending;if(pendingQueue!==null){queue.shared.pending=null;// The pending queue is circular. Disconnect the pointer between first\n// and last so that it's non-circular.\nvar lastPendingUpdate=pendingQueue;var firstPendingUpdate=lastPendingUpdate.next;lastPendingUpdate.next=null;// Append pending updates to base queue\nif(lastBaseUpdate===null){firstBaseUpdate=firstPendingUpdate;}else{lastBaseUpdate.next=firstPendingUpdate;}lastBaseUpdate=lastPendingUpdate;// If there's a current queue, and it's different from the base queue, then\n// we need to transfer the updates to that queue, too. Because the base\n// queue is a singly-linked list with no cycles, we can append to both\n// lists and take advantage of structural sharing.\n// TODO: Pass `current` as argument\nvar current=workInProgress.alternate;if(current!==null){// This is always non-null on a ClassComponent or HostRoot\nvar currentQueue=current.updateQueue;var currentLastBaseUpdate=currentQueue.lastBaseUpdate;if(currentLastBaseUpdate!==lastBaseUpdate){if(currentLastBaseUpdate===null){currentQueue.firstBaseUpdate=firstPendingUpdate;}else{currentLastBaseUpdate.next=firstPendingUpdate;}currentQueue.lastBaseUpdate=lastPendingUpdate;}}}// These values may change as we process the queue.\nif(firstBaseUpdate!==null){// Iterate through the list of updates to compute the result.\nvar newState=queue.baseState;// TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n// from the original lanes.\nvar newLanes=NoLanes;var newBaseState=null;var newFirstBaseUpdate=null;var newLastBaseUpdate=null;var update=firstBaseUpdate;do{var updateLane=update.lane;var updateEventTime=update.eventTime;if(!isSubsetOfLanes(renderLanes,updateLane)){// Priority is insufficient. Skip this update. If this is the first\n// skipped update, the previous update/state is the new base\n// update/state.\nvar clone={eventTime:updateEventTime,lane:updateLane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};if(newLastBaseUpdate===null){newFirstBaseUpdate=newLastBaseUpdate=clone;newBaseState=newState;}else{newLastBaseUpdate=newLastBaseUpdate.next=clone;}// Update the remaining priority in the queue.\nnewLanes=mergeLanes(newLanes,updateLane);}else{// This update does have sufficient priority.\nif(newLastBaseUpdate!==null){var _clone={eventTime:updateEventTime,// This update is going to be committed so we never want uncommit\n// it. Using NoLane works because 0 is a subset of all bitmasks, so\n// this will never be skipped by the check above.\nlane:NoLane,tag:update.tag,payload:update.payload,callback:update.callback,next:null};newLastBaseUpdate=newLastBaseUpdate.next=_clone;}// Process this update.\nnewState=getStateFromUpdate(workInProgress,queue,update,newState,props,instance);var callback=update.callback;if(callback!==null&&// If the update was already committed, we should not queue its\n// callback again.\nupdate.lane!==NoLane){workInProgress.flags|=Callback;var effects=queue.effects;if(effects===null){queue.effects=[update];}else{effects.push(update);}}}update=update.next;if(update===null){pendingQueue=queue.shared.pending;if(pendingQueue===null){break;}else{// An update was scheduled from inside a reducer. Add the new\n// pending updates to the end of the list and keep processing.\nvar _lastPendingUpdate=pendingQueue;// Intentionally unsound. Pending updates form a circular list, but we\n// unravel them when transferring them to the base queue.\nvar _firstPendingUpdate=_lastPendingUpdate.next;_lastPendingUpdate.next=null;update=_firstPendingUpdate;queue.lastBaseUpdate=_lastPendingUpdate;queue.shared.pending=null;}}}while(true);if(newLastBaseUpdate===null){newBaseState=newState;}queue.baseState=newBaseState;queue.firstBaseUpdate=newFirstBaseUpdate;queue.lastBaseUpdate=newLastBaseUpdate;// Interleaved updates are stored on a separate queue. We aren't going to\n// process them during this render, but we do need to track which lanes\n// are remaining.\nvar lastInterleaved=queue.shared.interleaved;if(lastInterleaved!==null){var interleaved=lastInterleaved;do{newLanes=mergeLanes(newLanes,interleaved.lane);interleaved=interleaved.next;}while(interleaved!==lastInterleaved);}else if(firstBaseUpdate===null){// `queue.lanes` is used for entangling transitions. We can set it back to\n// zero once the queue is empty.\nqueue.shared.lanes=NoLanes;}// Set the remaining expiration time to be whatever is remaining in the queue.\n// This should be fine because the only two other things that contribute to\n// expiration time are props and context. We're already in the middle of the\n// begin phase by the time we start processing the queue, so we've already\n// dealt with the props. Context in components that specify\n// shouldComponentUpdate is tricky; but we'll have to account for\n// that regardless.\nmarkSkippedUpdateLanes(newLanes);workInProgress.lanes=newLanes;workInProgress.memoizedState=newState;}{currentlyProcessingQueue=null;}}function callCallback(callback,context){if(typeof callback!=='function'){throw new Error('Invalid argument passed as callback. Expected a function. Instead '+(\"received: \"+callback));}callback.call(context);}function resetHasForceUpdateBeforeProcessing(){hasForceUpdate=false;}function checkHasForceUpdateAfterProcessing(){return hasForceUpdate;}function commitUpdateQueue(finishedWork,finishedQueue,instance){// Commit the effects\nvar effects=finishedQueue.effects;finishedQueue.effects=null;if(effects!==null){for(var i=0;i<effects.length;i++){var effect=effects[i];var callback=effect.callback;if(callback!==null){effect.callback=null;callCallback(callback,instance);}}}}var fakeInternalInstance={};// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nvar emptyRefsObject=new React.Component().refs;var didWarnAboutStateAssignmentForComponent;var didWarnAboutUninitializedState;var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;var didWarnAboutLegacyLifecyclesAndDerivedState;var didWarnAboutUndefinedDerivedState;var warnOnUndefinedDerivedState;var warnOnInvalidCallback;var didWarnAboutDirectlyAssigningPropsToState;var didWarnAboutContextTypeAndContextTypes;var didWarnAboutInvalidateContextType;{didWarnAboutStateAssignmentForComponent=new Set();didWarnAboutUninitializedState=new Set();didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate=new Set();didWarnAboutLegacyLifecyclesAndDerivedState=new Set();didWarnAboutDirectlyAssigningPropsToState=new Set();didWarnAboutUndefinedDerivedState=new Set();didWarnAboutContextTypeAndContextTypes=new Set();didWarnAboutInvalidateContextType=new Set();var didWarnOnInvalidCallback=new Set();warnOnInvalidCallback=function(callback,callerName){if(callback===null||typeof callback==='function'){return;}var key=callerName+'_'+callback;if(!didWarnOnInvalidCallback.has(key)){didWarnOnInvalidCallback.add(key);error('%s(...): Expected the last optional `callback` argument to be a '+'function. Instead received: %s.',callerName,callback);}};warnOnUndefinedDerivedState=function(type,partialState){if(partialState===undefined){var componentName=getComponentNameFromType(type)||'Component';if(!didWarnAboutUndefinedDerivedState.has(componentName)){didWarnAboutUndefinedDerivedState.add(componentName);error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. '+'You have returned undefined.',componentName);}}};// This is so gross but it's at least non-critical and can be removed if\n// it causes problems. This is meant to give a nicer error message for\n// ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n// ...)) which otherwise throws a \"_processChildContext is not a function\"\n// exception.\nObject.defineProperty(fakeInternalInstance,'_processChildContext',{enumerable:false,value:function(){throw new Error('_processChildContext is not available in React 16+. This likely '+'means you have multiple copies of React and are attempting to nest '+'a React 15 tree inside a React 16 tree using '+\"unstable_renderSubtreeIntoContainer, which isn't supported. Try \"+'to make sure you have only one copy of React (and ideally, switch '+'to ReactDOM.createPortal).');}});Object.freeze(fakeInternalInstance);}function applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,nextProps){var prevState=workInProgress.memoizedState;var partialState=getDerivedStateFromProps(nextProps,prevState);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{// Invoke the function an extra time to help detect side-effects.\npartialState=getDerivedStateFromProps(nextProps,prevState);}finally{setIsStrictModeForDevtools(false);}}warnOnUndefinedDerivedState(ctor,partialState);}// Merge the partial state and the previous state.\nvar memoizedState=partialState===null||partialState===undefined?prevState:assign({},prevState,partialState);workInProgress.memoizedState=memoizedState;// Once the update queue is empty, persist the derived state onto the\n// base state.\nif(workInProgress.lanes===NoLanes){// Queue is always non-null for classes\nvar updateQueue=workInProgress.updateQueue;updateQueue.baseState=memoizedState;}}var classComponentUpdater={isMounted:isMounted,enqueueSetState:function(inst,payload,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.payload=payload;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'setState');}update.callback=callback;}enqueueUpdate(fiber,update);var root=scheduleUpdateOnFiber(fiber,lane,eventTime);if(root!==null){entangleTransitions(root,fiber,lane);}{markStateUpdateScheduled(fiber,lane);}},enqueueReplaceState:function(inst,payload,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.tag=ReplaceState;update.payload=payload;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'replaceState');}update.callback=callback;}enqueueUpdate(fiber,update);var root=scheduleUpdateOnFiber(fiber,lane,eventTime);if(root!==null){entangleTransitions(root,fiber,lane);}{markStateUpdateScheduled(fiber,lane);}},enqueueForceUpdate:function(inst,callback){var fiber=get(inst);var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);var update=createUpdate(eventTime,lane);update.tag=ForceUpdate;if(callback!==undefined&&callback!==null){{warnOnInvalidCallback(callback,'forceUpdate');}update.callback=callback;}enqueueUpdate(fiber,update);var root=scheduleUpdateOnFiber(fiber,lane,eventTime);if(root!==null){entangleTransitions(root,fiber,lane);}{markForceUpdateScheduled(fiber,lane);}}};function checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext){var instance=workInProgress.stateNode;if(typeof instance.shouldComponentUpdate==='function'){var shouldUpdate=instance.shouldComponentUpdate(newProps,newState,nextContext);{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{// Invoke the function an extra time to help detect side-effects.\nshouldUpdate=instance.shouldComponentUpdate(newProps,newState,nextContext);}finally{setIsStrictModeForDevtools(false);}}if(shouldUpdate===undefined){error('%s.shouldComponentUpdate(): Returned undefined instead of a '+'boolean value. Make sure to return true or false.',getComponentNameFromType(ctor)||'Component');}}return shouldUpdate;}if(ctor.prototype&&ctor.prototype.isPureReactComponent){return!shallowEqual(oldProps,newProps)||!shallowEqual(oldState,newState);}return true;}function checkClassInstance(workInProgress,ctor,newProps){var instance=workInProgress.stateNode;{var name=getComponentNameFromType(ctor)||'Component';var renderPresent=instance.render;if(!renderPresent){if(ctor.prototype&&typeof ctor.prototype.render==='function'){error('%s(...): No `render` method found on the returned component '+'instance: did you accidentally return an object from the constructor?',name);}else{error('%s(...): No `render` method found on the returned component '+'instance: you may have forgotten to define `render`.',name);}}if(instance.getInitialState&&!instance.getInitialState.isReactClassApproved&&!instance.state){error('getInitialState was defined on %s, a plain JavaScript class. '+'This is only supported for classes created using React.createClass. '+'Did you mean to define a state property instead?',name);}if(instance.getDefaultProps&&!instance.getDefaultProps.isReactClassApproved){error('getDefaultProps was defined on %s, a plain JavaScript class. '+'This is only supported for classes created using React.createClass. '+'Use a static property to define defaultProps instead.',name);}if(instance.propTypes){error('propTypes was defined as an instance property on %s. Use a static '+'property to define propTypes instead.',name);}if(instance.contextType){error('contextType was defined as an instance property on %s. Use a static '+'property to define contextType instead.',name);}{if(instance.contextTypes){error('contextTypes was defined as an instance property on %s. Use a static '+'property to define contextTypes instead.',name);}if(ctor.contextType&&ctor.contextTypes&&!didWarnAboutContextTypeAndContextTypes.has(ctor)){didWarnAboutContextTypeAndContextTypes.add(ctor);error('%s declares both contextTypes and contextType static properties. '+'The legacy contextTypes property will be ignored.',name);}}if(typeof instance.componentShouldUpdate==='function'){error('%s has a method called '+'componentShouldUpdate(). Did you mean shouldComponentUpdate()? '+'The name is phrased as a question because the function is '+'expected to return a value.',name);}if(ctor.prototype&&ctor.prototype.isPureReactComponent&&typeof instance.shouldComponentUpdate!=='undefined'){error('%s has a method called shouldComponentUpdate(). '+'shouldComponentUpdate should not be used when extending React.PureComponent. '+'Please extend React.Component if shouldComponentUpdate is used.',getComponentNameFromType(ctor)||'A pure component');}if(typeof instance.componentDidUnmount==='function'){error('%s has a method called '+'componentDidUnmount(). But there is no such lifecycle method. '+'Did you mean componentWillUnmount()?',name);}if(typeof instance.componentDidReceiveProps==='function'){error('%s has a method called '+'componentDidReceiveProps(). But there is no such lifecycle method. '+'If you meant to update the state in response to changing props, '+'use componentWillReceiveProps(). If you meant to fetch data or '+'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',name);}if(typeof instance.componentWillRecieveProps==='function'){error('%s has a method called '+'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',name);}if(typeof instance.UNSAFE_componentWillRecieveProps==='function'){error('%s has a method called '+'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',name);}var hasMutatedProps=instance.props!==newProps;if(instance.props!==undefined&&hasMutatedProps){error('%s(...): When calling super() in `%s`, make sure to pass '+\"up the same props that your component's constructor was passed.\",name,name);}if(instance.defaultProps){error('Setting defaultProps as an instance property on %s is not supported and will be ignored.'+' Instead, define defaultProps as a static property on %s.',name,name);}if(typeof instance.getSnapshotBeforeUpdate==='function'&&typeof instance.componentDidUpdate!=='function'&&!didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)){didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). '+'This component defines getSnapshotBeforeUpdate() only.',getComponentNameFromType(ctor));}if(typeof instance.getDerivedStateFromProps==='function'){error('%s: getDerivedStateFromProps() is defined as an instance method '+'and will be ignored. Instead, declare it as a static method.',name);}if(typeof instance.getDerivedStateFromError==='function'){error('%s: getDerivedStateFromError() is defined as an instance method '+'and will be ignored. Instead, declare it as a static method.',name);}if(typeof ctor.getSnapshotBeforeUpdate==='function'){error('%s: getSnapshotBeforeUpdate() is defined as a static method '+'and will be ignored. Instead, declare it as an instance method.',name);}var _state=instance.state;if(_state&&(typeof _state!=='object'||isArray(_state))){error('%s.state: must be set to an object or null',name);}if(typeof instance.getChildContext==='function'&&typeof ctor.childContextTypes!=='object'){error('%s.getChildContext(): childContextTypes must be defined in order to '+'use getChildContext().',name);}}}function adoptClassInstance(workInProgress,instance){instance.updater=classComponentUpdater;workInProgress.stateNode=instance;// The instance needs access to the fiber so that it can schedule updates\nset(instance,workInProgress);{instance._reactInternalInstance=fakeInternalInstance;}}function constructClassInstance(workInProgress,ctor,props){var isLegacyContextConsumer=false;var unmaskedContext=emptyContextObject;var context=emptyContextObject;var contextType=ctor.contextType;{if('contextType'in ctor){var isValid=// Allow null for conditional declaration\ncontextType===null||contextType!==undefined&&contextType.$$typeof===REACT_CONTEXT_TYPE&&contextType._context===undefined;// Not a <Context.Consumer>\nif(!isValid&&!didWarnAboutInvalidateContextType.has(ctor)){didWarnAboutInvalidateContextType.add(ctor);var addendum='';if(contextType===undefined){addendum=' However, it is set to undefined. '+'This can be caused by a typo or by mixing up named and default imports. '+'This can also happen due to a circular dependency, so '+'try moving the createContext() call to a separate file.';}else if(typeof contextType!=='object'){addendum=' However, it is set to a '+typeof contextType+'.';}else if(contextType.$$typeof===REACT_PROVIDER_TYPE){addendum=' Did you accidentally pass the Context.Provider instead?';}else if(contextType._context!==undefined){// <Context.Consumer>\naddendum=' Did you accidentally pass the Context.Consumer instead?';}else{addendum=' However, it is set to an object with keys {'+Object.keys(contextType).join(', ')+'}.';}error('%s defines an invalid contextType. '+'contextType should point to the Context object returned by React.createContext().%s',getComponentNameFromType(ctor)||'Component',addendum);}}}if(typeof contextType==='object'&&contextType!==null){context=readContext(contextType);}else{unmaskedContext=getUnmaskedContext(workInProgress,ctor,true);var contextTypes=ctor.contextTypes;isLegacyContextConsumer=contextTypes!==null&&contextTypes!==undefined;context=isLegacyContextConsumer?getMaskedContext(workInProgress,unmaskedContext):emptyContextObject;}var instance=new ctor(props,context);// Instantiate twice to help detect side-effects.\n{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{instance=new ctor(props,context);// eslint-disable-line no-new\n}finally{setIsStrictModeForDevtools(false);}}}var state=workInProgress.memoizedState=instance.state!==null&&instance.state!==undefined?instance.state:null;adoptClassInstance(workInProgress,instance);{if(typeof ctor.getDerivedStateFromProps==='function'&&state===null){var componentName=getComponentNameFromType(ctor)||'Component';if(!didWarnAboutUninitializedState.has(componentName)){didWarnAboutUninitializedState.add(componentName);error('`%s` uses `getDerivedStateFromProps` but its initial state is '+'%s. This is not recommended. Instead, define the initial state by '+'assigning an object to `this.state` in the constructor of `%s`. '+'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',componentName,instance.state===null?'null':'undefined',componentName);}}// If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n// Warn about these lifecycles if they are present.\n// Don't warn about react-lifecycles-compat polyfilled methods though.\nif(typeof ctor.getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function'){var foundWillMountName=null;var foundWillReceivePropsName=null;var foundWillUpdateName=null;if(typeof instance.componentWillMount==='function'&&instance.componentWillMount.__suppressDeprecationWarning!==true){foundWillMountName='componentWillMount';}else if(typeof instance.UNSAFE_componentWillMount==='function'){foundWillMountName='UNSAFE_componentWillMount';}if(typeof instance.componentWillReceiveProps==='function'&&instance.componentWillReceiveProps.__suppressDeprecationWarning!==true){foundWillReceivePropsName='componentWillReceiveProps';}else if(typeof instance.UNSAFE_componentWillReceiveProps==='function'){foundWillReceivePropsName='UNSAFE_componentWillReceiveProps';}if(typeof instance.componentWillUpdate==='function'&&instance.componentWillUpdate.__suppressDeprecationWarning!==true){foundWillUpdateName='componentWillUpdate';}else if(typeof instance.UNSAFE_componentWillUpdate==='function'){foundWillUpdateName='UNSAFE_componentWillUpdate';}if(foundWillMountName!==null||foundWillReceivePropsName!==null||foundWillUpdateName!==null){var _componentName=getComponentNameFromType(ctor)||'Component';var newApiName=typeof ctor.getDerivedStateFromProps==='function'?'getDerivedStateFromProps()':'getSnapshotBeforeUpdate()';if(!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)){didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n'+'%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n'+'The above lifecycles should be removed. Learn more about this warning here:\\n'+'https://reactjs.org/link/unsafe-component-lifecycles',_componentName,newApiName,foundWillMountName!==null?\"\\n  \"+foundWillMountName:'',foundWillReceivePropsName!==null?\"\\n  \"+foundWillReceivePropsName:'',foundWillUpdateName!==null?\"\\n  \"+foundWillUpdateName:'');}}}}// Cache unmasked context so we can avoid recreating masked context unless necessary.\n// ReactFiberContext usually updates this cache but can't for newly-created instances.\nif(isLegacyContextConsumer){cacheContext(workInProgress,unmaskedContext,context);}return instance;}function callComponentWillMount(workInProgress,instance){var oldState=instance.state;if(typeof instance.componentWillMount==='function'){instance.componentWillMount();}if(typeof instance.UNSAFE_componentWillMount==='function'){instance.UNSAFE_componentWillMount();}if(oldState!==instance.state){{error('%s.componentWillMount(): Assigning directly to this.state is '+\"deprecated (except inside a component's \"+'constructor). Use setState instead.',getComponentNameFromFiber(workInProgress)||'Component');}classComponentUpdater.enqueueReplaceState(instance,instance.state,null);}}function callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext){var oldState=instance.state;if(typeof instance.componentWillReceiveProps==='function'){instance.componentWillReceiveProps(newProps,nextContext);}if(typeof instance.UNSAFE_componentWillReceiveProps==='function'){instance.UNSAFE_componentWillReceiveProps(newProps,nextContext);}if(instance.state!==oldState){{var componentName=getComponentNameFromFiber(workInProgress)||'Component';if(!didWarnAboutStateAssignmentForComponent.has(componentName)){didWarnAboutStateAssignmentForComponent.add(componentName);error('%s.componentWillReceiveProps(): Assigning directly to '+\"this.state is deprecated (except inside a component's \"+'constructor). Use setState instead.',componentName);}}classComponentUpdater.enqueueReplaceState(instance,instance.state,null);}}// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(workInProgress,ctor,newProps,renderLanes){{checkClassInstance(workInProgress,ctor,newProps);}var instance=workInProgress.stateNode;instance.props=newProps;instance.state=workInProgress.memoizedState;instance.refs=emptyRefsObject;initializeUpdateQueue(workInProgress);var contextType=ctor.contextType;if(typeof contextType==='object'&&contextType!==null){instance.context=readContext(contextType);}else{var unmaskedContext=getUnmaskedContext(workInProgress,ctor,true);instance.context=getMaskedContext(workInProgress,unmaskedContext);}{if(instance.state===newProps){var componentName=getComponentNameFromType(ctor)||'Component';if(!didWarnAboutDirectlyAssigningPropsToState.has(componentName)){didWarnAboutDirectlyAssigningPropsToState.add(componentName);error('%s: It is not recommended to assign props directly to state '+\"because updates to props won't be reflected in state. \"+'In most cases, it is better to use props directly.',componentName);}}if(workInProgress.mode&StrictLegacyMode){ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress,instance);}{ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress,instance);}}instance.state=workInProgress.memoizedState;var getDerivedStateFromProps=ctor.getDerivedStateFromProps;if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);instance.state=workInProgress.memoizedState;}// In order to support react-lifecycles-compat polyfilled components,\n// Unsafe lifecycles should not be invoked for components using the new APIs.\nif(typeof ctor.getDerivedStateFromProps!=='function'&&typeof instance.getSnapshotBeforeUpdate!=='function'&&(typeof instance.UNSAFE_componentWillMount==='function'||typeof instance.componentWillMount==='function')){callComponentWillMount(workInProgress,instance);// If we had additional state updates during this life-cycle, let's\n// process them now.\nprocessUpdateQueue(workInProgress,newProps,instance,renderLanes);instance.state=workInProgress.memoizedState;}if(typeof instance.componentDidMount==='function'){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}workInProgress.flags|=fiberFlags;}}function resumeMountClassInstance(workInProgress,ctor,newProps,renderLanes){var instance=workInProgress.stateNode;var oldProps=workInProgress.memoizedProps;instance.props=oldProps;var oldContext=instance.context;var contextType=ctor.contextType;var nextContext=emptyContextObject;if(typeof contextType==='object'&&contextType!==null){nextContext=readContext(contextType);}else{var nextLegacyUnmaskedContext=getUnmaskedContext(workInProgress,ctor,true);nextContext=getMaskedContext(workInProgress,nextLegacyUnmaskedContext);}var getDerivedStateFromProps=ctor.getDerivedStateFromProps;var hasNewLifecycles=typeof getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function';// Note: During these life-cycles, instance.props/instance.state are what\n// ever the previously attempted to render - not the \"current\". However,\n// during componentDidUpdate we pass the \"current\" props.\n// In order to support react-lifecycles-compat polyfilled components,\n// Unsafe lifecycles should not be invoked for components using the new APIs.\nif(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillReceiveProps==='function'||typeof instance.componentWillReceiveProps==='function')){if(oldProps!==newProps||oldContext!==nextContext){callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext);}}resetHasForceUpdateBeforeProcessing();var oldState=workInProgress.memoizedState;var newState=instance.state=oldState;processUpdateQueue(workInProgress,newProps,instance,renderLanes);newState=workInProgress.memoizedState;if(oldProps===newProps&&oldState===newState&&!hasContextChanged()&&!checkHasForceUpdateAfterProcessing()){// If an update was already in progress, we should schedule an Update\n// effect even though we're bailing out, so that cWU/cDU are called.\nif(typeof instance.componentDidMount==='function'){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}workInProgress.flags|=fiberFlags;}return false;}if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);newState=workInProgress.memoizedState;}var shouldUpdate=checkHasForceUpdateAfterProcessing()||checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext);if(shouldUpdate){// In order to support react-lifecycles-compat polyfilled components,\n// Unsafe lifecycles should not be invoked for components using the new APIs.\nif(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillMount==='function'||typeof instance.componentWillMount==='function')){if(typeof instance.componentWillMount==='function'){instance.componentWillMount();}if(typeof instance.UNSAFE_componentWillMount==='function'){instance.UNSAFE_componentWillMount();}}if(typeof instance.componentDidMount==='function'){var _fiberFlags=Update;{_fiberFlags|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){_fiberFlags|=MountLayoutDev;}workInProgress.flags|=_fiberFlags;}}else{// If an update was already in progress, we should schedule an Update\n// effect even though we're bailing out, so that cWU/cDU are called.\nif(typeof instance.componentDidMount==='function'){var _fiberFlags2=Update;{_fiberFlags2|=LayoutStatic;}if((workInProgress.mode&StrictEffectsMode)!==NoMode){_fiberFlags2|=MountLayoutDev;}workInProgress.flags|=_fiberFlags2;}// If shouldComponentUpdate returned false, we should still update the\n// memoized state to indicate that this work can be reused.\nworkInProgress.memoizedProps=newProps;workInProgress.memoizedState=newState;}// Update the existing instance's state, props, and context pointers even\n// if shouldComponentUpdate returns false.\ninstance.props=newProps;instance.state=newState;instance.context=nextContext;return shouldUpdate;}// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(current,workInProgress,ctor,newProps,renderLanes){var instance=workInProgress.stateNode;cloneUpdateQueue(current,workInProgress);var unresolvedOldProps=workInProgress.memoizedProps;var oldProps=workInProgress.type===workInProgress.elementType?unresolvedOldProps:resolveDefaultProps(workInProgress.type,unresolvedOldProps);instance.props=oldProps;var unresolvedNewProps=workInProgress.pendingProps;var oldContext=instance.context;var contextType=ctor.contextType;var nextContext=emptyContextObject;if(typeof contextType==='object'&&contextType!==null){nextContext=readContext(contextType);}else{var nextUnmaskedContext=getUnmaskedContext(workInProgress,ctor,true);nextContext=getMaskedContext(workInProgress,nextUnmaskedContext);}var getDerivedStateFromProps=ctor.getDerivedStateFromProps;var hasNewLifecycles=typeof getDerivedStateFromProps==='function'||typeof instance.getSnapshotBeforeUpdate==='function';// Note: During these life-cycles, instance.props/instance.state are what\n// ever the previously attempted to render - not the \"current\". However,\n// during componentDidUpdate we pass the \"current\" props.\n// In order to support react-lifecycles-compat polyfilled components,\n// Unsafe lifecycles should not be invoked for components using the new APIs.\nif(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillReceiveProps==='function'||typeof instance.componentWillReceiveProps==='function')){if(unresolvedOldProps!==unresolvedNewProps||oldContext!==nextContext){callComponentWillReceiveProps(workInProgress,instance,newProps,nextContext);}}resetHasForceUpdateBeforeProcessing();var oldState=workInProgress.memoizedState;var newState=instance.state=oldState;processUpdateQueue(workInProgress,newProps,instance,renderLanes);newState=workInProgress.memoizedState;if(unresolvedOldProps===unresolvedNewProps&&oldState===newState&&!hasContextChanged()&&!checkHasForceUpdateAfterProcessing()&&!enableLazyContextPropagation){// If an update was already in progress, we should schedule an Update\n// effect even though we're bailing out, so that cWU/cDU are called.\nif(typeof instance.componentDidUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Update;}}if(typeof instance.getSnapshotBeforeUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Snapshot;}}return false;}if(typeof getDerivedStateFromProps==='function'){applyDerivedStateFromProps(workInProgress,ctor,getDerivedStateFromProps,newProps);newState=workInProgress.memoizedState;}var shouldUpdate=checkHasForceUpdateAfterProcessing()||checkShouldComponentUpdate(workInProgress,ctor,oldProps,newProps,oldState,newState,nextContext)||// TODO: In some cases, we'll end up checking if context has changed twice,\n// both before and after `shouldComponentUpdate` has been called. Not ideal,\n// but I'm loath to refactor this function. This only happens for memoized\n// components so it's not that common.\nenableLazyContextPropagation;if(shouldUpdate){// In order to support react-lifecycles-compat polyfilled components,\n// Unsafe lifecycles should not be invoked for components using the new APIs.\nif(!hasNewLifecycles&&(typeof instance.UNSAFE_componentWillUpdate==='function'||typeof instance.componentWillUpdate==='function')){if(typeof instance.componentWillUpdate==='function'){instance.componentWillUpdate(newProps,newState,nextContext);}if(typeof instance.UNSAFE_componentWillUpdate==='function'){instance.UNSAFE_componentWillUpdate(newProps,newState,nextContext);}}if(typeof instance.componentDidUpdate==='function'){workInProgress.flags|=Update;}if(typeof instance.getSnapshotBeforeUpdate==='function'){workInProgress.flags|=Snapshot;}}else{// If an update was already in progress, we should schedule an Update\n// effect even though we're bailing out, so that cWU/cDU are called.\nif(typeof instance.componentDidUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Update;}}if(typeof instance.getSnapshotBeforeUpdate==='function'){if(unresolvedOldProps!==current.memoizedProps||oldState!==current.memoizedState){workInProgress.flags|=Snapshot;}}// If shouldComponentUpdate returned false, we should still update the\n// memoized props/state to indicate that this work can be reused.\nworkInProgress.memoizedProps=newProps;workInProgress.memoizedState=newState;}// Update the existing instance's state, props, and context pointers even\n// if shouldComponentUpdate returns false.\ninstance.props=newProps;instance.state=newState;instance.context=nextContext;return shouldUpdate;}// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nvar forkStack=[];var forkStackIndex=0;var treeForkProvider=null;var treeForkCount=0;var idStack=[];var idStackIndex=0;var treeContextProvider=null;var treeContextId=1;var treeContextOverflow='';function isForkedChild(workInProgress){warnIfNotHydrating();return(workInProgress.flags&Forked)!==NoFlags;}function getForksAtLevel(workInProgress){warnIfNotHydrating();return treeForkCount;}function getTreeId(){var overflow=treeContextOverflow;var idWithLeadingBit=treeContextId;var id=idWithLeadingBit&~getLeadingBit(idWithLeadingBit);return id.toString(32)+overflow;}function pushTreeFork(workInProgress,totalChildren){// This is called right after we reconcile an array (or iterator) of child\n// fibers, because that's the only place where we know how many children in\n// the whole set without doing extra work later, or storing addtional\n// information on the fiber.\n//\n// That's why this function is separate from pushTreeId — it's called during\n// the render phase of the fork parent, not the child, which is where we push\n// the other context values.\n//\n// In the Fizz implementation this is much simpler because the child is\n// rendered in the same callstack as the parent.\n//\n// It might be better to just add a `forks` field to the Fiber type. It would\n// make this module simpler.\nwarnIfNotHydrating();forkStack[forkStackIndex++]=treeForkCount;forkStack[forkStackIndex++]=treeForkProvider;treeForkProvider=workInProgress;treeForkCount=totalChildren;}function pushTreeId(workInProgress,totalChildren,index){warnIfNotHydrating();idStack[idStackIndex++]=treeContextId;idStack[idStackIndex++]=treeContextOverflow;idStack[idStackIndex++]=treeContextProvider;treeContextProvider=workInProgress;var baseIdWithLeadingBit=treeContextId;var baseOverflow=treeContextOverflow;// The leftmost 1 marks the end of the sequence, non-inclusive. It's not part\n// of the id; we use it to account for leading 0s.\nvar baseLength=getBitLength(baseIdWithLeadingBit)-1;var baseId=baseIdWithLeadingBit&~(1<<baseLength);var slot=index+1;var length=getBitLength(totalChildren)+baseLength;// 30 is the max length we can store without overflowing, taking into\n// consideration the leading 1 we use to mark the end of the sequence.\nif(length>30){// We overflowed the bitwise-safe range. Fall back to slower algorithm.\n// This branch assumes the length of the base id is greater than 5; it won't\n// work for smaller ids, because you need 5 bits per character.\n//\n// We encode the id in multiple steps: first the base id, then the\n// remaining digits.\n//\n// Each 5 bit sequence corresponds to a single base 32 character. So for\n// example, if the current id is 23 bits long, we can convert 20 of those\n// bits into a string of 4 characters, with 3 bits left over.\n//\n// First calculate how many bits in the base id represent a complete\n// sequence of characters.\nvar numberOfOverflowBits=baseLength-baseLength%5;// Then create a bitmask that selects only those bits.\nvar newOverflowBits=(1<<numberOfOverflowBits)-1;// Select the bits, and convert them to a base 32 string.\nvar newOverflow=(baseId&newOverflowBits).toString(32);// Now we can remove those bits from the base id.\nvar restOfBaseId=baseId>>numberOfOverflowBits;var restOfBaseLength=baseLength-numberOfOverflowBits;// Finally, encode the rest of the bits using the normal algorithm. Because\n// we made more room, this time it won't overflow.\nvar restOfLength=getBitLength(totalChildren)+restOfBaseLength;var restOfNewBits=slot<<restOfBaseLength;var id=restOfNewBits|restOfBaseId;var overflow=newOverflow+baseOverflow;treeContextId=1<<restOfLength|id;treeContextOverflow=overflow;}else{// Normal path\nvar newBits=slot<<baseLength;var _id=newBits|baseId;var _overflow=baseOverflow;treeContextId=1<<length|_id;treeContextOverflow=_overflow;}}function pushMaterializedTreeId(workInProgress){warnIfNotHydrating();// This component materialized an id. This will affect any ids that appear\n// in its children.\nvar returnFiber=workInProgress.return;if(returnFiber!==null){var numberOfForks=1;var slotIndex=0;pushTreeFork(workInProgress,numberOfForks);pushTreeId(workInProgress,numberOfForks,slotIndex);}}function getBitLength(number){return 32-clz32(number);}function getLeadingBit(id){return 1<<getBitLength(id)-1;}function popTreeContext(workInProgress){// Restore the previous values.\n// This is a bit more complicated than other context-like modules in Fiber\n// because the same Fiber may appear on the stack multiple times and for\n// different reasons. We have to keep popping until the work-in-progress is\n// no longer at the top of the stack.\nwhile(workInProgress===treeForkProvider){treeForkProvider=forkStack[--forkStackIndex];forkStack[forkStackIndex]=null;treeForkCount=forkStack[--forkStackIndex];forkStack[forkStackIndex]=null;}while(workInProgress===treeContextProvider){treeContextProvider=idStack[--idStackIndex];idStack[idStackIndex]=null;treeContextOverflow=idStack[--idStackIndex];idStack[idStackIndex]=null;treeContextId=idStack[--idStackIndex];idStack[idStackIndex]=null;}}function getSuspendedTreeContext(){warnIfNotHydrating();if(treeContextProvider!==null){return{id:treeContextId,overflow:treeContextOverflow};}else{return null;}}function restoreSuspendedTreeContext(workInProgress,suspendedContext){warnIfNotHydrating();idStack[idStackIndex++]=treeContextId;idStack[idStackIndex++]=treeContextOverflow;idStack[idStackIndex++]=treeContextProvider;treeContextId=suspendedContext.id;treeContextOverflow=suspendedContext.overflow;treeContextProvider=workInProgress;}function warnIfNotHydrating(){{if(!getIsHydrating()){error('Expected to be hydrating. This is a bug in React. Please file '+'an issue.');}}}// This may have been an insertion or a hydration.\nvar hydrationParentFiber=null;var nextHydratableInstance=null;var isHydrating=false;var didSuspend=false;// Hydration errors that were thrown inside this boundary\nvar hydrationErrors=null;function warnIfHydrating(){{if(isHydrating){error('We should not be hydrating here. This is a bug in React. Please file a bug.');}}}function markDidSuspendWhileHydratingDEV(){{didSuspend=true;}}function enterHydrationState(fiber){if(!supportsHydration){return false;}var parentInstance=fiber.stateNode.containerInfo;nextHydratableInstance=getFirstHydratableChildWithinContainer(parentInstance);hydrationParentFiber=fiber;isHydrating=true;hydrationErrors=null;didSuspend=false;return true;}function reenterHydrationStateFromDehydratedSuspenseInstance(fiber,suspenseInstance,treeContext){if(!supportsHydration){return false;}nextHydratableInstance=getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);hydrationParentFiber=fiber;isHydrating=true;hydrationErrors=null;didSuspend=false;if(treeContext!==null){restoreSuspendedTreeContext(fiber,treeContext);}return true;}function warnUnhydratedInstance(returnFiber,instance){{switch(returnFiber.tag){case HostRoot:didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo,instance);break;case HostComponent:didNotHydrateInstance(returnFiber.type,returnFiber.memoizedProps,returnFiber.stateNode,instance);break;case SuspenseComponent:var suspenseState=returnFiber.memoizedState;if(suspenseState.dehydrated!==null)didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated,instance);break;}}}function deleteHydratableInstance(returnFiber,instance){warnUnhydratedInstance(returnFiber,instance);var childToDelete=createFiberFromHostInstanceForDeletion();childToDelete.stateNode=instance;childToDelete.return=returnFiber;var deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[childToDelete];returnFiber.flags|=ChildDeletion;}else{deletions.push(childToDelete);}}function warnNonhydratedInstance(returnFiber,fiber){{if(didSuspend){// Inside a boundary that already suspended. We're currently rendering the\n// siblings of a suspended node. The mismatch may be due to the missing\n// data, so it's probably a false positive.\nreturn;}switch(returnFiber.tag){case HostRoot:{var parentContainer=returnFiber.stateNode.containerInfo;switch(fiber.tag){case HostComponent:var type=fiber.type;var props=fiber.pendingProps;didNotFindHydratableInstanceWithinContainer(parentContainer,type,props);break;case HostText:var text=fiber.pendingProps;didNotFindHydratableTextInstanceWithinContainer(parentContainer,text);break;case SuspenseComponent:didNotFindHydratableSuspenseInstanceWithinContainer(parentContainer);break;}break;}case HostComponent:{var parentType=returnFiber.type;var parentProps=returnFiber.memoizedProps;var parentInstance=returnFiber.stateNode;switch(fiber.tag){case HostComponent:var _type=fiber.type;var _props=fiber.pendingProps;didNotFindHydratableInstance(parentType,parentProps,parentInstance,_type,_props);break;case HostText:var _text=fiber.pendingProps;didNotFindHydratableTextInstance(parentType,parentProps,parentInstance,_text);break;case SuspenseComponent:didNotFindHydratableSuspenseInstance(parentType,parentProps,parentInstance);break;}break;}case SuspenseComponent:{var suspenseState=returnFiber.memoizedState;var _parentInstance=suspenseState.dehydrated;if(_parentInstance!==null)switch(fiber.tag){case HostComponent:var _type2=fiber.type;var _props2=fiber.pendingProps;didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance,_type2,_props2);break;case HostText:var _text2=fiber.pendingProps;didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance,_text2);break;case SuspenseComponent:didNotFindHydratableSuspenseInstanceWithinSuspenseInstance(_parentInstance);break;}break;}default:return;}}}function insertNonHydratedInstance(returnFiber,fiber){fiber.flags=fiber.flags&~Hydrating|Placement;warnNonhydratedInstance(returnFiber,fiber);}function tryHydrate(fiber,nextInstance){switch(fiber.tag){case HostComponent:{var type=fiber.type;var props=fiber.pendingProps;var instance=canHydrateInstance(nextInstance,type,props);if(instance!==null){fiber.stateNode=instance;hydrationParentFiber=fiber;nextHydratableInstance=getFirstHydratableChild(instance);return true;}return false;}case HostText:{var text=fiber.pendingProps;var textInstance=canHydrateTextInstance(nextInstance,text);if(textInstance!==null){fiber.stateNode=textInstance;hydrationParentFiber=fiber;// Text Instances don't have children so there's nothing to hydrate.\nnextHydratableInstance=null;return true;}return false;}case SuspenseComponent:{{var suspenseInstance=canHydrateSuspenseInstance(nextInstance);if(suspenseInstance!==null){var suspenseState={dehydrated:suspenseInstance,treeContext:getSuspendedTreeContext(),retryLane:OffscreenLane};fiber.memoizedState=suspenseState;// Store the dehydrated fragment as a child fiber.\n// This simplifies the code for getHostSibling and deleting nodes,\n// since it doesn't have to consider all Suspense boundaries and\n// check if they're dehydrated ones or not.\nvar dehydratedFragment=createFiberFromDehydratedFragment(suspenseInstance);dehydratedFragment.return=fiber;fiber.child=dehydratedFragment;hydrationParentFiber=fiber;// While a Suspense Instance does have children, we won't step into\n// it during the first pass. Instead, we'll reenter it later.\nnextHydratableInstance=null;return true;}}return false;}default:return false;}}function shouldClientRenderOnMismatch(fiber){return(fiber.mode&ConcurrentMode)!==NoMode&&(fiber.flags&DidCapture)===NoFlags;}function throwOnHydrationMismatch(fiber){throw new Error('Hydration failed because the initial UI does not match what was '+'rendered on the server.');}function tryToClaimNextHydratableInstance(fiber){if(!isHydrating){return;}var nextInstance=nextHydratableInstance;if(!nextInstance){if(shouldClientRenderOnMismatch(fiber)){warnNonhydratedInstance(hydrationParentFiber,fiber);throwOnHydrationMismatch();}// Nothing to hydrate. Make it an insertion.\ninsertNonHydratedInstance(hydrationParentFiber,fiber);isHydrating=false;hydrationParentFiber=fiber;return;}var firstAttemptedInstance=nextInstance;if(!tryHydrate(fiber,nextInstance)){if(shouldClientRenderOnMismatch(fiber)){warnNonhydratedInstance(hydrationParentFiber,fiber);throwOnHydrationMismatch();}// If we can't hydrate this instance let's try the next one.\n// We use this as a heuristic. It's based on intuition and not data so it\n// might be flawed or unnecessary.\nnextInstance=getNextHydratableSibling(firstAttemptedInstance);var prevHydrationParentFiber=hydrationParentFiber;if(!nextInstance||!tryHydrate(fiber,nextInstance)){// Nothing to hydrate. Make it an insertion.\ninsertNonHydratedInstance(hydrationParentFiber,fiber);isHydrating=false;hydrationParentFiber=fiber;return;}// We matched the next one, we'll now assume that the first one was\n// superfluous and we'll delete it. Since we can't eagerly delete it\n// we'll have to schedule a deletion. To do that, this node needs a dummy\n// fiber associated with it.\ndeleteHydratableInstance(prevHydrationParentFiber,firstAttemptedInstance);}}function prepareToHydrateHostInstance(fiber,rootContainerInstance,hostContext){if(!supportsHydration){throw new Error('Expected prepareToHydrateHostInstance() to never be called. '+'This error is likely caused by a bug in React. Please file an issue.');}var instance=fiber.stateNode;var shouldWarnIfMismatchDev=!didSuspend;var updatePayload=hydrateInstance(instance,fiber.type,fiber.memoizedProps,rootContainerInstance,hostContext,fiber,shouldWarnIfMismatchDev);// TODO: Type this specific to this type of component.\nfiber.updateQueue=updatePayload;// If the update payload indicates that there is a change or if there\n// is a new ref we mark this as an update.\nif(updatePayload!==null){return true;}return false;}function prepareToHydrateHostTextInstance(fiber){if(!supportsHydration){throw new Error('Expected prepareToHydrateHostTextInstance() to never be called. '+'This error is likely caused by a bug in React. Please file an issue.');}var textInstance=fiber.stateNode;var textContent=fiber.memoizedProps;var shouldWarnIfMismatchDev=!didSuspend;var shouldUpdate=hydrateTextInstance(textInstance,textContent,fiber,shouldWarnIfMismatchDev);if(shouldUpdate){// We assume that prepareToHydrateHostTextInstance is called in a context where the\n// hydration parent is the parent host component of this host text.\nvar returnFiber=hydrationParentFiber;if(returnFiber!==null){var isConcurrentMode=(returnFiber.mode&ConcurrentMode)!==NoMode;switch(returnFiber.tag){case HostRoot:{var parentContainer=returnFiber.stateNode.containerInfo;didNotMatchHydratedContainerTextInstance(parentContainer,textInstance,textContent,// TODO: Delete this argument when we remove the legacy root API.\nisConcurrentMode);break;}case HostComponent:{var parentType=returnFiber.type;var parentProps=returnFiber.memoizedProps;var parentInstance=returnFiber.stateNode;didNotMatchHydratedTextInstance(parentType,parentProps,parentInstance,textInstance,textContent,// TODO: Delete this argument when we remove the legacy root API.\nisConcurrentMode);break;}}}}return shouldUpdate;}function prepareToHydrateHostSuspenseInstance(fiber){if(!supportsHydration){throw new Error('Expected prepareToHydrateHostSuspenseInstance() to never be called. '+'This error is likely caused by a bug in React. Please file an issue.');}var suspenseState=fiber.memoizedState;var suspenseInstance=suspenseState!==null?suspenseState.dehydrated:null;if(!suspenseInstance){throw new Error('Expected to have a hydrated suspense instance. '+'This error is likely caused by a bug in React. Please file an issue.');}hydrateSuspenseInstance(suspenseInstance,fiber);}function skipPastDehydratedSuspenseInstance(fiber){if(!supportsHydration){throw new Error('Expected skipPastDehydratedSuspenseInstance() to never be called. '+'This error is likely caused by a bug in React. Please file an issue.');}var suspenseState=fiber.memoizedState;var suspenseInstance=suspenseState!==null?suspenseState.dehydrated:null;if(!suspenseInstance){throw new Error('Expected to have a hydrated suspense instance. '+'This error is likely caused by a bug in React. Please file an issue.');}return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);}function popToNextHostParent(fiber){var parent=fiber.return;while(parent!==null&&parent.tag!==HostComponent&&parent.tag!==HostRoot&&parent.tag!==SuspenseComponent){parent=parent.return;}hydrationParentFiber=parent;}function popHydrationState(fiber){if(!supportsHydration){return false;}if(fiber!==hydrationParentFiber){// We're deeper than the current hydration context, inside an inserted\n// tree.\nreturn false;}if(!isHydrating){// If we're not currently hydrating but we're in a hydration context, then\n// we were an insertion and now need to pop up reenter hydration of our\n// siblings.\npopToNextHostParent(fiber);isHydrating=true;return false;}// If we have any remaining hydratable nodes, we need to delete them now.\n// We only do this deeper than head and body since they tend to have random\n// other nodes in them. We also ignore components with pure text content in\n// side of them. We also don't delete anything inside the root container.\nif(fiber.tag!==HostRoot&&(fiber.tag!==HostComponent||shouldDeleteUnhydratedTailInstances(fiber.type)&&!shouldSetTextContent(fiber.type,fiber.memoizedProps))){var nextInstance=nextHydratableInstance;if(nextInstance){if(shouldClientRenderOnMismatch(fiber)){warnIfUnhydratedTailNodes(fiber);throwOnHydrationMismatch();}else{while(nextInstance){deleteHydratableInstance(fiber,nextInstance);nextInstance=getNextHydratableSibling(nextInstance);}}}}popToNextHostParent(fiber);if(fiber.tag===SuspenseComponent){nextHydratableInstance=skipPastDehydratedSuspenseInstance(fiber);}else{nextHydratableInstance=hydrationParentFiber?getNextHydratableSibling(fiber.stateNode):null;}return true;}function hasUnhydratedTailNodes(){return isHydrating&&nextHydratableInstance!==null;}function warnIfUnhydratedTailNodes(fiber){var nextInstance=nextHydratableInstance;while(nextInstance){warnUnhydratedInstance(fiber,nextInstance);nextInstance=getNextHydratableSibling(nextInstance);}}function resetHydrationState(){if(!supportsHydration){return;}hydrationParentFiber=null;nextHydratableInstance=null;isHydrating=false;didSuspend=false;}function upgradeHydrationErrorsToRecoverable(){if(hydrationErrors!==null){// Successfully completed a forced client render. The errors that occurred\n// during the hydration attempt are now recovered. We will log them in\n// commit phase, once the entire tree has finished.\nqueueRecoverableErrors(hydrationErrors);hydrationErrors=null;}}function getIsHydrating(){return isHydrating;}function queueHydrationError(error){if(hydrationErrors===null){hydrationErrors=[error];}else{hydrationErrors.push(error);}}var didWarnAboutMaps;var didWarnAboutGenerators;var didWarnAboutStringRefs;var ownerHasKeyUseWarning;var ownerHasFunctionTypeWarning;var warnForMissingKey=function(child,returnFiber){};{didWarnAboutMaps=false;didWarnAboutGenerators=false;didWarnAboutStringRefs={};/**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */ownerHasKeyUseWarning={};ownerHasFunctionTypeWarning={};warnForMissingKey=function(child,returnFiber){if(child===null||typeof child!=='object'){return;}if(!child._store||child._store.validated||child.key!=null){return;}if(typeof child._store!=='object'){throw new Error('React Component in warnForMissingKey should have a _store. '+'This error is likely caused by a bug in React. Please file an issue.');}child._store.validated=true;var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(ownerHasKeyUseWarning[componentName]){return;}ownerHasKeyUseWarning[componentName]=true;error('Each child in a list should have a unique '+'\"key\" prop. See https://reactjs.org/link/warning-keys for '+'more information.');};}function coerceRef(returnFiber,current,element){var mixedRef=element.ref;if(mixedRef!==null&&typeof mixedRef!=='function'&&typeof mixedRef!=='object'){{// TODO: Clean this up once we turn on the string ref warning for\n// everyone, because the strict mode case will no longer be relevant\nif((returnFiber.mode&StrictLegacyMode||warnAboutStringRefs)&&// We warn in ReactElement.js if owner and self are equal for string refs\n// because these cannot be automatically converted to an arrow function\n// using a codemod. Therefore, we don't have to warn about string refs again.\n!(element._owner&&element._self&&element._owner.stateNode!==element._self)){var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(!didWarnAboutStringRefs[componentName]){{error('A string ref, \"%s\", has been found within a strict mode tree. '+'String refs are a source of potential bugs and should be avoided. '+'We recommend using useRef() or createRef() instead. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-string-ref',mixedRef);}didWarnAboutStringRefs[componentName]=true;}}}if(element._owner){var owner=element._owner;var inst;if(owner){var ownerFiber=owner;if(ownerFiber.tag!==ClassComponent){throw new Error('Function components cannot have string refs. '+'We recommend using useRef() instead. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-string-ref');}inst=ownerFiber.stateNode;}if(!inst){throw new Error(\"Missing owner for string ref \"+mixedRef+\". This error is likely caused by a \"+'bug in React. Please file an issue.');}// Assigning this to a const so Flow knows it won't change in the closure\nvar resolvedInst=inst;{checkPropStringCoercion(mixedRef,'ref');}var stringRef=''+mixedRef;// Check if previous string ref matches new string ref\nif(current!==null&&current.ref!==null&&typeof current.ref==='function'&&current.ref._stringRef===stringRef){return current.ref;}var ref=function(value){var refs=resolvedInst.refs;if(refs===emptyRefsObject){// This is a lazy pooled frozen object, so we need to initialize.\nrefs=resolvedInst.refs={};}if(value===null){delete refs[stringRef];}else{refs[stringRef]=value;}};ref._stringRef=stringRef;return ref;}else{if(typeof mixedRef!=='string'){throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');}if(!element._owner){throw new Error(\"Element ref was specified as a string (\"+mixedRef+\") but no owner was set. This could happen for one of\"+' the following reasons:\\n'+'1. You may be adding a ref to a function component\\n'+\"2. You may be adding a ref to a component that was not created inside a component's render method\\n\"+'3. You have multiple copies of React loaded\\n'+'See https://reactjs.org/link/refs-must-have-owner for more information.');}}}return mixedRef;}function throwOnInvalidObjectType(returnFiber,newChild){var childString=Object.prototype.toString.call(newChild);throw new Error(\"Objects are not valid as a React child (found: \"+(childString==='[object Object]'?'object with keys {'+Object.keys(newChild).join(', ')+'}':childString)+\"). \"+'If you meant to render a collection of children, use an array '+'instead.');}function warnOnFunctionType(returnFiber){{var componentName=getComponentNameFromFiber(returnFiber)||'Component';if(ownerHasFunctionTypeWarning[componentName]){return;}ownerHasFunctionTypeWarning[componentName]=true;error('Functions are not valid as a React child. This may happen if '+'you return a Component instead of <Component /> from render. '+'Or maybe you meant to call this function rather than return it.');}}function resolveLazy(lazyType){var payload=lazyType._payload;var init=lazyType._init;return init(payload);}// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects){function deleteChild(returnFiber,childToDelete){if(!shouldTrackSideEffects){// Noop.\nreturn;}var deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[childToDelete];returnFiber.flags|=ChildDeletion;}else{deletions.push(childToDelete);}}function deleteRemainingChildren(returnFiber,currentFirstChild){if(!shouldTrackSideEffects){// Noop.\nreturn null;}// TODO: For the shouldClone case, this could be micro-optimized a bit by\n// assuming that after the first child we've already added everything.\nvar childToDelete=currentFirstChild;while(childToDelete!==null){deleteChild(returnFiber,childToDelete);childToDelete=childToDelete.sibling;}return null;}function mapRemainingChildren(returnFiber,currentFirstChild){// Add the remaining children to a temporary map so that we can find them by\n// keys quickly. Implicit (null) keys get added to this set with their index\n// instead.\nvar existingChildren=new Map();var existingChild=currentFirstChild;while(existingChild!==null){if(existingChild.key!==null){existingChildren.set(existingChild.key,existingChild);}else{existingChildren.set(existingChild.index,existingChild);}existingChild=existingChild.sibling;}return existingChildren;}function useFiber(fiber,pendingProps){// We currently set sibling to null and index to 0 here because it is easy\n// to forget to do before returning it. E.g. for the single child case.\nvar clone=createWorkInProgress(fiber,pendingProps);clone.index=0;clone.sibling=null;return clone;}function placeChild(newFiber,lastPlacedIndex,newIndex){newFiber.index=newIndex;if(!shouldTrackSideEffects){// During hydration, the useId algorithm needs to know which fibers are\n// part of a list of children (arrays, iterators).\nnewFiber.flags|=Forked;return lastPlacedIndex;}var current=newFiber.alternate;if(current!==null){var oldIndex=current.index;if(oldIndex<lastPlacedIndex){// This is a move.\nnewFiber.flags|=Placement;return lastPlacedIndex;}else{// This item can stay in place.\nreturn oldIndex;}}else{// This is an insertion.\nnewFiber.flags|=Placement;return lastPlacedIndex;}}function placeSingleChild(newFiber){// This is simpler for the single child case. We only need to do a\n// placement for inserting new children.\nif(shouldTrackSideEffects&&newFiber.alternate===null){newFiber.flags|=Placement;}return newFiber;}function updateTextNode(returnFiber,current,textContent,lanes){if(current===null||current.tag!==HostText){// Insert\nvar created=createFiberFromText(textContent,returnFiber.mode,lanes);created.return=returnFiber;return created;}else{// Update\nvar existing=useFiber(current,textContent);existing.return=returnFiber;return existing;}}function updateElement(returnFiber,current,element,lanes){var elementType=element.type;if(elementType===REACT_FRAGMENT_TYPE){return updateFragment(returnFiber,current,element.props.children,lanes,element.key);}if(current!==null){if(current.elementType===elementType||// Keep this check inline so it only runs on the false path:\nisCompatibleFamilyForHotReloading(current,element)||// Lazy types should reconcile their resolved type.\n// We need to do this after the Hot Reloading check above,\n// because hot reloading has different semantics than prod because\n// it doesn't resuspend. So we can't let the call below suspend.\ntypeof elementType==='object'&&elementType!==null&&elementType.$$typeof===REACT_LAZY_TYPE&&resolveLazy(elementType)===current.type){// Move based on index\nvar existing=useFiber(current,element.props);existing.ref=coerceRef(returnFiber,current,element);existing.return=returnFiber;{existing._debugSource=element._source;existing._debugOwner=element._owner;}return existing;}}// Insert\nvar created=createFiberFromElement(element,returnFiber.mode,lanes);created.ref=coerceRef(returnFiber,current,element);created.return=returnFiber;return created;}function updatePortal(returnFiber,current,portal,lanes){if(current===null||current.tag!==HostPortal||current.stateNode.containerInfo!==portal.containerInfo||current.stateNode.implementation!==portal.implementation){// Insert\nvar created=createFiberFromPortal(portal,returnFiber.mode,lanes);created.return=returnFiber;return created;}else{// Update\nvar existing=useFiber(current,portal.children||[]);existing.return=returnFiber;return existing;}}function updateFragment(returnFiber,current,fragment,lanes,key){if(current===null||current.tag!==Fragment){// Insert\nvar created=createFiberFromFragment(fragment,returnFiber.mode,lanes,key);created.return=returnFiber;return created;}else{// Update\nvar existing=useFiber(current,fragment);existing.return=returnFiber;return existing;}}function createChild(returnFiber,newChild,lanes){if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys. If the previous node is implicitly keyed\n// we can continue to replace it without aborting even if it is not a text\n// node.\nvar created=createFiberFromText(''+newChild,returnFiber.mode,lanes);created.return=returnFiber;return created;}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{var _created=createFiberFromElement(newChild,returnFiber.mode,lanes);_created.ref=coerceRef(returnFiber,null,newChild);_created.return=returnFiber;return _created;}case REACT_PORTAL_TYPE:{var _created2=createFiberFromPortal(newChild,returnFiber.mode,lanes);_created2.return=returnFiber;return _created2;}case REACT_LAZY_TYPE:{{var payload=newChild._payload;var init=newChild._init;return createChild(returnFiber,init(payload),lanes);}}}if(isArray(newChild)||getIteratorFn(newChild)){var _created3=createFiberFromFragment(newChild,returnFiber.mode,lanes,null);_created3.return=returnFiber;return _created3;}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}function updateSlot(returnFiber,oldFiber,newChild,lanes){// Update the fiber if the keys match, otherwise return null.\nvar key=oldFiber!==null?oldFiber.key:null;if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys. If the previous node is implicitly keyed\n// we can continue to replace it without aborting even if it is not a text\n// node.\nif(key!==null){return null;}return updateTextNode(returnFiber,oldFiber,''+newChild,lanes);}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{if(newChild.key===key){return updateElement(returnFiber,oldFiber,newChild,lanes);}else{return null;}}case REACT_PORTAL_TYPE:{if(newChild.key===key){return updatePortal(returnFiber,oldFiber,newChild,lanes);}else{return null;}}case REACT_LAZY_TYPE:{{var payload=newChild._payload;var init=newChild._init;return updateSlot(returnFiber,oldFiber,init(payload),lanes);}}}if(isArray(newChild)||getIteratorFn(newChild)){if(key!==null){return null;}return updateFragment(returnFiber,oldFiber,newChild,lanes,null);}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}function updateFromMap(existingChildren,returnFiber,newIdx,newChild,lanes){if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){// Text nodes don't have keys, so we neither have to check the old nor\n// new node for the key. If both are text nodes, they match.\nvar matchedFiber=existingChildren.get(newIdx)||null;return updateTextNode(returnFiber,matchedFiber,''+newChild,lanes);}if(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:{var _matchedFiber=existingChildren.get(newChild.key===null?newIdx:newChild.key)||null;return updateElement(returnFiber,_matchedFiber,newChild,lanes);}case REACT_PORTAL_TYPE:{var _matchedFiber2=existingChildren.get(newChild.key===null?newIdx:newChild.key)||null;return updatePortal(returnFiber,_matchedFiber2,newChild,lanes);}case REACT_LAZY_TYPE:{var payload=newChild._payload;var init=newChild._init;return updateFromMap(existingChildren,returnFiber,newIdx,init(payload),lanes);}}if(isArray(newChild)||getIteratorFn(newChild)){var _matchedFiber3=existingChildren.get(newIdx)||null;return updateFragment(returnFiber,_matchedFiber3,newChild,lanes,null);}throwOnInvalidObjectType(returnFiber,newChild);}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}return null;}/**\n   * Warns if there is a duplicate or missing key\n   */function warnOnInvalidKey(child,knownKeys,returnFiber){{if(typeof child!=='object'||child===null){return knownKeys;}switch(child.$$typeof){case REACT_ELEMENT_TYPE:case REACT_PORTAL_TYPE:warnForMissingKey(child,returnFiber);var key=child.key;if(typeof key!=='string'){break;}if(knownKeys===null){knownKeys=new Set();knownKeys.add(key);break;}if(!knownKeys.has(key)){knownKeys.add(key);break;}error('Encountered two children with the same key, `%s`. '+'Keys should be unique so that components maintain their identity '+'across updates. Non-unique keys may cause children to be '+'duplicated and/or omitted — the behavior is unsupported and '+'could change in a future version.',key);break;case REACT_LAZY_TYPE:{var payload=child._payload;var init=child._init;warnOnInvalidKey(init(payload),knownKeys,returnFiber);break;}}}return knownKeys;}function reconcileChildrenArray(returnFiber,currentFirstChild,newChildren,lanes){// This algorithm can't optimize by searching from both ends since we\n// don't have backpointers on fibers. I'm trying to see how far we can get\n// with that model. If it ends up not being worth the tradeoffs, we can\n// add it later.\n// Even with a two ended optimization, we'd want to optimize for the case\n// where there are few changes and brute force the comparison instead of\n// going for the Map. It'd like to explore hitting that path first in\n// forward-only mode and only go for the Map once we notice that we need\n// lots of look ahead. This doesn't handle reversal as well as two ended\n// search but that's unusual. Besides, for the two ended optimization to\n// work on Iterables, we'd need to copy the whole set.\n// In this first iteration, we'll just live with hitting the bad case\n// (adding everything to a Map) in for every insert/move.\n// If you change this code, also update reconcileChildrenIterator() which\n// uses the same algorithm.\n{// First, validate keys.\nvar knownKeys=null;for(var i=0;i<newChildren.length;i++){var child=newChildren[i];knownKeys=warnOnInvalidKey(child,knownKeys,returnFiber);}}var resultingFirstChild=null;var previousNewFiber=null;var oldFiber=currentFirstChild;var lastPlacedIndex=0;var newIdx=0;var nextOldFiber=null;for(;oldFiber!==null&&newIdx<newChildren.length;newIdx++){if(oldFiber.index>newIdx){nextOldFiber=oldFiber;oldFiber=null;}else{nextOldFiber=oldFiber.sibling;}var newFiber=updateSlot(returnFiber,oldFiber,newChildren[newIdx],lanes);if(newFiber===null){// TODO: This breaks on empty slots like null children. That's\n// unfortunate because it triggers the slow path all the time. We need\n// a better way to communicate whether this was a miss or null,\n// boolean, undefined, etc.\nif(oldFiber===null){oldFiber=nextOldFiber;}break;}if(shouldTrackSideEffects){if(oldFiber&&newFiber.alternate===null){// We matched the slot, but we didn't reuse the existing fiber, so we\n// need to delete the existing child.\ndeleteChild(returnFiber,oldFiber);}}lastPlacedIndex=placeChild(newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.\nresultingFirstChild=newFiber;}else{// TODO: Defer siblings if we're not at the right index for this slot.\n// I.e. if we had null values before, then we want to defer this\n// for each null value. However, we also don't want to call updateSlot\n// with the previous one.\npreviousNewFiber.sibling=newFiber;}previousNewFiber=newFiber;oldFiber=nextOldFiber;}if(newIdx===newChildren.length){// We've reached the end of the new children. We can delete the rest.\ndeleteRemainingChildren(returnFiber,oldFiber);if(getIsHydrating()){var numberOfForks=newIdx;pushTreeFork(returnFiber,numberOfForks);}return resultingFirstChild;}if(oldFiber===null){// If we don't have any more existing children we can choose a fast path\n// since the rest will all be insertions.\nfor(;newIdx<newChildren.length;newIdx++){var _newFiber=createChild(returnFiber,newChildren[newIdx],lanes);if(_newFiber===null){continue;}lastPlacedIndex=placeChild(_newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.\nresultingFirstChild=_newFiber;}else{previousNewFiber.sibling=_newFiber;}previousNewFiber=_newFiber;}if(getIsHydrating()){var _numberOfForks=newIdx;pushTreeFork(returnFiber,_numberOfForks);}return resultingFirstChild;}// Add all children to a key map for quick lookups.\nvar existingChildren=mapRemainingChildren(returnFiber,oldFiber);// Keep scanning and use the map to restore deleted items as moves.\nfor(;newIdx<newChildren.length;newIdx++){var _newFiber2=updateFromMap(existingChildren,returnFiber,newIdx,newChildren[newIdx],lanes);if(_newFiber2!==null){if(shouldTrackSideEffects){if(_newFiber2.alternate!==null){// The new fiber is a work in progress, but if there exists a\n// current, that means that we reused the fiber. We need to delete\n// it from the child list so that we don't add it to the deletion\n// list.\nexistingChildren.delete(_newFiber2.key===null?newIdx:_newFiber2.key);}}lastPlacedIndex=placeChild(_newFiber2,lastPlacedIndex,newIdx);if(previousNewFiber===null){resultingFirstChild=_newFiber2;}else{previousNewFiber.sibling=_newFiber2;}previousNewFiber=_newFiber2;}}if(shouldTrackSideEffects){// Any existing children that weren't consumed above were deleted. We need\n// to add them to the deletion list.\nexistingChildren.forEach(function(child){return deleteChild(returnFiber,child);});}if(getIsHydrating()){var _numberOfForks2=newIdx;pushTreeFork(returnFiber,_numberOfForks2);}return resultingFirstChild;}function reconcileChildrenIterator(returnFiber,currentFirstChild,newChildrenIterable,lanes){// This is the same implementation as reconcileChildrenArray(),\n// but using the iterator instead.\nvar iteratorFn=getIteratorFn(newChildrenIterable);if(typeof iteratorFn!=='function'){throw new Error('An object is not an iterable. This error is likely caused by a bug in '+'React. Please file an issue.');}{// We don't support rendering Generators because it's a mutation.\n// See https://github.com/facebook/react/issues/12995\nif(typeof Symbol==='function'&&// $FlowFixMe Flow doesn't know about toStringTag\nnewChildrenIterable[Symbol.toStringTag]==='Generator'){if(!didWarnAboutGenerators){error('Using Generators as children is unsupported and will likely yield '+'unexpected results because enumerating a generator mutates it. '+'You may convert it to an array with `Array.from()` or the '+'`[...spread]` operator before rendering. Keep in mind '+'you might need to polyfill these features for older browsers.');}didWarnAboutGenerators=true;}// Warn about using Maps as children\nif(newChildrenIterable.entries===iteratorFn){if(!didWarnAboutMaps){error('Using Maps as children is not supported. '+'Use an array of keyed ReactElements instead.');}didWarnAboutMaps=true;}// First, validate keys.\n// We'll get a different iterator later for the main pass.\nvar _newChildren=iteratorFn.call(newChildrenIterable);if(_newChildren){var knownKeys=null;var _step=_newChildren.next();for(;!_step.done;_step=_newChildren.next()){var child=_step.value;knownKeys=warnOnInvalidKey(child,knownKeys,returnFiber);}}}var newChildren=iteratorFn.call(newChildrenIterable);if(newChildren==null){throw new Error('An iterable object provided no iterator.');}var resultingFirstChild=null;var previousNewFiber=null;var oldFiber=currentFirstChild;var lastPlacedIndex=0;var newIdx=0;var nextOldFiber=null;var step=newChildren.next();for(;oldFiber!==null&&!step.done;newIdx++,step=newChildren.next()){if(oldFiber.index>newIdx){nextOldFiber=oldFiber;oldFiber=null;}else{nextOldFiber=oldFiber.sibling;}var newFiber=updateSlot(returnFiber,oldFiber,step.value,lanes);if(newFiber===null){// TODO: This breaks on empty slots like null children. That's\n// unfortunate because it triggers the slow path all the time. We need\n// a better way to communicate whether this was a miss or null,\n// boolean, undefined, etc.\nif(oldFiber===null){oldFiber=nextOldFiber;}break;}if(shouldTrackSideEffects){if(oldFiber&&newFiber.alternate===null){// We matched the slot, but we didn't reuse the existing fiber, so we\n// need to delete the existing child.\ndeleteChild(returnFiber,oldFiber);}}lastPlacedIndex=placeChild(newFiber,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.\nresultingFirstChild=newFiber;}else{// TODO: Defer siblings if we're not at the right index for this slot.\n// I.e. if we had null values before, then we want to defer this\n// for each null value. However, we also don't want to call updateSlot\n// with the previous one.\npreviousNewFiber.sibling=newFiber;}previousNewFiber=newFiber;oldFiber=nextOldFiber;}if(step.done){// We've reached the end of the new children. We can delete the rest.\ndeleteRemainingChildren(returnFiber,oldFiber);if(getIsHydrating()){var numberOfForks=newIdx;pushTreeFork(returnFiber,numberOfForks);}return resultingFirstChild;}if(oldFiber===null){// If we don't have any more existing children we can choose a fast path\n// since the rest will all be insertions.\nfor(;!step.done;newIdx++,step=newChildren.next()){var _newFiber3=createChild(returnFiber,step.value,lanes);if(_newFiber3===null){continue;}lastPlacedIndex=placeChild(_newFiber3,lastPlacedIndex,newIdx);if(previousNewFiber===null){// TODO: Move out of the loop. This only happens for the first run.\nresultingFirstChild=_newFiber3;}else{previousNewFiber.sibling=_newFiber3;}previousNewFiber=_newFiber3;}if(getIsHydrating()){var _numberOfForks3=newIdx;pushTreeFork(returnFiber,_numberOfForks3);}return resultingFirstChild;}// Add all children to a key map for quick lookups.\nvar existingChildren=mapRemainingChildren(returnFiber,oldFiber);// Keep scanning and use the map to restore deleted items as moves.\nfor(;!step.done;newIdx++,step=newChildren.next()){var _newFiber4=updateFromMap(existingChildren,returnFiber,newIdx,step.value,lanes);if(_newFiber4!==null){if(shouldTrackSideEffects){if(_newFiber4.alternate!==null){// The new fiber is a work in progress, but if there exists a\n// current, that means that we reused the fiber. We need to delete\n// it from the child list so that we don't add it to the deletion\n// list.\nexistingChildren.delete(_newFiber4.key===null?newIdx:_newFiber4.key);}}lastPlacedIndex=placeChild(_newFiber4,lastPlacedIndex,newIdx);if(previousNewFiber===null){resultingFirstChild=_newFiber4;}else{previousNewFiber.sibling=_newFiber4;}previousNewFiber=_newFiber4;}}if(shouldTrackSideEffects){// Any existing children that weren't consumed above were deleted. We need\n// to add them to the deletion list.\nexistingChildren.forEach(function(child){return deleteChild(returnFiber,child);});}if(getIsHydrating()){var _numberOfForks4=newIdx;pushTreeFork(returnFiber,_numberOfForks4);}return resultingFirstChild;}function reconcileSingleTextNode(returnFiber,currentFirstChild,textContent,lanes){// There's no need to check for keys on text nodes since we don't have a\n// way to define them.\nif(currentFirstChild!==null&&currentFirstChild.tag===HostText){// We already have an existing node so let's just update it and delete\n// the rest.\ndeleteRemainingChildren(returnFiber,currentFirstChild.sibling);var existing=useFiber(currentFirstChild,textContent);existing.return=returnFiber;return existing;}// The existing first child is not a text node so we need to create one\n// and delete the existing ones.\ndeleteRemainingChildren(returnFiber,currentFirstChild);var created=createFiberFromText(textContent,returnFiber.mode,lanes);created.return=returnFiber;return created;}function reconcileSingleElement(returnFiber,currentFirstChild,element,lanes){var key=element.key;var child=currentFirstChild;while(child!==null){// TODO: If key === null and child.key === null, then this only applies to\n// the first item in the list.\nif(child.key===key){var elementType=element.type;if(elementType===REACT_FRAGMENT_TYPE){if(child.tag===Fragment){deleteRemainingChildren(returnFiber,child.sibling);var existing=useFiber(child,element.props.children);existing.return=returnFiber;{existing._debugSource=element._source;existing._debugOwner=element._owner;}return existing;}}else{if(child.elementType===elementType||// Keep this check inline so it only runs on the false path:\nisCompatibleFamilyForHotReloading(child,element)||// Lazy types should reconcile their resolved type.\n// We need to do this after the Hot Reloading check above,\n// because hot reloading has different semantics than prod because\n// it doesn't resuspend. So we can't let the call below suspend.\ntypeof elementType==='object'&&elementType!==null&&elementType.$$typeof===REACT_LAZY_TYPE&&resolveLazy(elementType)===child.type){deleteRemainingChildren(returnFiber,child.sibling);var _existing=useFiber(child,element.props);_existing.ref=coerceRef(returnFiber,child,element);_existing.return=returnFiber;{_existing._debugSource=element._source;_existing._debugOwner=element._owner;}return _existing;}}// Didn't match.\ndeleteRemainingChildren(returnFiber,child);break;}else{deleteChild(returnFiber,child);}child=child.sibling;}if(element.type===REACT_FRAGMENT_TYPE){var created=createFiberFromFragment(element.props.children,returnFiber.mode,lanes,element.key);created.return=returnFiber;return created;}else{var _created4=createFiberFromElement(element,returnFiber.mode,lanes);_created4.ref=coerceRef(returnFiber,currentFirstChild,element);_created4.return=returnFiber;return _created4;}}function reconcileSinglePortal(returnFiber,currentFirstChild,portal,lanes){var key=portal.key;var child=currentFirstChild;while(child!==null){// TODO: If key === null and child.key === null, then this only applies to\n// the first item in the list.\nif(child.key===key){if(child.tag===HostPortal&&child.stateNode.containerInfo===portal.containerInfo&&child.stateNode.implementation===portal.implementation){deleteRemainingChildren(returnFiber,child.sibling);var existing=useFiber(child,portal.children||[]);existing.return=returnFiber;return existing;}else{deleteRemainingChildren(returnFiber,child);break;}}else{deleteChild(returnFiber,child);}child=child.sibling;}var created=createFiberFromPortal(portal,returnFiber.mode,lanes);created.return=returnFiber;return created;}// This API will tag the children with the side-effect of the reconciliation\n// itself. They will be added to the side-effect list as we pass through the\n// children and the parent.\nfunction reconcileChildFibers(returnFiber,currentFirstChild,newChild,lanes){// This function is not recursive.\n// If the top level item is an array, we treat it as a set of children,\n// not as a fragment. Nested arrays on the other hand will be treated as\n// fragment nodes. Recursion happens at the normal flow.\n// Handle top level unkeyed fragments as if they were arrays.\n// This leads to an ambiguity between <>{[...]}</> and <>...</>.\n// We treat the ambiguous cases above the same.\nvar isUnkeyedTopLevelFragment=typeof newChild==='object'&&newChild!==null&&newChild.type===REACT_FRAGMENT_TYPE&&newChild.key===null;if(isUnkeyedTopLevelFragment){newChild=newChild.props.children;}// Handle object types\nif(typeof newChild==='object'&&newChild!==null){switch(newChild.$$typeof){case REACT_ELEMENT_TYPE:return placeSingleChild(reconcileSingleElement(returnFiber,currentFirstChild,newChild,lanes));case REACT_PORTAL_TYPE:return placeSingleChild(reconcileSinglePortal(returnFiber,currentFirstChild,newChild,lanes));case REACT_LAZY_TYPE:{var payload=newChild._payload;var init=newChild._init;// TODO: This function is supposed to be non-recursive.\nreturn reconcileChildFibers(returnFiber,currentFirstChild,init(payload),lanes);}}if(isArray(newChild)){return reconcileChildrenArray(returnFiber,currentFirstChild,newChild,lanes);}if(getIteratorFn(newChild)){return reconcileChildrenIterator(returnFiber,currentFirstChild,newChild,lanes);}throwOnInvalidObjectType(returnFiber,newChild);}if(typeof newChild==='string'&&newChild!==''||typeof newChild==='number'){return placeSingleChild(reconcileSingleTextNode(returnFiber,currentFirstChild,''+newChild,lanes));}{if(typeof newChild==='function'){warnOnFunctionType(returnFiber);}}// Remaining cases are all treated as empty.\nreturn deleteRemainingChildren(returnFiber,currentFirstChild);}return reconcileChildFibers;}var reconcileChildFibers=ChildReconciler(true);var mountChildFibers=ChildReconciler(false);function cloneChildFibers(current,workInProgress){if(current!==null&&workInProgress.child!==current.child){throw new Error('Resuming work not yet implemented.');}if(workInProgress.child===null){return;}var currentChild=workInProgress.child;var newChild=createWorkInProgress(currentChild,currentChild.pendingProps);workInProgress.child=newChild;newChild.return=workInProgress;while(currentChild.sibling!==null){currentChild=currentChild.sibling;newChild=newChild.sibling=createWorkInProgress(currentChild,currentChild.pendingProps);newChild.return=workInProgress;}newChild.sibling=null;}// Reset a workInProgress child set to prepare it for a second pass.\nfunction resetChildFibers(workInProgress,lanes){var child=workInProgress.child;while(child!==null){resetWorkInProgress(child,lanes);child=child.sibling;}}var NO_CONTEXT={};var contextStackCursor$1=createCursor(NO_CONTEXT);var contextFiberStackCursor=createCursor(NO_CONTEXT);var rootInstanceStackCursor=createCursor(NO_CONTEXT);function requiredContext(c){if(c===NO_CONTEXT){throw new Error('Expected host context to exist. This error is likely caused by a bug '+'in React. Please file an issue.');}return c;}function getRootHostContainer(){var rootInstance=requiredContext(rootInstanceStackCursor.current);return rootInstance;}function pushHostContainer(fiber,nextRootInstance){// Push current root instance onto the stack;\n// This allows us to reset root when portals are popped.\npush(rootInstanceStackCursor,nextRootInstance,fiber);// Track the context and the Fiber that provided it.\n// This enables us to pop only Fibers that provide unique contexts.\npush(contextFiberStackCursor,fiber,fiber);// Finally, we need to push the host context to the stack.\n// However, we can't just call getRootHostContext() and push it because\n// we'd have a different number of entries on the stack depending on\n// whether getRootHostContext() throws somewhere in renderer code or not.\n// So we push an empty value first. This lets us safely unwind on errors.\npush(contextStackCursor$1,NO_CONTEXT,fiber);var nextRootContext=getRootHostContext(nextRootInstance);// Now that we know this function doesn't throw, replace it.\npop(contextStackCursor$1,fiber);push(contextStackCursor$1,nextRootContext,fiber);}function popHostContainer(fiber){pop(contextStackCursor$1,fiber);pop(contextFiberStackCursor,fiber);pop(rootInstanceStackCursor,fiber);}function getHostContext(){var context=requiredContext(contextStackCursor$1.current);return context;}function pushHostContext(fiber){var rootInstance=requiredContext(rootInstanceStackCursor.current);var context=requiredContext(contextStackCursor$1.current);var nextContext=getChildHostContext(context,fiber.type,rootInstance);// Don't push this Fiber's context unless it's unique.\nif(context===nextContext){return;}// Track the context and the Fiber that provided it.\n// This enables us to pop only Fibers that provide unique contexts.\npush(contextFiberStackCursor,fiber,fiber);push(contextStackCursor$1,nextContext,fiber);}function popHostContext(fiber){// Do not pop unless this Fiber provided the current context.\n// pushHostContext() only pushes Fibers that provide unique contexts.\nif(contextFiberStackCursor.current!==fiber){return;}pop(contextStackCursor$1,fiber);pop(contextFiberStackCursor,fiber);}var DefaultSuspenseContext=0;// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nvar SubtreeSuspenseContextMask=1;// Subtree Flags:\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nvar InvisibleParentSuspenseContext=1;// Shallow Flags:\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nvar ForceSuspenseFallback=2;var suspenseStackCursor=createCursor(DefaultSuspenseContext);function hasSuspenseContext(parentContext,flag){return(parentContext&flag)!==0;}function setDefaultShallowSuspenseContext(parentContext){return parentContext&SubtreeSuspenseContextMask;}function setShallowSuspenseContext(parentContext,shallowContext){return parentContext&SubtreeSuspenseContextMask|shallowContext;}function addSubtreeSuspenseContext(parentContext,subtreeContext){return parentContext|subtreeContext;}function pushSuspenseContext(fiber,newContext){push(suspenseStackCursor,newContext,fiber);}function popSuspenseContext(fiber){pop(suspenseStackCursor,fiber);}function shouldCaptureSuspense(workInProgress,hasInvisibleParent){// If it was the primary children that just suspended, capture and render the\n// fallback. Otherwise, don't capture and bubble to the next boundary.\nvar nextState=workInProgress.memoizedState;if(nextState!==null){if(nextState.dehydrated!==null){// A dehydrated boundary always captures.\nreturn true;}return false;}var props=workInProgress.memoizedProps;// Regular boundaries always capture.\n{return true;}// If it's a boundary we should avoid, then we prefer to bubble up to the\n}function findFirstSuspended(row){var node=row;while(node!==null){if(node.tag===SuspenseComponent){var state=node.memoizedState;if(state!==null){var dehydrated=state.dehydrated;if(dehydrated===null||isSuspenseInstancePending(dehydrated)||isSuspenseInstanceFallback(dehydrated)){return node;}}}else if(node.tag===SuspenseListComponent&&// revealOrder undefined can't be trusted because it don't\n// keep track of whether it suspended or not.\nnode.memoizedProps.revealOrder!==undefined){var didSuspend=(node.flags&DidCapture)!==NoFlags;if(didSuspend){return node;}}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===row){return null;}while(node.sibling===null){if(node.return===null||node.return===row){return null;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}return null;}var NoFlags$1=/*   */0;// Represents whether effect should fire.\nvar HasEffect=/* */1;// Represents the phase in which the effect (not the clean-up) fires.\nvar Insertion=/*  */2;var Layout=/*    */4;var Passive$1=/*   */8;// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nvar workInProgressSources=[];function resetWorkInProgressVersions(){for(var i=0;i<workInProgressSources.length;i++){var mutableSource=workInProgressSources[i];if(isPrimaryRenderer){mutableSource._workInProgressVersionPrimary=null;}else{mutableSource._workInProgressVersionSecondary=null;}}workInProgressSources.length=0;}// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nfunction registerMutableSourceForHydration(root,mutableSource){var getVersion=mutableSource._getVersion;var version=getVersion(mutableSource._source);// TODO Clear this data once all pending hydration work is finished.\n// Retaining it forever may interfere with GC.\nif(root.mutableSourceEagerHydrationData==null){root.mutableSourceEagerHydrationData=[mutableSource,version];}else{root.mutableSourceEagerHydrationData.push(mutableSource,version);}}var ReactCurrentDispatcher$1=ReactSharedInternals.ReactCurrentDispatcher,ReactCurrentBatchConfig$1=ReactSharedInternals.ReactCurrentBatchConfig;var didWarnAboutMismatchedHooksForComponent;var didWarnUncachedGetSnapshot;{didWarnAboutMismatchedHooksForComponent=new Set();}// These are set right before calling the component.\nvar renderLanes=NoLanes;// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nvar currentlyRenderingFiber$1=null;// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nvar currentHook=null;var workInProgressHook=null;// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nvar didScheduleRenderPhaseUpdate=false;// Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\nvar didScheduleRenderPhaseUpdateDuringThisPass=false;// Counts the number of useId hooks in this component.\nvar localIdCounter=0;// Used for ids that are generated completely client-side (i.e. not during\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\nvar globalClientIdCounter=0;var RE_RENDER_LIMIT=25;// In DEV, this is the name of the currently executing primitive hook\nvar currentHookNameInDev=null;// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nvar hookTypesDev=null;var hookTypesUpdateIndexDev=-1;// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nvar ignorePreviousDependencies=false;function mountHookTypesDev(){{var hookName=currentHookNameInDev;if(hookTypesDev===null){hookTypesDev=[hookName];}else{hookTypesDev.push(hookName);}}}function updateHookTypesDev(){{var hookName=currentHookNameInDev;if(hookTypesDev!==null){hookTypesUpdateIndexDev++;if(hookTypesDev[hookTypesUpdateIndexDev]!==hookName){warnOnHookMismatchInDev(hookName);}}}}function checkDepsAreArrayDev(deps){{if(deps!==undefined&&deps!==null&&!isArray(deps)){// Verify deps, but only on mount to avoid extra checks.\n// It's unlikely their type would change as usually you define them inline.\nerror('%s received a final argument that is not an array (instead, received `%s`). When '+'specified, the final argument must be an array.',currentHookNameInDev,typeof deps);}}}function warnOnHookMismatchInDev(currentHookName){{var componentName=getComponentNameFromFiber(currentlyRenderingFiber$1);if(!didWarnAboutMismatchedHooksForComponent.has(componentName)){didWarnAboutMismatchedHooksForComponent.add(componentName);if(hookTypesDev!==null){var table='';var secondColumnStart=30;for(var i=0;i<=hookTypesUpdateIndexDev;i++){var oldHookName=hookTypesDev[i];var newHookName=i===hookTypesUpdateIndexDev?currentHookName:oldHookName;var row=i+1+\". \"+oldHookName;// Extra space so second column lines up\n// lol @ IE not supporting String#repeat\nwhile(row.length<secondColumnStart){row+=' ';}row+=newHookName+'\\n';table+=row;}error('React has detected a change in the order of Hooks called by %s. '+'This will lead to bugs and errors if not fixed. '+'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n'+'   Previous render            Next render\\n'+'   ------------------------------------------------------\\n'+'%s'+'   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',componentName,table);}}}}function throwInvalidHookError(){throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for'+' one of the following reasons:\\n'+'1. You might have mismatching versions of React and the renderer (such as React DOM)\\n'+'2. You might be breaking the Rules of Hooks\\n'+'3. You might have more than one copy of React in the same app\\n'+'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');}function areHookInputsEqual(nextDeps,prevDeps){{if(ignorePreviousDependencies){// Only true when this component is being hot reloaded.\nreturn false;}}if(prevDeps===null){{error('%s received a final argument during this render, but not during '+'the previous render. Even though the final argument is optional, '+'its type cannot change between renders.',currentHookNameInDev);}return false;}{// Don't bother comparing lengths in prod because these arrays should be\n// passed inline.\nif(nextDeps.length!==prevDeps.length){error('The final argument passed to %s changed size between renders. The '+'order and size of this array must remain constant.\\n\\n'+'Previous: %s\\n'+'Incoming: %s',currentHookNameInDev,\"[\"+prevDeps.join(', ')+\"]\",\"[\"+nextDeps.join(', ')+\"]\");}}for(var i=0;i<prevDeps.length&&i<nextDeps.length;i++){if(objectIs(nextDeps[i],prevDeps[i])){continue;}return false;}return true;}function renderWithHooks(current,workInProgress,Component,props,secondArg,nextRenderLanes){renderLanes=nextRenderLanes;currentlyRenderingFiber$1=workInProgress;{hookTypesDev=current!==null?current._debugHookTypes:null;hookTypesUpdateIndexDev=-1;// Used for hot reloading:\nignorePreviousDependencies=current!==null&&current.type!==workInProgress.type;}workInProgress.memoizedState=null;workInProgress.updateQueue=null;workInProgress.lanes=NoLanes;// The following should have already been reset\n// currentHook = null;\n// workInProgressHook = null;\n// didScheduleRenderPhaseUpdate = false;\n// localIdCounter = 0;\n// TODO Warn if no hooks are used at all during mount, then some are used during update.\n// Currently we will identify the update render as a mount because memoizedState === null.\n// This is tricky because it's valid for certain types of components (e.g. React.lazy)\n// Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n// Non-stateful hooks (e.g. context) don't get added to memoizedState,\n// so memoizedState would be null during updates and mounts.\n{if(current!==null&&current.memoizedState!==null){ReactCurrentDispatcher$1.current=HooksDispatcherOnUpdateInDEV;}else if(hookTypesDev!==null){// This dispatcher handles an edge case where a component is updating,\n// but no stateful hooks have been used.\n// We want to match the production code behavior (which will use HooksDispatcherOnMount),\n// but with the extra DEV validation to ensure hooks ordering hasn't changed.\n// This dispatcher does that.\nReactCurrentDispatcher$1.current=HooksDispatcherOnMountWithHookTypesInDEV;}else{ReactCurrentDispatcher$1.current=HooksDispatcherOnMountInDEV;}}var children=Component(props,secondArg);// Check if there was a render phase update\nif(didScheduleRenderPhaseUpdateDuringThisPass){// Keep rendering in a loop for as long as render phase updates continue to\n// be scheduled. Use a counter to prevent infinite loops.\nvar numberOfReRenders=0;do{didScheduleRenderPhaseUpdateDuringThisPass=false;localIdCounter=0;if(numberOfReRenders>=RE_RENDER_LIMIT){throw new Error('Too many re-renders. React limits the number of renders to prevent '+'an infinite loop.');}numberOfReRenders+=1;{// Even when hot reloading, allow dependencies to stabilize\n// after first render to prevent infinite render phase updates.\nignorePreviousDependencies=false;}// Start over from the beginning of the list\ncurrentHook=null;workInProgressHook=null;workInProgress.updateQueue=null;{// Also validate hook order for cascading updates.\nhookTypesUpdateIndexDev=-1;}ReactCurrentDispatcher$1.current=HooksDispatcherOnRerenderInDEV;children=Component(props,secondArg);}while(didScheduleRenderPhaseUpdateDuringThisPass);}// We can assume the previous dispatcher is always this one, since we set it\n// at the beginning of the render phase and there's no re-entrance.\nReactCurrentDispatcher$1.current=ContextOnlyDispatcher;{workInProgress._debugHookTypes=hookTypesDev;}// This check uses currentHook so that it works the same in DEV and prod bundles.\n// hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\nvar didRenderTooFewHooks=currentHook!==null&&currentHook.next!==null;renderLanes=NoLanes;currentlyRenderingFiber$1=null;currentHook=null;workInProgressHook=null;{currentHookNameInDev=null;hookTypesDev=null;hookTypesUpdateIndexDev=-1;// Confirm that a static flag was not added or removed since the last\n// render. If this fires, it suggests that we incorrectly reset the static\n// flags in some other part of the codebase. This has happened before, for\n// example, in the SuspenseList implementation.\nif(current!==null&&(current.flags&StaticMask)!==(workInProgress.flags&StaticMask)&&// Disable this warning in legacy mode, because legacy Suspense is weird\n// and creates false positives. To make this work in legacy mode, we'd\n// need to mark fibers that commit in an incomplete state, somehow. For\n// now I'll disable the warning that most of the bugs that would trigger\n// it are either exclusive to concurrent mode or exist in both.\n(current.mode&ConcurrentMode)!==NoMode){error('Internal React error: Expected static flag was missing. Please '+'notify the React team.');}}didScheduleRenderPhaseUpdate=false;// This is reset by checkDidRenderIdHook\n// localIdCounter = 0;\nif(didRenderTooFewHooks){throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental '+'early return statement.');}return children;}function checkDidRenderIdHook(){// This should be called immediately after every renderWithHooks call.\n// Conceptually, it's part of the return value of renderWithHooks; it's only a\n// separate function to avoid using an array tuple.\nvar didRenderIdHook=localIdCounter!==0;localIdCounter=0;return didRenderIdHook;}function bailoutHooks(current,workInProgress,lanes){workInProgress.updateQueue=current.updateQueue;// TODO: Don't need to reset the flags here, because they're reset in the\n// complete phase (bubbleProperties).\nif((workInProgress.mode&StrictEffectsMode)!==NoMode){workInProgress.flags&=~(MountPassiveDev|MountLayoutDev|Passive|Update);}else{workInProgress.flags&=~(Passive|Update);}current.lanes=removeLanes(current.lanes,lanes);}function resetHooksAfterThrow(){// We can assume the previous dispatcher is always this one, since we set it\n// at the beginning of the render phase and there's no re-entrance.\nReactCurrentDispatcher$1.current=ContextOnlyDispatcher;if(didScheduleRenderPhaseUpdate){// There were render phase updates. These are only valid for this render\n// phase, which we are now aborting. Remove the updates from the queues so\n// they do not persist to the next render. Do not remove updates from hooks\n// that weren't processed.\n//\n// Only reset the updates from the queue if it has a clone. If it does\n// not have a clone, that means it wasn't processed, and the updates were\n// scheduled before we entered the render phase.\nvar hook=currentlyRenderingFiber$1.memoizedState;while(hook!==null){var queue=hook.queue;if(queue!==null){queue.pending=null;}hook=hook.next;}didScheduleRenderPhaseUpdate=false;}renderLanes=NoLanes;currentlyRenderingFiber$1=null;currentHook=null;workInProgressHook=null;{hookTypesDev=null;hookTypesUpdateIndexDev=-1;currentHookNameInDev=null;isUpdatingOpaqueValueInRenderPhase=false;}didScheduleRenderPhaseUpdateDuringThisPass=false;localIdCounter=0;}function mountWorkInProgressHook(){var hook={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};if(workInProgressHook===null){// This is the first hook in the list\ncurrentlyRenderingFiber$1.memoizedState=workInProgressHook=hook;}else{// Append to the end of the list\nworkInProgressHook=workInProgressHook.next=hook;}return workInProgressHook;}function updateWorkInProgressHook(){// This function is used both for updates and for re-renders triggered by a\n// render phase update. It assumes there is either a current hook we can\n// clone, or a work-in-progress hook from a previous render pass that we can\n// use as a base. When we reach the end of the base list, we must switch to\n// the dispatcher used for mounts.\nvar nextCurrentHook;if(currentHook===null){var current=currentlyRenderingFiber$1.alternate;if(current!==null){nextCurrentHook=current.memoizedState;}else{nextCurrentHook=null;}}else{nextCurrentHook=currentHook.next;}var nextWorkInProgressHook;if(workInProgressHook===null){nextWorkInProgressHook=currentlyRenderingFiber$1.memoizedState;}else{nextWorkInProgressHook=workInProgressHook.next;}if(nextWorkInProgressHook!==null){// There's already a work-in-progress. Reuse it.\nworkInProgressHook=nextWorkInProgressHook;nextWorkInProgressHook=workInProgressHook.next;currentHook=nextCurrentHook;}else{// Clone from the current hook.\nif(nextCurrentHook===null){throw new Error('Rendered more hooks than during the previous render.');}currentHook=nextCurrentHook;var newHook={memoizedState:currentHook.memoizedState,baseState:currentHook.baseState,baseQueue:currentHook.baseQueue,queue:currentHook.queue,next:null};if(workInProgressHook===null){// This is the first hook in the list.\ncurrentlyRenderingFiber$1.memoizedState=workInProgressHook=newHook;}else{// Append to the end of the list.\nworkInProgressHook=workInProgressHook.next=newHook;}}return workInProgressHook;}function createFunctionComponentUpdateQueue(){return{lastEffect:null,stores:null};}function basicStateReducer(state,action){// $FlowFixMe: Flow doesn't like mixed types\nreturn typeof action==='function'?action(state):action;}function mountReducer(reducer,initialArg,init){var hook=mountWorkInProgressHook();var initialState;if(init!==undefined){initialState=init(initialArg);}else{initialState=initialArg;}hook.memoizedState=hook.baseState=initialState;var queue={pending:null,interleaved:null,lanes:NoLanes,dispatch:null,lastRenderedReducer:reducer,lastRenderedState:initialState};hook.queue=queue;var dispatch=queue.dispatch=dispatchReducerAction.bind(null,currentlyRenderingFiber$1,queue);return[hook.memoizedState,dispatch];}function updateReducer(reducer,initialArg,init){var hook=updateWorkInProgressHook();var queue=hook.queue;if(queue===null){throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');}queue.lastRenderedReducer=reducer;var current=currentHook;// The last rebase update that is NOT part of the base state.\nvar baseQueue=current.baseQueue;// The last pending update that hasn't been processed yet.\nvar pendingQueue=queue.pending;if(pendingQueue!==null){// We have new updates that haven't been processed yet.\n// We'll add them to the base queue.\nif(baseQueue!==null){// Merge the pending queue and the base queue.\nvar baseFirst=baseQueue.next;var pendingFirst=pendingQueue.next;baseQueue.next=pendingFirst;pendingQueue.next=baseFirst;}{if(current.baseQueue!==baseQueue){// Internal invariant that should never happen, but feasibly could in\n// the future if we implement resuming, or some form of that.\nerror('Internal error: Expected work-in-progress queue to be a clone. '+'This is a bug in React.');}}current.baseQueue=baseQueue=pendingQueue;queue.pending=null;}if(baseQueue!==null){// We have a queue to process.\nvar first=baseQueue.next;var newState=current.baseState;var newBaseState=null;var newBaseQueueFirst=null;var newBaseQueueLast=null;var update=first;do{var updateLane=update.lane;if(!isSubsetOfLanes(renderLanes,updateLane)){// Priority is insufficient. Skip this update. If this is the first\n// skipped update, the previous update/state is the new base\n// update/state.\nvar clone={lane:updateLane,action:update.action,hasEagerState:update.hasEagerState,eagerState:update.eagerState,next:null};if(newBaseQueueLast===null){newBaseQueueFirst=newBaseQueueLast=clone;newBaseState=newState;}else{newBaseQueueLast=newBaseQueueLast.next=clone;}// Update the remaining priority in the queue.\n// TODO: Don't need to accumulate this. Instead, we can remove\n// renderLanes from the original lanes.\ncurrentlyRenderingFiber$1.lanes=mergeLanes(currentlyRenderingFiber$1.lanes,updateLane);markSkippedUpdateLanes(updateLane);}else{// This update does have sufficient priority.\nif(newBaseQueueLast!==null){var _clone={// This update is going to be committed so we never want uncommit\n// it. Using NoLane works because 0 is a subset of all bitmasks, so\n// this will never be skipped by the check above.\nlane:NoLane,action:update.action,hasEagerState:update.hasEagerState,eagerState:update.eagerState,next:null};newBaseQueueLast=newBaseQueueLast.next=_clone;}// Process this update.\nif(update.hasEagerState){// If this update is a state update (not a reducer) and was processed eagerly,\n// we can use the eagerly computed state\nnewState=update.eagerState;}else{var action=update.action;newState=reducer(newState,action);}}update=update.next;}while(update!==null&&update!==first);if(newBaseQueueLast===null){newBaseState=newState;}else{newBaseQueueLast.next=newBaseQueueFirst;}// Mark that the fiber performed work, but only if the new state is\n// different from the current state.\nif(!objectIs(newState,hook.memoizedState)){markWorkInProgressReceivedUpdate();}hook.memoizedState=newState;hook.baseState=newBaseState;hook.baseQueue=newBaseQueueLast;queue.lastRenderedState=newState;}// Interleaved updates are stored on a separate queue. We aren't going to\n// process them during this render, but we do need to track which lanes\n// are remaining.\nvar lastInterleaved=queue.interleaved;if(lastInterleaved!==null){var interleaved=lastInterleaved;do{var interleavedLane=interleaved.lane;currentlyRenderingFiber$1.lanes=mergeLanes(currentlyRenderingFiber$1.lanes,interleavedLane);markSkippedUpdateLanes(interleavedLane);interleaved=interleaved.next;}while(interleaved!==lastInterleaved);}else if(baseQueue===null){// `queue.lanes` is used for entangling transitions. We can set it back to\n// zero once the queue is empty.\nqueue.lanes=NoLanes;}var dispatch=queue.dispatch;return[hook.memoizedState,dispatch];}function rerenderReducer(reducer,initialArg,init){var hook=updateWorkInProgressHook();var queue=hook.queue;if(queue===null){throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');}queue.lastRenderedReducer=reducer;// This is a re-render. Apply the new render phase updates to the previous\n// work-in-progress hook.\nvar dispatch=queue.dispatch;var lastRenderPhaseUpdate=queue.pending;var newState=hook.memoizedState;if(lastRenderPhaseUpdate!==null){// The queue doesn't persist past this render pass.\nqueue.pending=null;var firstRenderPhaseUpdate=lastRenderPhaseUpdate.next;var update=firstRenderPhaseUpdate;do{// Process this render phase update. We don't have to check the\n// priority because it will always be the same as the current\n// render's.\nvar action=update.action;newState=reducer(newState,action);update=update.next;}while(update!==firstRenderPhaseUpdate);// Mark that the fiber performed work, but only if the new state is\n// different from the current state.\nif(!objectIs(newState,hook.memoizedState)){markWorkInProgressReceivedUpdate();}hook.memoizedState=newState;// Don't persist the state accumulated from the render phase updates to\n// the base state unless the queue is empty.\n// TODO: Not sure if this is the desired semantics, but it's what we\n// do for gDSFP. I can't remember why.\nif(hook.baseQueue===null){hook.baseState=newState;}queue.lastRenderedState=newState;}return[newState,dispatch];}function mountMutableSource(source,getSnapshot,subscribe){{return undefined;}}function updateMutableSource(source,getSnapshot,subscribe){{return undefined;}}function mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot){var fiber=currentlyRenderingFiber$1;var hook=mountWorkInProgressHook();var nextSnapshot;var isHydrating=getIsHydrating();if(isHydrating){if(getServerSnapshot===undefined){throw new Error('Missing getServerSnapshot, which is required for '+'server-rendered content. Will revert to client rendering.');}nextSnapshot=getServerSnapshot();{if(!didWarnUncachedGetSnapshot){if(nextSnapshot!==getServerSnapshot()){error('The result of getServerSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}}else{nextSnapshot=getSnapshot();{if(!didWarnUncachedGetSnapshot){var cachedSnapshot=getSnapshot();if(!objectIs(nextSnapshot,cachedSnapshot)){error('The result of getSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}// Unless we're rendering a blocking lane, schedule a consistency check.\n// Right before committing, we will walk the tree and check if any of the\n// stores were mutated.\n//\n// We won't do this if we're hydrating server-rendered content, because if\n// the content is stale, it's already visible anyway. Instead we'll patch\n// it up in a passive effect.\nvar root=getWorkInProgressRoot();if(root===null){throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');}if(!includesBlockingLane(root,renderLanes)){pushStoreConsistencyCheck(fiber,getSnapshot,nextSnapshot);}}// Read the current snapshot from the store on every render. This breaks the\n// normal rules of React, and only works because store updates are\n// always synchronous.\nhook.memoizedState=nextSnapshot;var inst={value:nextSnapshot,getSnapshot:getSnapshot};hook.queue=inst;// Schedule an effect to subscribe to the store.\nmountEffect(subscribeToStore.bind(null,fiber,inst,subscribe),[subscribe]);// Schedule an effect to update the mutable instance fields. We will update\n// this whenever subscribe, getSnapshot, or value changes. Because there's no\n// clean-up function, and we track the deps correctly, we can call pushEffect\n// directly, without storing any additional state. For the same reason, we\n// don't need to set a static flag, either.\n// TODO: We can move this to the passive phase once we add a pre-commit\n// consistency check. See the next comment.\nfiber.flags|=Passive;pushEffect(HasEffect|Passive$1,updateStoreInstance.bind(null,fiber,inst,nextSnapshot,getSnapshot),undefined,null);return nextSnapshot;}function updateSyncExternalStore(subscribe,getSnapshot,getServerSnapshot){var fiber=currentlyRenderingFiber$1;var hook=updateWorkInProgressHook();// Read the current snapshot from the store on every render. This breaks the\n// normal rules of React, and only works because store updates are\n// always synchronous.\nvar nextSnapshot=getSnapshot();{if(!didWarnUncachedGetSnapshot){var cachedSnapshot=getSnapshot();if(!objectIs(nextSnapshot,cachedSnapshot)){error('The result of getSnapshot should be cached to avoid an infinite loop');didWarnUncachedGetSnapshot=true;}}}var prevSnapshot=hook.memoizedState;var snapshotChanged=!objectIs(prevSnapshot,nextSnapshot);if(snapshotChanged){hook.memoizedState=nextSnapshot;markWorkInProgressReceivedUpdate();}var inst=hook.queue;updateEffect(subscribeToStore.bind(null,fiber,inst,subscribe),[subscribe]);// Whenever getSnapshot or subscribe changes, we need to check in the\n// commit phase if there was an interleaved mutation. In concurrent mode\n// this can happen all the time, but even in synchronous mode, an earlier\n// effect may have mutated the store.\nif(inst.getSnapshot!==getSnapshot||snapshotChanged||// Check if the susbcribe function changed. We can save some memory by\n// checking whether we scheduled a subscription effect above.\nworkInProgressHook!==null&&workInProgressHook.memoizedState.tag&HasEffect){fiber.flags|=Passive;pushEffect(HasEffect|Passive$1,updateStoreInstance.bind(null,fiber,inst,nextSnapshot,getSnapshot),undefined,null);// Unless we're rendering a blocking lane, schedule a consistency check.\n// Right before committing, we will walk the tree and check if any of the\n// stores were mutated.\nvar root=getWorkInProgressRoot();if(root===null){throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');}if(!includesBlockingLane(root,renderLanes)){pushStoreConsistencyCheck(fiber,getSnapshot,nextSnapshot);}}return nextSnapshot;}function pushStoreConsistencyCheck(fiber,getSnapshot,renderedSnapshot){fiber.flags|=StoreConsistency;var check={getSnapshot:getSnapshot,value:renderedSnapshot};var componentUpdateQueue=currentlyRenderingFiber$1.updateQueue;if(componentUpdateQueue===null){componentUpdateQueue=createFunctionComponentUpdateQueue();currentlyRenderingFiber$1.updateQueue=componentUpdateQueue;componentUpdateQueue.stores=[check];}else{var stores=componentUpdateQueue.stores;if(stores===null){componentUpdateQueue.stores=[check];}else{stores.push(check);}}}function updateStoreInstance(fiber,inst,nextSnapshot,getSnapshot){// These are updated in the passive phase\ninst.value=nextSnapshot;inst.getSnapshot=getSnapshot;// Something may have been mutated in between render and commit. This could\n// have been in an event that fired before the passive effects, or it could\n// have been in a layout effect. In that case, we would have used the old\n// snapsho and getSnapshot values to bail out. We need to check one more time.\nif(checkIfSnapshotChanged(inst)){// Force a re-render.\nforceStoreRerender(fiber);}}function subscribeToStore(fiber,inst,subscribe){var handleStoreChange=function(){// The store changed. Check if the snapshot changed since the last time we\n// read from the store.\nif(checkIfSnapshotChanged(inst)){// Force a re-render.\nforceStoreRerender(fiber);}};// Subscribe to the store and return a clean-up function.\nreturn subscribe(handleStoreChange);}function checkIfSnapshotChanged(inst){var latestGetSnapshot=inst.getSnapshot;var prevValue=inst.value;try{var nextValue=latestGetSnapshot();return!objectIs(prevValue,nextValue);}catch(error){return true;}}function forceStoreRerender(fiber){scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);}function mountState(initialState){var hook=mountWorkInProgressHook();if(typeof initialState==='function'){// $FlowFixMe: Flow doesn't like mixed types\ninitialState=initialState();}hook.memoizedState=hook.baseState=initialState;var queue={pending:null,interleaved:null,lanes:NoLanes,dispatch:null,lastRenderedReducer:basicStateReducer,lastRenderedState:initialState};hook.queue=queue;var dispatch=queue.dispatch=dispatchSetState.bind(null,currentlyRenderingFiber$1,queue);return[hook.memoizedState,dispatch];}function updateState(initialState){return updateReducer(basicStateReducer);}function rerenderState(initialState){return rerenderReducer(basicStateReducer);}function pushEffect(tag,create,destroy,deps){var effect={tag:tag,create:create,destroy:destroy,deps:deps,// Circular\nnext:null};var componentUpdateQueue=currentlyRenderingFiber$1.updateQueue;if(componentUpdateQueue===null){componentUpdateQueue=createFunctionComponentUpdateQueue();currentlyRenderingFiber$1.updateQueue=componentUpdateQueue;componentUpdateQueue.lastEffect=effect.next=effect;}else{var lastEffect=componentUpdateQueue.lastEffect;if(lastEffect===null){componentUpdateQueue.lastEffect=effect.next=effect;}else{var firstEffect=lastEffect.next;lastEffect.next=effect;effect.next=firstEffect;componentUpdateQueue.lastEffect=effect;}}return effect;}function mountRef(initialValue){var hook=mountWorkInProgressHook();{var _ref2={current:initialValue};hook.memoizedState=_ref2;return _ref2;}}function updateRef(initialValue){var hook=updateWorkInProgressHook();return hook.memoizedState;}function mountEffectImpl(fiberFlags,hookFlags,create,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;currentlyRenderingFiber$1.flags|=fiberFlags;hook.memoizedState=pushEffect(HasEffect|hookFlags,create,undefined,nextDeps);}function updateEffectImpl(fiberFlags,hookFlags,create,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var destroy=undefined;if(currentHook!==null){var prevEffect=currentHook.memoizedState;destroy=prevEffect.destroy;if(nextDeps!==null){var prevDeps=prevEffect.deps;if(areHookInputsEqual(nextDeps,prevDeps)){hook.memoizedState=pushEffect(hookFlags,create,destroy,nextDeps);return;}}}currentlyRenderingFiber$1.flags|=fiberFlags;hook.memoizedState=pushEffect(HasEffect|hookFlags,create,destroy,nextDeps);}function mountEffect(create,deps){if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){return mountEffectImpl(MountPassiveDev|Passive|PassiveStatic,Passive$1,create,deps);}else{return mountEffectImpl(Passive|PassiveStatic,Passive$1,create,deps);}}function updateEffect(create,deps){return updateEffectImpl(Passive,Passive$1,create,deps);}function mountInsertionEffect(create,deps){return mountEffectImpl(Update,Insertion,create,deps);}function updateInsertionEffect(create,deps){return updateEffectImpl(Update,Insertion,create,deps);}function mountLayoutEffect(create,deps){var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}return mountEffectImpl(fiberFlags,Layout,create,deps);}function updateLayoutEffect(create,deps){return updateEffectImpl(Update,Layout,create,deps);}function imperativeHandleEffect(create,ref){if(typeof ref==='function'){var refCallback=ref;var _inst=create();refCallback(_inst);return function(){refCallback(null);};}else if(ref!==null&&ref!==undefined){var refObject=ref;{if(!refObject.hasOwnProperty('current')){error('Expected useImperativeHandle() first argument to either be a '+'ref callback or React.createRef() object. Instead received: %s.','an object with keys {'+Object.keys(refObject).join(', ')+'}');}}var _inst2=create();refObject.current=_inst2;return function(){refObject.current=null;};}}function mountImperativeHandle(ref,create,deps){{if(typeof create!=='function'){error('Expected useImperativeHandle() second argument to be a function '+'that creates a handle. Instead received: %s.',create!==null?typeof create:'null');}}// TODO: If deps are provided, should we skip comparing the ref itself?\nvar effectDeps=deps!==null&&deps!==undefined?deps.concat([ref]):null;var fiberFlags=Update;{fiberFlags|=LayoutStatic;}if((currentlyRenderingFiber$1.mode&StrictEffectsMode)!==NoMode){fiberFlags|=MountLayoutDev;}return mountEffectImpl(fiberFlags,Layout,imperativeHandleEffect.bind(null,create,ref),effectDeps);}function updateImperativeHandle(ref,create,deps){{if(typeof create!=='function'){error('Expected useImperativeHandle() second argument to be a function '+'that creates a handle. Instead received: %s.',create!==null?typeof create:'null');}}// TODO: If deps are provided, should we skip comparing the ref itself?\nvar effectDeps=deps!==null&&deps!==undefined?deps.concat([ref]):null;return updateEffectImpl(Update,Layout,imperativeHandleEffect.bind(null,create,ref),effectDeps);}function mountDebugValue(value,formatterFn){// This hook is normally a no-op.\n// The react-debug-hooks package injects its own implementation\n// so that e.g. DevTools can display custom hook values.\n}var updateDebugValue=mountDebugValue;function mountCallback(callback,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;hook.memoizedState=[callback,nextDeps];return callback;}function updateCallback(callback,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var prevState=hook.memoizedState;if(prevState!==null){if(nextDeps!==null){var prevDeps=prevState[1];if(areHookInputsEqual(nextDeps,prevDeps)){return prevState[0];}}}hook.memoizedState=[callback,nextDeps];return callback;}function mountMemo(nextCreate,deps){var hook=mountWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var nextValue=nextCreate();hook.memoizedState=[nextValue,nextDeps];return nextValue;}function updateMemo(nextCreate,deps){var hook=updateWorkInProgressHook();var nextDeps=deps===undefined?null:deps;var prevState=hook.memoizedState;if(prevState!==null){// Assume these are defined. If they're not, areHookInputsEqual will warn.\nif(nextDeps!==null){var prevDeps=prevState[1];if(areHookInputsEqual(nextDeps,prevDeps)){return prevState[0];}}}var nextValue=nextCreate();hook.memoizedState=[nextValue,nextDeps];return nextValue;}function mountDeferredValue(value){var _mountState=mountState(value),prevValue=_mountState[0],setValue=_mountState[1];mountEffect(function(){var prevTransition=ReactCurrentBatchConfig$1.transition;ReactCurrentBatchConfig$1.transition={};try{setValue(value);}finally{ReactCurrentBatchConfig$1.transition=prevTransition;}},[value]);return prevValue;}function updateDeferredValue(value){var _updateState=updateState(),prevValue=_updateState[0],setValue=_updateState[1];updateEffect(function(){var prevTransition=ReactCurrentBatchConfig$1.transition;ReactCurrentBatchConfig$1.transition={};try{setValue(value);}finally{ReactCurrentBatchConfig$1.transition=prevTransition;}},[value]);return prevValue;}function rerenderDeferredValue(value){var _rerenderState=rerenderState(),prevValue=_rerenderState[0],setValue=_rerenderState[1];updateEffect(function(){var prevTransition=ReactCurrentBatchConfig$1.transition;ReactCurrentBatchConfig$1.transition={};try{setValue(value);}finally{ReactCurrentBatchConfig$1.transition=prevTransition;}},[value]);return prevValue;}function startTransition(setPending,callback,options){var previousPriority=getCurrentUpdatePriority();setCurrentUpdatePriority(higherEventPriority(previousPriority,ContinuousEventPriority));setPending(true);var prevTransition=ReactCurrentBatchConfig$1.transition;ReactCurrentBatchConfig$1.transition={};var currentTransition=ReactCurrentBatchConfig$1.transition;{ReactCurrentBatchConfig$1.transition._updatedFibers=new Set();}try{setPending(false);callback();}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$1.transition=prevTransition;{if(prevTransition===null&&currentTransition._updatedFibers){var updatedFibersCount=currentTransition._updatedFibers.size;if(updatedFibersCount>10){warn('Detected a large number of updates inside startTransition. '+'If this is due to a subscription please re-write it to use React provided hooks. '+'Otherwise concurrent mode guarantees are off the table.');}currentTransition._updatedFibers.clear();}}}}function mountTransition(){var _mountState2=mountState(false),isPending=_mountState2[0],setPending=_mountState2[1];// The `start` method never changes.\nvar start=startTransition.bind(null,setPending);var hook=mountWorkInProgressHook();hook.memoizedState=start;return[isPending,start];}function updateTransition(){var _updateState2=updateState(),isPending=_updateState2[0];var hook=updateWorkInProgressHook();var start=hook.memoizedState;return[isPending,start];}function rerenderTransition(){var _rerenderState2=rerenderState(),isPending=_rerenderState2[0];var hook=updateWorkInProgressHook();var start=hook.memoizedState;return[isPending,start];}var isUpdatingOpaqueValueInRenderPhase=false;function getIsUpdatingOpaqueValueInRenderPhaseInDEV(){{return isUpdatingOpaqueValueInRenderPhase;}}function mountId(){var hook=mountWorkInProgressHook();var root=getWorkInProgressRoot();// TODO: In Fizz, id generation is specific to each server config. Maybe we\n// should do this in Fiber, too? Deferring this decision for now because\n// there's no other place to store the prefix except for an internal field on\n// the public createRoot object, which the fiber tree does not currently have\n// a reference to.\nvar identifierPrefix=root.identifierPrefix;var id;if(getIsHydrating()){var treeId=getTreeId();// Use a captial R prefix for server-generated ids.\nid=':'+identifierPrefix+'R'+treeId;// Unless this is the first id at this level, append a number at the end\n// that represents the position of this useId hook among all the useId\n// hooks for this fiber.\nvar localId=localIdCounter++;if(localId>0){id+='H'+localId.toString(32);}id+=':';}else{// Use a lowercase r prefix for client-generated ids.\nvar globalClientId=globalClientIdCounter++;id=':'+identifierPrefix+'r'+globalClientId.toString(32)+':';}hook.memoizedState=id;return id;}function updateId(){var hook=updateWorkInProgressHook();var id=hook.memoizedState;return id;}function dispatchReducerAction(fiber,queue,action){{if(typeof arguments[3]==='function'){error(\"State updates from the useState() and useReducer() Hooks don't support the \"+'second callback argument. To execute a side effect after '+'rendering, declare it in the component body with useEffect().');}}var lane=requestUpdateLane(fiber);var update={lane:lane,action:action,hasEagerState:false,eagerState:null,next:null};if(isRenderPhaseUpdate(fiber)){enqueueRenderPhaseUpdate(queue,update);}else{enqueueUpdate$1(fiber,queue,update);var eventTime=requestEventTime();var root=scheduleUpdateOnFiber(fiber,lane,eventTime);if(root!==null){entangleTransitionUpdate(root,queue,lane);}}markUpdateInDevTools(fiber,lane);}function dispatchSetState(fiber,queue,action){{if(typeof arguments[3]==='function'){error(\"State updates from the useState() and useReducer() Hooks don't support the \"+'second callback argument. To execute a side effect after '+'rendering, declare it in the component body with useEffect().');}}var lane=requestUpdateLane(fiber);var update={lane:lane,action:action,hasEagerState:false,eagerState:null,next:null};if(isRenderPhaseUpdate(fiber)){enqueueRenderPhaseUpdate(queue,update);}else{enqueueUpdate$1(fiber,queue,update);var alternate=fiber.alternate;if(fiber.lanes===NoLanes&&(alternate===null||alternate.lanes===NoLanes)){// The queue is currently empty, which means we can eagerly compute the\n// next state before entering the render phase. If the new state is the\n// same as the current state, we may be able to bail out entirely.\nvar lastRenderedReducer=queue.lastRenderedReducer;if(lastRenderedReducer!==null){var prevDispatcher;{prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;}try{var currentState=queue.lastRenderedState;var eagerState=lastRenderedReducer(currentState,action);// Stash the eagerly computed state, and the reducer used to compute\n// it, on the update object. If the reducer hasn't changed by the\n// time we enter the render phase, then the eager state can be used\n// without calling the reducer again.\nupdate.hasEagerState=true;update.eagerState=eagerState;if(objectIs(eagerState,currentState)){// Fast path. We can bail out without scheduling React to re-render.\n// It's still possible that we'll need to rebase this update later,\n// if the component re-renders for a different reason and by that\n// time the reducer has changed.\nreturn;}}catch(error){// Suppress the error. It will throw again in the render phase.\n}finally{{ReactCurrentDispatcher$1.current=prevDispatcher;}}}}var eventTime=requestEventTime();var root=scheduleUpdateOnFiber(fiber,lane,eventTime);if(root!==null){entangleTransitionUpdate(root,queue,lane);}}markUpdateInDevTools(fiber,lane);}function isRenderPhaseUpdate(fiber){var alternate=fiber.alternate;return fiber===currentlyRenderingFiber$1||alternate!==null&&alternate===currentlyRenderingFiber$1;}function enqueueRenderPhaseUpdate(queue,update){// This is a render phase update. Stash it in a lazily-created map of\n// queue -> linked list of updates. After this render pass, we'll restart\n// and apply the stashed updates on top of the work-in-progress hook.\ndidScheduleRenderPhaseUpdateDuringThisPass=didScheduleRenderPhaseUpdate=true;var pending=queue.pending;if(pending===null){// This is the first update. Create a circular list.\nupdate.next=update;}else{update.next=pending.next;pending.next=update;}queue.pending=update;}function enqueueUpdate$1(fiber,queue,update,lane){if(isInterleavedUpdate(fiber)){var interleaved=queue.interleaved;if(interleaved===null){// This is the first update. Create a circular list.\nupdate.next=update;// At the end of the current render, this queue's interleaved updates will\n// be transferred to the pending queue.\npushInterleavedQueue(queue);}else{update.next=interleaved.next;interleaved.next=update;}queue.interleaved=update;}else{var pending=queue.pending;if(pending===null){// This is the first update. Create a circular list.\nupdate.next=update;}else{update.next=pending.next;pending.next=update;}queue.pending=update;}}function entangleTransitionUpdate(root,queue,lane){if(isTransitionLane(lane)){var queueLanes=queue.lanes;// If any entangled lanes are no longer pending on the root, then they\n// must have finished. We can remove them from the shared queue, which\n// represents a superset of the actually pending lanes. In some cases we\n// may entangle more than we need to, but that's OK. In fact it's worse if\n// we *don't* entangle when we should.\nqueueLanes=intersectLanes(queueLanes,root.pendingLanes);// Entangle the new transition lane with the other transition lanes.\nvar newQueueLanes=mergeLanes(queueLanes,lane);queue.lanes=newQueueLanes;// Even if queue.lanes already include lane, we don't know for certain if\n// the lane finished since the last time we entangled it. So we need to\n// entangle it again, just to be sure.\nmarkRootEntangled(root,newQueueLanes);}}function markUpdateInDevTools(fiber,lane,action){{markStateUpdateScheduled(fiber,lane);}}var ContextOnlyDispatcher={readContext:readContext,useCallback:throwInvalidHookError,useContext:throwInvalidHookError,useEffect:throwInvalidHookError,useImperativeHandle:throwInvalidHookError,useInsertionEffect:throwInvalidHookError,useLayoutEffect:throwInvalidHookError,useMemo:throwInvalidHookError,useReducer:throwInvalidHookError,useRef:throwInvalidHookError,useState:throwInvalidHookError,useDebugValue:throwInvalidHookError,useDeferredValue:throwInvalidHookError,useTransition:throwInvalidHookError,useMutableSource:throwInvalidHookError,useSyncExternalStore:throwInvalidHookError,useId:throwInvalidHookError,unstable_isNewReconciler:enableNewReconciler};var HooksDispatcherOnMountInDEV=null;var HooksDispatcherOnMountWithHookTypesInDEV=null;var HooksDispatcherOnUpdateInDEV=null;var HooksDispatcherOnRerenderInDEV=null;var InvalidNestedHooksDispatcherOnMountInDEV=null;var InvalidNestedHooksDispatcherOnUpdateInDEV=null;var InvalidNestedHooksDispatcherOnRerenderInDEV=null;{var warnInvalidContextAccess=function(){error('Context can only be read while React is rendering. '+'In classes, you can read it in the render method or getDerivedStateFromProps. '+'In function components, you can read it directly in the function body, but not '+'inside Hooks like useReducer() or useMemo().');};var warnInvalidHookAccess=function(){error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. '+'You can only call Hooks at the top level of your React function. '+'For more information, see '+'https://reactjs.org/link/rules-of-hooks');};HooksDispatcherOnMountInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';mountHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';mountHookTypesDev();checkDepsAreArrayDev(deps);return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';mountHookTypesDev();checkDepsAreArrayDev(deps);var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';mountHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';mountHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';mountHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';mountHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';mountHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';mountHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';mountHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnMountWithHookTypesInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnUpdateInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return updateDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return updateTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};HooksDispatcherOnRerenderInDEV={readContext:function(context){return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return rerenderReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnRerenderInDEV;try{return rerenderState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';updateHookTypesDev();return rerenderDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';updateHookTypesDev();return rerenderTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnMountInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();mountHookTypesDev();return mountCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();mountHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();mountHookTypesDev();return mountEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();mountHookTypesDev();return mountImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();mountHookTypesDev();return mountInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();mountHookTypesDev();return mountLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();mountHookTypesDev();return mountRef(initialValue);},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();mountHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnMountInDEV;try{return mountState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();mountHookTypesDev();return mountDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();mountHookTypesDev();return mountDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();mountHookTypesDev();return mountTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();mountHookTypesDev();return mountMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();mountHookTypesDev();return mountSyncExternalStore(subscribe,getSnapshot,getServerSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();mountHookTypesDev();return mountId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnUpdateInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();updateHookTypesDev();return updateDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();updateHookTypesDev();return updateTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};InvalidNestedHooksDispatcherOnRerenderInDEV={readContext:function(context){warnInvalidContextAccess();return readContext(context);},useCallback:function(callback,deps){currentHookNameInDev='useCallback';warnInvalidHookAccess();updateHookTypesDev();return updateCallback(callback,deps);},useContext:function(context){currentHookNameInDev='useContext';warnInvalidHookAccess();updateHookTypesDev();return readContext(context);},useEffect:function(create,deps){currentHookNameInDev='useEffect';warnInvalidHookAccess();updateHookTypesDev();return updateEffect(create,deps);},useImperativeHandle:function(ref,create,deps){currentHookNameInDev='useImperativeHandle';warnInvalidHookAccess();updateHookTypesDev();return updateImperativeHandle(ref,create,deps);},useInsertionEffect:function(create,deps){currentHookNameInDev='useInsertionEffect';warnInvalidHookAccess();updateHookTypesDev();return updateInsertionEffect(create,deps);},useLayoutEffect:function(create,deps){currentHookNameInDev='useLayoutEffect';warnInvalidHookAccess();updateHookTypesDev();return updateLayoutEffect(create,deps);},useMemo:function(create,deps){currentHookNameInDev='useMemo';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return updateMemo(create,deps);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useReducer:function(reducer,initialArg,init){currentHookNameInDev='useReducer';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return rerenderReducer(reducer,initialArg,init);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useRef:function(initialValue){currentHookNameInDev='useRef';warnInvalidHookAccess();updateHookTypesDev();return updateRef();},useState:function(initialState){currentHookNameInDev='useState';warnInvalidHookAccess();updateHookTypesDev();var prevDispatcher=ReactCurrentDispatcher$1.current;ReactCurrentDispatcher$1.current=InvalidNestedHooksDispatcherOnUpdateInDEV;try{return rerenderState(initialState);}finally{ReactCurrentDispatcher$1.current=prevDispatcher;}},useDebugValue:function(value,formatterFn){currentHookNameInDev='useDebugValue';warnInvalidHookAccess();updateHookTypesDev();return updateDebugValue();},useDeferredValue:function(value){currentHookNameInDev='useDeferredValue';warnInvalidHookAccess();updateHookTypesDev();return rerenderDeferredValue(value);},useTransition:function(){currentHookNameInDev='useTransition';warnInvalidHookAccess();updateHookTypesDev();return rerenderTransition();},useMutableSource:function(source,getSnapshot,subscribe){currentHookNameInDev='useMutableSource';warnInvalidHookAccess();updateHookTypesDev();return updateMutableSource();},useSyncExternalStore:function(subscribe,getSnapshot,getServerSnapshot){currentHookNameInDev='useSyncExternalStore';warnInvalidHookAccess();updateHookTypesDev();return updateSyncExternalStore(subscribe,getSnapshot);},useId:function(){currentHookNameInDev='useId';warnInvalidHookAccess();updateHookTypesDev();return updateId();},unstable_isNewReconciler:enableNewReconciler};}var now$2=Scheduler.unstable_now;var commitTime=0;var layoutEffectStartTime=-1;var profilerStartTime=-1;var passiveEffectStartTime=-1;/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */var currentUpdateIsNested=false;var nestedUpdateScheduled=false;function isCurrentUpdateNested(){return currentUpdateIsNested;}function markNestedUpdateScheduled(){{nestedUpdateScheduled=true;}}function resetNestedUpdateFlag(){{currentUpdateIsNested=false;nestedUpdateScheduled=false;}}function syncNestedUpdateFlag(){{currentUpdateIsNested=nestedUpdateScheduled;nestedUpdateScheduled=false;}}function getCommitTime(){return commitTime;}function recordCommitTime(){commitTime=now$2();}function startProfilerTimer(fiber){profilerStartTime=now$2();if(fiber.actualStartTime<0){fiber.actualStartTime=now$2();}}function stopProfilerTimerIfRunning(fiber){profilerStartTime=-1;}function stopProfilerTimerIfRunningAndRecordDelta(fiber,overrideBaseTime){if(profilerStartTime>=0){var elapsedTime=now$2()-profilerStartTime;fiber.actualDuration+=elapsedTime;if(overrideBaseTime){fiber.selfBaseDuration=elapsedTime;}profilerStartTime=-1;}}function recordLayoutEffectDuration(fiber){if(layoutEffectStartTime>=0){var elapsedTime=now$2()-layoutEffectStartTime;layoutEffectStartTime=-1;// Store duration on the next nearest Profiler ancestor\n// Or the root (for the DevTools Profiler to read)\nvar parentFiber=fiber.return;while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.effectDuration+=elapsedTime;return;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.effectDuration+=elapsedTime;return;}parentFiber=parentFiber.return;}}}function recordPassiveEffectDuration(fiber){if(passiveEffectStartTime>=0){var elapsedTime=now$2()-passiveEffectStartTime;passiveEffectStartTime=-1;// Store duration on the next nearest Profiler ancestor\n// Or the root (for the DevTools Profiler to read)\nvar parentFiber=fiber.return;while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;if(root!==null){root.passiveEffectDuration+=elapsedTime;}return;case Profiler:var parentStateNode=parentFiber.stateNode;if(parentStateNode!==null){// Detached fibers have their state node cleared out.\n// In this case, the return pointer is also cleared out,\n// so we won't be able to report the time spent in this Profiler's subtree.\nparentStateNode.passiveEffectDuration+=elapsedTime;}return;}parentFiber=parentFiber.return;}}}function startLayoutEffectTimer(){layoutEffectStartTime=now$2();}function startPassiveEffectTimer(){passiveEffectStartTime=now$2();}function transferActualDuration(fiber){// Transfer time spent rendering these children so we don't lose it\n// after we rerender. This is used as a helper in special cases\n// where we should count the work of multiple passes.\nvar child=fiber.child;while(child){fiber.actualDuration+=child.actualDuration;child=child.sibling;}}function createCapturedValue(value,source){// If the value is an error, call this function immediately after it is thrown\n// so the stack is accurate.\nreturn{value:value,source:source,stack:getStackByFiberInDevAndProd(source)};}// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\nfunction showErrorDialog(boundary,errorInfo){return true;}function logCapturedError(boundary,errorInfo){try{var logError=showErrorDialog(boundary,errorInfo);// Allow injected showErrorDialog() to prevent default console.error logging.\n// This enables renderers like ReactNative to better manage redbox behavior.\nif(logError===false){return;}var error=errorInfo.value;if(true){var source=errorInfo.source;var stack=errorInfo.stack;var componentStack=stack!==null?stack:'';// Browsers support silencing uncaught errors by calling\n// `preventDefault()` in window `error` handler.\n// We record this information as an expando on the error.\nif(error!=null&&error._suppressLogging){if(boundary.tag===ClassComponent){// The error is recoverable and was silenced.\n// Ignore it and don't print the stack addendum.\n// This is handy for testing error boundaries without noise.\nreturn;}// The error is fatal. Since the silencing might have\n// been accidental, we'll surface it anyway.\n// However, the browser would have silenced the original error\n// so we'll print it first, and then print the stack addendum.\nconsole['error'](error);// Don't transform to our wrapper\n// For a more detailed description of this block, see:\n// https://github.com/facebook/react/pull/13384\n}var componentName=source?getComponentNameFromFiber(source):null;var componentNameMessage=componentName?\"The above error occurred in the <\"+componentName+\"> component:\":'The above error occurred in one of your React components:';var errorBoundaryMessage;if(boundary.tag===HostRoot){errorBoundaryMessage='Consider adding an error boundary to your tree to customize error handling behavior.\\n'+'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';}else{var errorBoundaryName=getComponentNameFromFiber(boundary)||'Anonymous';errorBoundaryMessage=\"React will try to recreate this component tree from scratch \"+(\"using the error boundary you provided, \"+errorBoundaryName+\".\");}var combinedMessage=componentNameMessage+\"\\n\"+componentStack+\"\\n\\n\"+(\"\"+errorBoundaryMessage);// In development, we provide our own message with just the component stack.\n// We don't include the original error message and JS stack because the browser\n// has already printed it. Even if the application swallows the error, it is still\n// displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\nconsole['error'](combinedMessage);// Don't transform to our wrapper\n}else{// In production, we print the error directly.\n// This will include the message, the JS stack, and anything the browser wants to show.\n// We pass the error object instead of custom message so that the browser displays the error natively.\nconsole['error'](error);// Don't transform to our wrapper\n}}catch(e){// This method must not throw, or React internal state will get messed up.\n// If console.error is overridden, or logCapturedError() shows a dialog that throws,\n// we want to report this error outside of the normal stack as a last resort.\n// https://github.com/facebook/react/issues/13188\nsetTimeout(function(){throw e;});}}var PossiblyWeakMap$1=typeof WeakMap==='function'?WeakMap:Map;function createRootErrorUpdate(fiber,errorInfo,lane){var update=createUpdate(NoTimestamp,lane);// Unmount the root by rendering null.\nupdate.tag=CaptureUpdate;// Caution: React DevTools currently depends on this property\n// being called \"element\".\nupdate.payload={element:null};var error=errorInfo.value;update.callback=function(){onUncaughtError(error);logCapturedError(fiber,errorInfo);};return update;}function createClassErrorUpdate(fiber,errorInfo,lane){var update=createUpdate(NoTimestamp,lane);update.tag=CaptureUpdate;var getDerivedStateFromError=fiber.type.getDerivedStateFromError;if(typeof getDerivedStateFromError==='function'){var error$1=errorInfo.value;update.payload=function(){return getDerivedStateFromError(error$1);};update.callback=function(){{markFailedErrorBoundaryForHotReloading(fiber);}logCapturedError(fiber,errorInfo);};}var inst=fiber.stateNode;if(inst!==null&&typeof inst.componentDidCatch==='function'){update.callback=function callback(){{markFailedErrorBoundaryForHotReloading(fiber);}logCapturedError(fiber,errorInfo);if(typeof getDerivedStateFromError!=='function'){// To preserve the preexisting retry behavior of error boundaries,\n// we keep track of which ones already failed during this batch.\n// This gets reset before we yield back to the browser.\n// TODO: Warn in strict mode if getDerivedStateFromError is\n// not defined.\nmarkLegacyErrorBoundaryAsFailed(this);}var error$1=errorInfo.value;var stack=errorInfo.stack;this.componentDidCatch(error$1,{componentStack:stack!==null?stack:''});{if(typeof getDerivedStateFromError!=='function'){// If componentDidCatch is the only error boundary method defined,\n// then it needs to call setState to recover from errors.\n// If no state update is scheduled then the boundary will swallow the error.\nif(!includesSomeLane(fiber.lanes,SyncLane)){error('%s: Error boundaries should implement getDerivedStateFromError(). '+'In that method, return a state update to display an error message or fallback UI.',getComponentNameFromFiber(fiber)||'Unknown');}}}};}return update;}function attachPingListener(root,wakeable,lanes){// Attach a ping listener\n//\n// The data might resolve before we have a chance to commit the fallback. Or,\n// in the case of a refresh, we'll never commit a fallback. So we need to\n// attach a listener now. When it resolves (\"pings\"), we can decide whether to\n// try rendering the tree again.\n//\n// Only attach a listener if one does not already exist for the lanes\n// we're currently rendering (which acts like a \"thread ID\" here).\n//\n// We only need to do this in concurrent mode. Legacy Suspense always\n// commits fallbacks synchronously, so there are no pings.\nvar pingCache=root.pingCache;var threadIDs;if(pingCache===null){pingCache=root.pingCache=new PossiblyWeakMap$1();threadIDs=new Set();pingCache.set(wakeable,threadIDs);}else{threadIDs=pingCache.get(wakeable);if(threadIDs===undefined){threadIDs=new Set();pingCache.set(wakeable,threadIDs);}}if(!threadIDs.has(lanes)){// Memoize using the thread ID to prevent redundant listeners.\nthreadIDs.add(lanes);var ping=pingSuspendedRoot.bind(null,root,wakeable,lanes);{if(isDevToolsPresent){// If we have pending work still, restore the original updaters\nrestorePendingUpdaters(root,lanes);}}wakeable.then(ping,ping);}}function attachRetryListener(suspenseBoundary,root,wakeable,lanes){// Retry listener\n//\n// If the fallback does commit, we need to attach a different type of\n// listener. This one schedules an update on the Suspense boundary to turn\n// the fallback state off.\n//\n// Stash the wakeable on the boundary fiber so we can access it in the\n// commit phase.\n//\n// When the wakeable resolves, we'll attempt to render the boundary\n// again (\"retry\").\nvar wakeables=suspenseBoundary.updateQueue;if(wakeables===null){var updateQueue=new Set();updateQueue.add(wakeable);suspenseBoundary.updateQueue=updateQueue;}else{wakeables.add(wakeable);}}function resetSuspendedComponent(sourceFiber,rootRenderLanes){// A legacy mode Suspense quirk, only relevant to hook components.\nvar tag=sourceFiber.tag;if((sourceFiber.mode&ConcurrentMode)===NoMode&&(tag===FunctionComponent||tag===ForwardRef||tag===SimpleMemoComponent)){var currentSource=sourceFiber.alternate;if(currentSource){sourceFiber.updateQueue=currentSource.updateQueue;sourceFiber.memoizedState=currentSource.memoizedState;sourceFiber.lanes=currentSource.lanes;}else{sourceFiber.updateQueue=null;sourceFiber.memoizedState=null;}}}function getNearestSuspenseBoundaryToCapture(returnFiber){var node=returnFiber;do{if(node.tag===SuspenseComponent&&shouldCaptureSuspense(node)){return node;}// This boundary already captured during this render. Continue to the next\n// boundary.\nnode=node.return;}while(node!==null);return null;}function markSuspenseBoundaryShouldCapture(suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes){// This marks a Suspense boundary so that when we're unwinding the stack,\n// it captures the suspended \"exception\" and does a second (fallback) pass.\nif((suspenseBoundary.mode&ConcurrentMode)===NoMode){// Legacy Mode Suspense\n//\n// If the boundary is in legacy mode, we should *not*\n// suspend the commit. Pretend as if the suspended component rendered\n// null and keep rendering. When the Suspense boundary completes,\n// we'll do a second pass to render the fallback.\nif(suspenseBoundary===returnFiber){// Special case where we suspended while reconciling the children of\n// a Suspense boundary's inner Offscreen wrapper fiber. This happens\n// when a React.lazy component is a direct child of a\n// Suspense boundary.\n//\n// Suspense boundaries are implemented as multiple fibers, but they\n// are a single conceptual unit. The legacy mode behavior where we\n// pretend the suspended fiber committed as `null` won't work,\n// because in this case the \"suspended\" fiber is the inner\n// Offscreen wrapper.\n//\n// Because the contents of the boundary haven't started rendering\n// yet (i.e. nothing in the tree has partially rendered) we can\n// switch to the regular, concurrent mode behavior: mark the\n// boundary with ShouldCapture and enter the unwind phase.\nsuspenseBoundary.flags|=ShouldCapture;}else{suspenseBoundary.flags|=DidCapture;sourceFiber.flags|=ForceUpdateForLegacySuspense;// We're going to commit this fiber even though it didn't complete.\n// But we shouldn't call any lifecycle methods or callbacks. Remove\n// all lifecycle effect tags.\nsourceFiber.flags&=~(LifecycleEffectMask|Incomplete);if(supportsPersistence&&enablePersistentOffscreenHostContainer){// Another legacy Suspense quirk. In persistent mode, if this is the\n// initial mount, override the props of the host container to hide\n// its contents.\nvar currentSuspenseBoundary=suspenseBoundary.alternate;if(currentSuspenseBoundary===null){var offscreenFiber=suspenseBoundary.child;var offscreenContainer=offscreenFiber.child;if(offscreenContainer!==null){var children=offscreenContainer.memoizedProps.children;var containerProps=getOffscreenContainerProps('hidden',children);offscreenContainer.pendingProps=containerProps;offscreenContainer.memoizedProps=containerProps;}}}if(sourceFiber.tag===ClassComponent){var currentSourceFiber=sourceFiber.alternate;if(currentSourceFiber===null){// This is a new mount. Change the tag so it's not mistaken for a\n// completed class component. For example, we should not call\n// componentWillUnmount if it is deleted.\nsourceFiber.tag=IncompleteClassComponent;}else{// When we try rendering again, we should not reuse the current fiber,\n// since it's known to be in an inconsistent state. Use a force update to\n// prevent a bail out.\nvar update=createUpdate(NoTimestamp,SyncLane);update.tag=ForceUpdate;enqueueUpdate(sourceFiber,update);}}// The source fiber did not complete. Mark it with Sync priority to\n// indicate that it still has pending work.\nsourceFiber.lanes=mergeLanes(sourceFiber.lanes,SyncLane);}return suspenseBoundary;}// Confirmed that the boundary is in a concurrent mode tree. Continue\n// with the normal suspend path.\n//\n// After this we'll use a set of heuristics to determine whether this\n// render pass will run to completion or restart or \"suspend\" the commit.\n// The actual logic for this is spread out in different places.\n//\n// This first principle is that if we're going to suspend when we complete\n// a root, then we should also restart if we get an update or ping that\n// might unsuspend it, and vice versa. The only reason to suspend is\n// because you think you might want to restart before committing. However,\n// it doesn't make sense to restart only while in the period we're suspended.\n//\n// Restarting too aggressively is also not good because it starves out any\n// intermediate loading state. So we use heuristics to determine when.\n// Suspense Heuristics\n//\n// If nothing threw a Promise or all the same fallbacks are already showing,\n// then don't suspend/restart.\n//\n// If this is an initial render of a new tree of Suspense boundaries and\n// those trigger a fallback, then don't suspend/restart. We want to ensure\n// that we can show the initial loading state as quickly as possible.\n//\n// If we hit a \"Delayed\" case, such as when we'd switch from content back into\n// a fallback, then we should always suspend/restart. Transitions apply\n// to this case. If none is defined, JND is used instead.\n//\n// If we're already showing a fallback and it gets \"retried\", allowing us to show\n// another level, but there's still an inner boundary that would show a fallback,\n// then we suspend/restart for 500ms since the last time we showed a fallback\n// anywhere in the tree. This effectively throttles progressive loading into a\n// consistent train of commits. This also gives us an opportunity to restart to\n// get to the completed state slightly earlier.\n//\n// If there's ambiguity due to batching it's resolved in preference of:\n// 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n//\n// We want to ensure that a \"busy\" state doesn't get force committed. We want to\n// ensure that new initial loading states can commit as soon as possible.\nsuspenseBoundary.flags|=ShouldCapture;// TODO: I think we can remove this, since we now use `DidCapture` in\n// the begin phase to prevent an early bailout.\nsuspenseBoundary.lanes=rootRenderLanes;return suspenseBoundary;}function throwException(root,returnFiber,sourceFiber,value,rootRenderLanes){// The source fiber did not complete.\nsourceFiber.flags|=Incomplete;{if(isDevToolsPresent){// If we have pending work still, restore the original updaters\nrestorePendingUpdaters(root,rootRenderLanes);}}if(value!==null&&typeof value==='object'&&typeof value.then==='function'){// This is a wakeable. The component suspended.\nvar wakeable=value;resetSuspendedComponent(sourceFiber);var suspenseBoundary=getNearestSuspenseBoundaryToCapture(returnFiber);if(suspenseBoundary!==null){suspenseBoundary.flags&=~ForceClientRender;markSuspenseBoundaryShouldCapture(suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes);// We only attach ping listeners in concurrent mode. Legacy Suspense always\n// commits fallbacks synchronously, so there are no pings.\nif(suspenseBoundary.mode&ConcurrentMode){attachPingListener(root,wakeable,rootRenderLanes);}attachRetryListener(suspenseBoundary,root,wakeable);return;}else{// No boundary was found. Unless this is a sync update, this is OK.\n// We can suspend and wait for more data to arrive.\nif(!includesSyncLane(rootRenderLanes)){// This is not a sync update. Suspend. Since we're not activating a\n// Suspense boundary, this will unwind all the way to the root without\n// performing a second pass to render a fallback. (This is arguably how\n// refresh transitions should work, too, since we're not going to commit\n// the fallbacks anyway.)\n//\n// This case also applies to initial hydration.\nattachPingListener(root,wakeable,rootRenderLanes);renderDidSuspendDelayIfPossible();return;}// This is a sync/discrete update. We treat this case like an error\n// because discrete renders are expected to produce a complete tree\n// synchronously to maintain consistency with external state.\nvar uncaughtSuspenseError=new Error('A component suspended while responding to synchronous input. This '+'will cause the UI to be replaced with a loading indicator. To '+'fix, updates that suspend should be wrapped '+'with startTransition.');// If we're outside a transition, fall through to the regular error path.\n// The error will be caught by the nearest suspense boundary.\nvalue=uncaughtSuspenseError;}}else{// This is a regular error, not a Suspense wakeable.\nif(getIsHydrating()&&sourceFiber.mode&ConcurrentMode){markDidSuspendWhileHydratingDEV();var _suspenseBoundary=getNearestSuspenseBoundaryToCapture(returnFiber);// If the error was thrown during hydration, we may be able to recover by\n// discarding the dehydrated content and switching to a client render.\n// Instead of surfacing the error, find the nearest Suspense boundary\n// and render it again without hydration.\nif(_suspenseBoundary!==null){if((_suspenseBoundary.flags&ShouldCapture)===NoFlags){// Set a flag to indicate that we should try rendering the normal\n// children again, not the fallback.\n_suspenseBoundary.flags|=ForceClientRender;}markSuspenseBoundaryShouldCapture(_suspenseBoundary,returnFiber,sourceFiber,root,rootRenderLanes);// Even though the user may not be affected by this error, we should\n// still log it so it can be fixed.\nqueueHydrationError(value);return;}}}// We didn't find a boundary that could handle this type of exception. Start\n// over and traverse parent path again, this time treating the exception\n// as an error.\nrenderDidError(value);value=createCapturedValue(value,sourceFiber);var workInProgress=returnFiber;do{switch(workInProgress.tag){case HostRoot:{var _errorInfo=value;workInProgress.flags|=ShouldCapture;var lane=pickArbitraryLane(rootRenderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,lane);var update=createRootErrorUpdate(workInProgress,_errorInfo,lane);enqueueCapturedUpdate(workInProgress,update);return;}case ClassComponent:// Capture and retry\nvar errorInfo=value;var ctor=workInProgress.type;var instance=workInProgress.stateNode;if((workInProgress.flags&DidCapture)===NoFlags&&(typeof ctor.getDerivedStateFromError==='function'||instance!==null&&typeof instance.componentDidCatch==='function'&&!isAlreadyFailedLegacyErrorBoundary(instance))){workInProgress.flags|=ShouldCapture;var _lane=pickArbitraryLane(rootRenderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,_lane);// Schedule the error boundary to re-render using updated state\nvar _update=createClassErrorUpdate(workInProgress,errorInfo,_lane);enqueueCapturedUpdate(workInProgress,_update);return;}break;}workInProgress=workInProgress.return;}while(workInProgress!==null);}function getSuspendedCache(){{return null;}// This function is called when a Suspense boundary suspends. It returns the\n}function markUpdate(workInProgress){// Tag the fiber with an update effect. This turns a Placement into\n// a PlacementAndUpdate.\nworkInProgress.flags|=Update;}function markRef(workInProgress){workInProgress.flags|=Ref;{workInProgress.flags|=RefStatic;}}function hadNoMutationsEffects(current,completedWork){var didBailout=current!==null&&current.child===completedWork.child;if(didBailout){return true;}if((completedWork.flags&ChildDeletion)!==NoFlags){return false;}// TODO: If we move the `hadNoMutationsEffects` call after `bubbleProperties`\n// then we only have to check the `completedWork.subtreeFlags`.\nvar child=completedWork.child;while(child!==null){if((child.flags&MutationMask)!==NoFlags||(child.subtreeFlags&MutationMask)!==NoFlags){return false;}child=child.sibling;}return true;}var appendAllChildren;var updateHostContainer;var updateHostComponent;var updateHostText;if(supportsMutation){// Mutation mode\nappendAllChildren=function(parent,workInProgress,needsVisibilityToggle,isHidden){// We only have the top Fiber that was created but we need recurse down its\n// children to find all the terminal nodes.\nvar node=workInProgress.child;while(node!==null){if(node.tag===HostComponent||node.tag===HostText){appendInitialChild(parent,node.stateNode);}else if(node.tag===HostPortal);else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===workInProgress){return;}while(node.sibling===null){if(node.return===null||node.return===workInProgress){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}};updateHostContainer=function(current,workInProgress){// Noop\n};updateHostComponent=function(current,workInProgress,type,newProps,rootContainerInstance){// If we have an alternate, that means this is an update and we need to\n// schedule a side-effect to do the updates.\nvar oldProps=current.memoizedProps;if(oldProps===newProps){// In mutation mode, this is sufficient for a bailout because\n// we won't touch this node even if children changed.\nreturn;}// If we get updated because one of our children updated, we don't\n// have newProps so we'll have to reuse them.\n// TODO: Split the update API as separate for the props vs. children.\n// Even better would be if children weren't special cased at all tho.\nvar instance=workInProgress.stateNode;var currentHostContext=getHostContext();// TODO: Experiencing an error where oldProps is null. Suggests a host\n// component is hitting the resume path. Figure out why. Possibly\n// related to `hidden`.\nvar updatePayload=prepareUpdate(instance,type,oldProps,newProps,rootContainerInstance,currentHostContext);// TODO: Type this specific to this type of component.\nworkInProgress.updateQueue=updatePayload;// If the update payload indicates that there is a change or if there\n// is a new ref we mark this as an update. All the work is done in commitWork.\nif(updatePayload){markUpdate(workInProgress);}};updateHostText=function(current,workInProgress,oldText,newText){// If the text differs, mark it as an update. All the work in done in commitWork.\nif(oldText!==newText){markUpdate(workInProgress);}};}else if(supportsPersistence){// Persistent host tree mode\nappendAllChildren=function(parent,workInProgress,needsVisibilityToggle,isHidden){// We only have the top Fiber that was created but we need recurse down its\n// children to find all the terminal nodes.\nvar node=workInProgress.child;while(node!==null){// eslint-disable-next-line no-labels\nif(node.tag===HostComponent){var instance=node.stateNode;if(needsVisibilityToggle&&isHidden){// This child is inside a timed out tree. Hide it.\nvar props=node.memoizedProps;var type=node.type;instance=cloneHiddenInstance(instance,type,props,node);}appendInitialChild(parent,instance);}else if(node.tag===HostText){var _instance=node.stateNode;if(needsVisibilityToggle&&isHidden){// This child is inside a timed out tree. Hide it.\nvar text=node.memoizedProps;_instance=cloneHiddenTextInstance(_instance,text,node);}appendInitialChild(parent,_instance);}else if(node.tag===HostPortal);else if(node.tag===OffscreenComponent&&node.memoizedState!==null){// The children in this boundary are hidden. Toggle their visibility\n// before appending.\nvar child=node.child;if(child!==null){child.return=node;}{appendAllChildren(parent,node,true,true);}}else if(node.child!==null){node.child.return=node;node=node.child;continue;}// $FlowFixMe This is correct but Flow is confused by the labeled break.\nnode=node;if(node===workInProgress){return;}while(node.sibling===null){if(node.return===null||node.return===workInProgress){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}};// An unfortunate fork of appendAllChildren because we have two different parent types.\nvar appendAllChildrenToContainer=function(containerChildSet,workInProgress,needsVisibilityToggle,isHidden){// We only have the top Fiber that was created but we need recurse down its\n// children to find all the terminal nodes.\nvar node=workInProgress.child;while(node!==null){// eslint-disable-next-line no-labels\nif(node.tag===HostComponent){var instance=node.stateNode;if(needsVisibilityToggle&&isHidden){// This child is inside a timed out tree. Hide it.\nvar props=node.memoizedProps;var type=node.type;instance=cloneHiddenInstance(instance,type,props,node);}appendChildToContainerChildSet(containerChildSet,instance);}else if(node.tag===HostText){var _instance2=node.stateNode;if(needsVisibilityToggle&&isHidden){// This child is inside a timed out tree. Hide it.\nvar text=node.memoizedProps;_instance2=cloneHiddenTextInstance(_instance2,text,node);}appendChildToContainerChildSet(containerChildSet,_instance2);}else if(node.tag===HostPortal);else if(node.tag===OffscreenComponent&&node.memoizedState!==null){// The children in this boundary are hidden. Toggle their visibility\n// before appending.\nvar child=node.child;if(child!==null){child.return=node;}{appendAllChildrenToContainer(containerChildSet,node,true,true);}}else if(node.child!==null){node.child.return=node;node=node.child;continue;}// $FlowFixMe This is correct but Flow is confused by the labeled break.\nnode=node;if(node===workInProgress){return;}while(node.sibling===null){if(node.return===null||node.return===workInProgress){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}};updateHostContainer=function(current,workInProgress){var portalOrRoot=workInProgress.stateNode;var childrenUnchanged=hadNoMutationsEffects(current,workInProgress);if(childrenUnchanged);else{var container=portalOrRoot.containerInfo;var newChildSet=createContainerChildSet(container);// If children might have changed, we have to add them all to the set.\nappendAllChildrenToContainer(newChildSet,workInProgress,false,false);portalOrRoot.pendingChildren=newChildSet;// Schedule an update on the container to swap out the container.\nmarkUpdate(workInProgress);finalizeContainerChildren(container,newChildSet);}};updateHostComponent=function(current,workInProgress,type,newProps,rootContainerInstance){var currentInstance=current.stateNode;var oldProps=current.memoizedProps;// If there are no effects associated with this node, then none of our children had any updates.\n// This guarantees that we can reuse all of them.\nvar childrenUnchanged=hadNoMutationsEffects(current,workInProgress);if(childrenUnchanged&&oldProps===newProps){// No changes, just reuse the existing instance.\n// Note that this might release a previous clone.\nworkInProgress.stateNode=currentInstance;return;}var recyclableInstance=workInProgress.stateNode;var currentHostContext=getHostContext();var updatePayload=null;if(oldProps!==newProps){updatePayload=prepareUpdate(recyclableInstance,type,oldProps,newProps,rootContainerInstance,currentHostContext);}if(childrenUnchanged&&updatePayload===null){// No changes, just reuse the existing instance.\n// Note that this might release a previous clone.\nworkInProgress.stateNode=currentInstance;return;}var newInstance=cloneInstance(currentInstance,updatePayload,type,oldProps,newProps,workInProgress,childrenUnchanged,recyclableInstance);if(finalizeInitialChildren(newInstance,type,newProps,rootContainerInstance,currentHostContext)){markUpdate(workInProgress);}workInProgress.stateNode=newInstance;if(childrenUnchanged){// If there are no other effects in this tree, we need to flag this node as having one.\n// Even though we're not going to use it for anything.\n// Otherwise parents won't know that there are new children to propagate upwards.\nmarkUpdate(workInProgress);}else{// If children might have changed, we have to add them all to the set.\nappendAllChildren(newInstance,workInProgress,false,false);}};updateHostText=function(current,workInProgress,oldText,newText){if(oldText!==newText){// If the text content differs, we'll create a new text instance for it.\nvar rootContainerInstance=getRootHostContainer();var currentHostContext=getHostContext();workInProgress.stateNode=createTextInstance(newText,rootContainerInstance,currentHostContext,workInProgress);// We'll have to mark it as having an effect, even though we won't use the effect for anything.\n// This lets the parents know that at least one of their children has changed.\nmarkUpdate(workInProgress);}else{workInProgress.stateNode=current.stateNode;}};}else{// No host operations\nupdateHostContainer=function(current,workInProgress){// Noop\n};updateHostComponent=function(current,workInProgress,type,newProps,rootContainerInstance){// Noop\n};updateHostText=function(current,workInProgress,oldText,newText){// Noop\n};}function cutOffTailIfNeeded(renderState,hasRenderedATailFallback){if(getIsHydrating()){// If we're hydrating, we should consume as many items as we can\n// so we don't leave any behind.\nreturn;}switch(renderState.tailMode){case'hidden':{// Any insertions at the end of the tail list after this point\n// should be invisible. If there are already mounted boundaries\n// anything before them are not considered for collapsing.\n// Therefore we need to go through the whole tail to find if\n// there are any.\nvar tailNode=renderState.tail;var lastTailNode=null;while(tailNode!==null){if(tailNode.alternate!==null){lastTailNode=tailNode;}tailNode=tailNode.sibling;}// Next we're simply going to delete all insertions after the\n// last rendered item.\nif(lastTailNode===null){// All remaining items in the tail are insertions.\nrenderState.tail=null;}else{// Detach the insertion after the last node that was already\n// inserted.\nlastTailNode.sibling=null;}break;}case'collapsed':{// Any insertions at the end of the tail list after this point\n// should be invisible. If there are already mounted boundaries\n// anything before them are not considered for collapsing.\n// Therefore we need to go through the whole tail to find if\n// there are any.\nvar _tailNode=renderState.tail;var _lastTailNode=null;while(_tailNode!==null){if(_tailNode.alternate!==null){_lastTailNode=_tailNode;}_tailNode=_tailNode.sibling;}// Next we're simply going to delete all insertions after the\n// last rendered item.\nif(_lastTailNode===null){// All remaining items in the tail are insertions.\nif(!hasRenderedATailFallback&&renderState.tail!==null){// We suspended during the head. We want to show at least one\n// row at the tail. So we'll keep on and cut off the rest.\nrenderState.tail.sibling=null;}else{renderState.tail=null;}}else{// Detach the insertion after the last node that was already\n// inserted.\n_lastTailNode.sibling=null;}break;}}}function bubbleProperties(completedWork){var didBailout=completedWork.alternate!==null&&completedWork.alternate.child===completedWork.child;var newChildLanes=NoLanes;var subtreeFlags=NoFlags;if(!didBailout){// Bubble up the earliest expiration time.\nif((completedWork.mode&ProfileMode)!==NoMode){// In profiling mode, resetChildExpirationTime is also used to reset\n// profiler durations.\nvar actualDuration=completedWork.actualDuration;var treeBaseDuration=completedWork.selfBaseDuration;var child=completedWork.child;while(child!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(child.lanes,child.childLanes));subtreeFlags|=child.subtreeFlags;subtreeFlags|=child.flags;// When a fiber is cloned, its actualDuration is reset to 0. This value will\n// only be updated if work is done on the fiber (i.e. it doesn't bailout).\n// When work is done, it should bubble to the parent's actualDuration. If\n// the fiber has not been cloned though, (meaning no work was done), then\n// this value will reflect the amount of time spent working on a previous\n// render. In that case it should not bubble. We determine whether it was\n// cloned by comparing the child pointer.\nactualDuration+=child.actualDuration;treeBaseDuration+=child.treeBaseDuration;child=child.sibling;}completedWork.actualDuration=actualDuration;completedWork.treeBaseDuration=treeBaseDuration;}else{var _child=completedWork.child;while(_child!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child.lanes,_child.childLanes));subtreeFlags|=_child.subtreeFlags;subtreeFlags|=_child.flags;// Update the return pointer so the tree is consistent. This is a code\n// smell because it assumes the commit phase is never concurrent with\n// the render phase. Will address during refactor to alternate model.\n_child.return=completedWork;_child=_child.sibling;}}completedWork.subtreeFlags|=subtreeFlags;}else{// Bubble up the earliest expiration time.\nif((completedWork.mode&ProfileMode)!==NoMode){// In profiling mode, resetChildExpirationTime is also used to reset\n// profiler durations.\nvar _treeBaseDuration=completedWork.selfBaseDuration;var _child2=completedWork.child;while(_child2!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child2.lanes,_child2.childLanes));// \"Static\" flags share the lifetime of the fiber/hook they belong to,\n// so we should bubble those up even during a bailout. All the other\n// flags have a lifetime only of a single render + commit, so we should\n// ignore them.\nsubtreeFlags|=_child2.subtreeFlags&StaticMask;subtreeFlags|=_child2.flags&StaticMask;_treeBaseDuration+=_child2.treeBaseDuration;_child2=_child2.sibling;}completedWork.treeBaseDuration=_treeBaseDuration;}else{var _child3=completedWork.child;while(_child3!==null){newChildLanes=mergeLanes(newChildLanes,mergeLanes(_child3.lanes,_child3.childLanes));// \"Static\" flags share the lifetime of the fiber/hook they belong to,\n// so we should bubble those up even during a bailout. All the other\n// flags have a lifetime only of a single render + commit, so we should\n// ignore them.\nsubtreeFlags|=_child3.subtreeFlags&StaticMask;subtreeFlags|=_child3.flags&StaticMask;// Update the return pointer so the tree is consistent. This is a code\n// smell because it assumes the commit phase is never concurrent with\n// the render phase. Will address during refactor to alternate model.\n_child3.return=completedWork;_child3=_child3.sibling;}}completedWork.subtreeFlags|=subtreeFlags;}completedWork.childLanes=newChildLanes;return didBailout;}function completeWork(current,workInProgress,renderLanes){var newProps=workInProgress.pendingProps;// Note: This intentionally doesn't check if we're hydrating because comparing\n// to the current tree provider fiber is just as fast and less error-prone.\n// Ideally we would have a special version of the work loop only\n// for hydration.\npopTreeContext(workInProgress);switch(workInProgress.tag){case IndeterminateComponent:case LazyComponent:case SimpleMemoComponent:case FunctionComponent:case ForwardRef:case Fragment:case Mode:case Profiler:case ContextConsumer:case MemoComponent:bubbleProperties(workInProgress);return null;case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){popContext(workInProgress);}bubbleProperties(workInProgress);return null;}case HostRoot:{var fiberRoot=workInProgress.stateNode;popHostContainer(workInProgress);popTopLevelContextObject(workInProgress);resetWorkInProgressVersions();if(fiberRoot.pendingContext){fiberRoot.context=fiberRoot.pendingContext;fiberRoot.pendingContext=null;}if(current===null||current.child===null){// If we hydrated, pop so that we can delete any remaining children\n// that weren't hydrated.\nvar wasHydrated=popHydrationState(workInProgress);if(wasHydrated){// If we hydrated, then we'll need to schedule an update for\n// the commit side-effects on the root.\nmarkUpdate(workInProgress);}else{if(current!==null){var prevState=current.memoizedState;if(// Check if this is a client root\n!prevState.isDehydrated||// Check if we reverted to client rendering (e.g. due to an error)\n(workInProgress.flags&ForceClientRender)!==NoFlags){// Schedule an effect to clear this container at the start of the\n// next commit. This handles the case of React rendering into a\n// container with previous children. It's also safe to do for\n// updates too, because current.child would only be null if the\n// previous render was null (so the container would already\n// be empty).\nworkInProgress.flags|=Snapshot;// If this was a forced client render, there may have been\n// recoverable errors during first hydration attempt. If so, add\n// them to a queue so we can log them in the commit phase.\nupgradeHydrationErrorsToRecoverable();}}}}updateHostContainer(current,workInProgress);bubbleProperties(workInProgress);return null;}case HostComponent:{popHostContext(workInProgress);var rootContainerInstance=getRootHostContainer();var type=workInProgress.type;if(current!==null&&workInProgress.stateNode!=null){updateHostComponent(current,workInProgress,type,newProps,rootContainerInstance);if(current.ref!==workInProgress.ref){markRef(workInProgress);}}else{if(!newProps){if(workInProgress.stateNode===null){throw new Error('We must have new props for new mounts. This error is likely '+'caused by a bug in React. Please file an issue.');}// This can happen when we abort work.\nbubbleProperties(workInProgress);return null;}var currentHostContext=getHostContext();// TODO: Move createInstance to beginWork and keep it on a context\n// \"stack\" as the parent. Then append children as we go in beginWork\n// or completeWork depending on whether we want to add them top->down or\n// bottom->up. Top->down is faster in IE11.\nvar _wasHydrated=popHydrationState(workInProgress);if(_wasHydrated){// TODO: Move this and createInstance step into the beginPhase\n// to consolidate.\nif(prepareToHydrateHostInstance(workInProgress,rootContainerInstance,currentHostContext)){// If changes to the hydrated node need to be applied at the\n// commit-phase we mark this as such.\nmarkUpdate(workInProgress);}}else{var instance=createInstance(type,newProps,rootContainerInstance,currentHostContext,workInProgress);appendAllChildren(instance,workInProgress,false,false);workInProgress.stateNode=instance;// Certain renderers require commit-time effects for initial mount.\n// (eg DOM renderer supports auto-focus for certain elements).\n// Make sure such renderers get scheduled for later work.\nif(finalizeInitialChildren(instance,type,newProps,rootContainerInstance,currentHostContext)){markUpdate(workInProgress);}}if(workInProgress.ref!==null){// If there is a ref on a host node we need to schedule a callback\nmarkRef(workInProgress);}}bubbleProperties(workInProgress);return null;}case HostText:{var newText=newProps;if(current&&workInProgress.stateNode!=null){var oldText=current.memoizedProps;// If we have an alternate, that means this is an update and we need\n// to schedule a side-effect to do the updates.\nupdateHostText(current,workInProgress,oldText,newText);}else{if(typeof newText!=='string'){if(workInProgress.stateNode===null){throw new Error('We must have new props for new mounts. This error is likely '+'caused by a bug in React. Please file an issue.');}// This can happen when we abort work.\n}var _rootContainerInstance=getRootHostContainer();var _currentHostContext=getHostContext();var _wasHydrated2=popHydrationState(workInProgress);if(_wasHydrated2){if(prepareToHydrateHostTextInstance(workInProgress)){markUpdate(workInProgress);}}else{workInProgress.stateNode=createTextInstance(newText,_rootContainerInstance,_currentHostContext,workInProgress);}}bubbleProperties(workInProgress);return null;}case SuspenseComponent:{popSuspenseContext(workInProgress);var nextState=workInProgress.memoizedState;{if(hasUnhydratedTailNodes()&&(workInProgress.mode&ConcurrentMode)!==NoMode&&(workInProgress.flags&DidCapture)===NoFlags){warnIfUnhydratedTailNodes(workInProgress);resetHydrationState();workInProgress.flags|=ForceClientRender|Incomplete|ShouldCapture;return workInProgress;}if(nextState!==null&&nextState.dehydrated!==null){// We might be inside a hydration state the first time we're picking up this\n// Suspense boundary, and also after we've reentered it for further hydration.\nvar _wasHydrated3=popHydrationState(workInProgress);if(current===null){if(!_wasHydrated3){throw new Error('A dehydrated suspense component was completed without a hydrated node. '+'This is probably a bug in React.');}prepareToHydrateHostSuspenseInstance(workInProgress);bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){var isTimedOutSuspense=nextState!==null;if(isTimedOutSuspense){// Don't count time spent in a timed out Suspense subtree as part of the base duration.\nvar primaryChildFragment=workInProgress.child;if(primaryChildFragment!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator\nworkInProgress.treeBaseDuration-=primaryChildFragment.treeBaseDuration;}}}}return null;}else{// We might have reentered this boundary to hydrate it. If so, we need to reset the hydration\n// state since we're now exiting out of it. popHydrationState doesn't do that for us.\nresetHydrationState();if((workInProgress.flags&DidCapture)===NoFlags){// This boundary did not suspend so it's now hydrated and unsuspended.\nworkInProgress.memoizedState=null;}// If nothing suspended, we need to schedule an effect to mark this boundary\n// as having hydrated so events know that they're free to be invoked.\n// It's also a signal to replay events and the suspense callback.\n// If something suspended, schedule an effect to attach retry listeners.\n// So we might as well always mark this.\nworkInProgress.flags|=Update;bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){var _isTimedOutSuspense=nextState!==null;if(_isTimedOutSuspense){// Don't count time spent in a timed out Suspense subtree as part of the base duration.\nvar _primaryChildFragment=workInProgress.child;if(_primaryChildFragment!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator\nworkInProgress.treeBaseDuration-=_primaryChildFragment.treeBaseDuration;}}}}return null;}}// Successfully completed this tree. If this was a forced client render,\n// there may have been recoverable errors during first hydration\n// attempt. If so, add them to a queue so we can log them in the\n// commit phase.\nupgradeHydrationErrorsToRecoverable();}if((workInProgress.flags&DidCapture)!==NoFlags){// Something suspended. Re-render with the fallback children.\nworkInProgress.lanes=renderLanes;// Do not reset the effect list.\nif((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}// Don't bubble properties in this case.\nreturn workInProgress;}var nextDidTimeout=nextState!==null;var prevDidTimeout=false;if(current===null){popHydrationState(workInProgress);}else{var _prevState=current.memoizedState;prevDidTimeout=_prevState!==null;}// an effect to toggle the subtree's visibility. When we switch from\n// fallback -> primary, the inner Offscreen fiber schedules this effect\n// as part of its normal complete phase. But when we switch from\n// primary -> fallback, the inner Offscreen fiber does not have a complete\n// phase. So we need to schedule its effect here.\n//\n// We also use this flag to connect/disconnect the effects, but the same\n// logic applies: when re-connecting, the Offscreen fiber's complete\n// phase will handle scheduling the effect. It's only when the fallback\n// is active that we have to do anything special.\nif(nextDidTimeout&&!prevDidTimeout){var _offscreenFiber=workInProgress.child;_offscreenFiber.flags|=Visibility;// TODO: This will still suspend a synchronous tree if anything\n// in the concurrent tree already suspended during this render.\n// This is a known bug.\nif((workInProgress.mode&ConcurrentMode)!==NoMode){// TODO: Move this back to throwException because this is too late\n// if this is a large tree which is common for initial loads. We\n// don't know if we should restart a render or not until we get\n// this marker, and this is too late.\n// If this render already had a ping or lower pri updates,\n// and this is the first time we know we're going to suspend we\n// should be able to immediately restart from within throwException.\nvar hasInvisibleChildContext=current===null&&(workInProgress.memoizedProps.unstable_avoidThisFallback!==true||!enableSuspenseAvoidThisFallback);if(hasInvisibleChildContext||hasSuspenseContext(suspenseStackCursor.current,InvisibleParentSuspenseContext)){// If this was in an invisible tree or a new render, then showing\n// this boundary is ok.\nrenderDidSuspend();}else{// Otherwise, we're going to have to hide content so we should\n// suspend for longer if possible.\nrenderDidSuspendDelayIfPossible();}}}var wakeables=workInProgress.updateQueue;if(wakeables!==null){// Schedule an effect to attach a retry listener to the promise.\n// TODO: Move to passive phase\nworkInProgress.flags|=Update;}bubbleProperties(workInProgress);{if((workInProgress.mode&ProfileMode)!==NoMode){if(nextDidTimeout){// Don't count time spent in a timed out Suspense subtree as part of the base duration.\nvar _primaryChildFragment2=workInProgress.child;if(_primaryChildFragment2!==null){// $FlowFixMe Flow doesn't support type casting in combination with the -= operator\nworkInProgress.treeBaseDuration-=_primaryChildFragment2.treeBaseDuration;}}}}return null;}case HostPortal:popHostContainer(workInProgress);updateHostContainer(current,workInProgress);if(current===null){preparePortalMount(workInProgress.stateNode.containerInfo);}bubbleProperties(workInProgress);return null;case ContextProvider:// Pop provider fiber\nvar context=workInProgress.type._context;popProvider(context,workInProgress);bubbleProperties(workInProgress);return null;case IncompleteClassComponent:{// Same as class component case. I put it down here so that the tags are\n// sequential to ensure this switch is compiled to a jump table.\nvar _Component=workInProgress.type;if(isContextProvider(_Component)){popContext(workInProgress);}bubbleProperties(workInProgress);return null;}case SuspenseListComponent:{popSuspenseContext(workInProgress);var renderState=workInProgress.memoizedState;if(renderState===null){// We're running in the default, \"independent\" mode.\n// We don't do anything in this mode.\nbubbleProperties(workInProgress);return null;}var didSuspendAlready=(workInProgress.flags&DidCapture)!==NoFlags;var renderedTail=renderState.rendering;if(renderedTail===null){// We just rendered the head.\nif(!didSuspendAlready){// This is the first pass. We need to figure out if anything is still\n// suspended in the rendered set.\n// If new content unsuspended, but there's still some content that\n// didn't. Then we need to do a second pass that forces everything\n// to keep showing their fallbacks.\n// We might be suspended if something in this render pass suspended, or\n// something in the previous committed pass suspended. Otherwise,\n// there's no chance so we can skip the expensive call to\n// findFirstSuspended.\nvar cannotBeSuspended=renderHasNotSuspendedYet()&&(current===null||(current.flags&DidCapture)===NoFlags);if(!cannotBeSuspended){var row=workInProgress.child;while(row!==null){var suspended=findFirstSuspended(row);if(suspended!==null){didSuspendAlready=true;workInProgress.flags|=DidCapture;cutOffTailIfNeeded(renderState,false);// If this is a newly suspended tree, it might not get committed as\n// part of the second pass. In that case nothing will subscribe to\n// its thenables. Instead, we'll transfer its thenables to the\n// SuspenseList so that it can retry if they resolve.\n// There might be multiple of these in the list but since we're\n// going to wait for all of them anyway, it doesn't really matter\n// which ones gets to ping. In theory we could get clever and keep\n// track of how many dependencies remain but it gets tricky because\n// in the meantime, we can add/remove/change items and dependencies.\n// We might bail out of the loop before finding any but that\n// doesn't matter since that means that the other boundaries that\n// we did find already has their listeners attached.\nvar newThenables=suspended.updateQueue;if(newThenables!==null){workInProgress.updateQueue=newThenables;workInProgress.flags|=Update;}// Rerender the whole list, but this time, we'll force fallbacks\n// to stay in place.\n// Reset the effect flags before doing the second pass since that's now invalid.\n// Reset the child fibers to their original state.\nworkInProgress.subtreeFlags=NoFlags;resetChildFibers(workInProgress,renderLanes);// Set up the Suspense Context to force suspense and immediately\n// rerender the children.\npushSuspenseContext(workInProgress,setShallowSuspenseContext(suspenseStackCursor.current,ForceSuspenseFallback));// Don't bubble properties in this case.\nreturn workInProgress.child;}row=row.sibling;}}if(renderState.tail!==null&&now$1()>getRenderTargetTime()){// We have already passed our CPU deadline but we still have rows\n// left in the tail. We'll just give up further attempts to render\n// the main content and only render fallbacks.\nworkInProgress.flags|=DidCapture;didSuspendAlready=true;cutOffTailIfNeeded(renderState,false);// Since nothing actually suspended, there will nothing to ping this\n// to get it started back up to attempt the next item. While in terms\n// of priority this work has the same priority as this current render,\n// it's not part of the same transition once the transition has\n// committed. If it's sync, we still want to yield so that it can be\n// painted. Conceptually, this is really the same as pinging.\n// We can use any RetryLane even if it's the one currently rendering\n// since we're leaving it behind on this node.\nworkInProgress.lanes=SomeRetryLane;}}else{cutOffTailIfNeeded(renderState,false);}// Next we're going to render the tail.\n}else{// Append the rendered row to the child list.\nif(!didSuspendAlready){var _suspended=findFirstSuspended(renderedTail);if(_suspended!==null){workInProgress.flags|=DidCapture;didSuspendAlready=true;// Ensure we transfer the update queue to the parent so that it doesn't\n// get lost if this row ends up dropped during a second pass.\nvar _newThenables=_suspended.updateQueue;if(_newThenables!==null){workInProgress.updateQueue=_newThenables;workInProgress.flags|=Update;}cutOffTailIfNeeded(renderState,true);// This might have been modified.\nif(renderState.tail===null&&renderState.tailMode==='hidden'&&!renderedTail.alternate&&!getIsHydrating()// We don't cut it if we're hydrating.\n){// We're done.\nbubbleProperties(workInProgress);return null;}}else if(// The time it took to render last row is greater than the remaining\n// time we have to render. So rendering one more row would likely\n// exceed it.\nnow$1()*2-renderState.renderingStartTime>getRenderTargetTime()&&renderLanes!==OffscreenLane){// We have now passed our CPU deadline and we'll just give up further\n// attempts to render the main content and only render fallbacks.\n// The assumption is that this is usually faster.\nworkInProgress.flags|=DidCapture;didSuspendAlready=true;cutOffTailIfNeeded(renderState,false);// Since nothing actually suspended, there will nothing to ping this\n// to get it started back up to attempt the next item. While in terms\n// of priority this work has the same priority as this current render,\n// it's not part of the same transition once the transition has\n// committed. If it's sync, we still want to yield so that it can be\n// painted. Conceptually, this is really the same as pinging.\n// We can use any RetryLane even if it's the one currently rendering\n// since we're leaving it behind on this node.\nworkInProgress.lanes=SomeRetryLane;}}if(renderState.isBackwards){// The effect list of the backwards tail will have been added\n// to the end. This breaks the guarantee that life-cycles fire in\n// sibling order but that isn't a strong guarantee promised by React.\n// Especially since these might also just pop in during future commits.\n// Append to the beginning of the list.\nrenderedTail.sibling=workInProgress.child;workInProgress.child=renderedTail;}else{var previousSibling=renderState.last;if(previousSibling!==null){previousSibling.sibling=renderedTail;}else{workInProgress.child=renderedTail;}renderState.last=renderedTail;}}if(renderState.tail!==null){// We still have tail rows to render.\n// Pop a row.\nvar next=renderState.tail;renderState.rendering=next;renderState.tail=next.sibling;renderState.renderingStartTime=now$1();next.sibling=null;// Restore the context.\n// TODO: We can probably just avoid popping it instead and only\n// setting it the first time we go from not suspended to suspended.\nvar suspenseContext=suspenseStackCursor.current;if(didSuspendAlready){suspenseContext=setShallowSuspenseContext(suspenseContext,ForceSuspenseFallback);}else{suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);}pushSuspenseContext(workInProgress,suspenseContext);// Do a pass over the next row.\n// Don't bubble properties in this case.\nreturn next;}bubbleProperties(workInProgress);return null;}case ScopeComponent:{break;}case OffscreenComponent:case LegacyHiddenComponent:{popRenderLanes(workInProgress);var _nextState=workInProgress.memoizedState;var nextIsHidden=_nextState!==null;if(current!==null){var _prevState2=current.memoizedState;var prevIsHidden=_prevState2!==null;if(prevIsHidden!==nextIsHidden&&// LegacyHidden doesn't do any hiding — it only pre-renders.\n!enableLegacyHidden){workInProgress.flags|=Visibility;}}if(!nextIsHidden||(workInProgress.mode&ConcurrentMode)===NoMode){bubbleProperties(workInProgress);}else{// Don't bubble properties for hidden children unless we're rendering\n// at offscreen priority.\nif(includesSomeLane(subtreeRenderLanes,OffscreenLane)){bubbleProperties(workInProgress);if(supportsMutation){// Check if there was an insertion or update in the hidden subtree.\n// If so, we need to hide those nodes in the commit phase, so\n// schedule a visibility effect.\nif(workInProgress.subtreeFlags&(Placement|Update)){workInProgress.flags|=Visibility;}}}}return null;}case CacheComponent:{return null;}case TracingMarkerComponent:{return null;}}throw new Error(\"Unknown unit of work tag (\"+workInProgress.tag+\"). This error is likely caused by a bug in \"+'React. Please file an issue.');}var ReactCurrentOwner$1=ReactSharedInternals.ReactCurrentOwner;var didReceiveUpdate=false;var didWarnAboutBadClass;var didWarnAboutModulePatternComponent;var didWarnAboutContextTypeOnFunctionComponent;var didWarnAboutGetDerivedStateOnFunctionComponent;var didWarnAboutFunctionRefs;var didWarnAboutReassigningProps;var didWarnAboutRevealOrder;var didWarnAboutTailOptions;{didWarnAboutBadClass={};didWarnAboutModulePatternComponent={};didWarnAboutContextTypeOnFunctionComponent={};didWarnAboutGetDerivedStateOnFunctionComponent={};didWarnAboutFunctionRefs={};didWarnAboutReassigningProps=false;didWarnAboutRevealOrder={};didWarnAboutTailOptions={};}function reconcileChildren(current,workInProgress,nextChildren,renderLanes){if(current===null){// If this is a fresh new component that hasn't been rendered yet, we\n// won't update its child set by applying minimal side-effects. Instead,\n// we will add them all to the child before it gets rendered. That means\n// we can optimize this reconciliation pass by not tracking side-effects.\nworkInProgress.child=mountChildFibers(workInProgress,null,nextChildren,renderLanes);}else{// If the current child is the same as the work in progress, it means that\n// we haven't yet started any work on these children. Therefore, we use\n// the clone algorithm to create a copy of all the current children.\n// If we had any progressed work already, that is invalid at this point so\n// let's throw it out.\nworkInProgress.child=reconcileChildFibers(workInProgress,current.child,nextChildren,renderLanes);}}function forceUnmountCurrentAndReconcile(current,workInProgress,nextChildren,renderLanes){// This function is fork of reconcileChildren. It's used in cases where we\n// want to reconcile without matching against the existing set. This has the\n// effect of all current children being unmounted; even if the type and key\n// are the same, the old child is unmounted and a new child is created.\n//\n// To do this, we're going to go through the reconcile algorithm twice. In\n// the first pass, we schedule a deletion for all the current children by\n// passing null.\nworkInProgress.child=reconcileChildFibers(workInProgress,current.child,null,renderLanes);// In the second pass, we mount the new children. The trick here is that we\n// pass null in place of where we usually pass the current child set. This has\n// the effect of remounting all children regardless of whether their\n// identities match.\nworkInProgress.child=reconcileChildFibers(workInProgress,null,nextChildren,renderLanes);}function updateForwardRef(current,workInProgress,Component,nextProps,renderLanes){// TODO: current can be non-null here even if the component\n// hasn't yet mounted. This happens after the first render suspends.\n// We'll need to figure out if this is fine or can cause issues.\n{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement\n// because they're only guaranteed to be resolved here.\nvar innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props\n'prop',getComponentNameFromType(Component));}}}var render=Component.render;var ref=workInProgress.ref;// The rest is a fork of updateFunctionComponent\nvar nextChildren;var hasId;prepareToReadContext(workInProgress,renderLanes);{markComponentRenderStarted(workInProgress);}{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);nextChildren=renderWithHooks(current,workInProgress,render,nextProps,ref,renderLanes);hasId=checkDidRenderIdHook();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{nextChildren=renderWithHooks(current,workInProgress,render,nextProps,ref,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}if(current!==null&&!didReceiveUpdate){bailoutHooks(current,workInProgress,renderLanes);return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}// React DevTools reads this flag.\nworkInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateMemoComponent(current,workInProgress,Component,nextProps,renderLanes){if(current===null){var type=Component.type;if(isSimpleFunctionComponent(type)&&Component.compare===null&&// SimpleMemoComponent codepath doesn't resolve outer props either.\nComponent.defaultProps===undefined){var resolvedType=type;{resolvedType=resolveFunctionForHotReloading(type);}// If this is a plain function component without default props,\n// and with only the default shallow comparison, we upgrade it\n// to a SimpleMemoComponent to allow fast path updates.\nworkInProgress.tag=SimpleMemoComponent;workInProgress.type=resolvedType;{validateFunctionComponentInDev(workInProgress,type);}return updateSimpleMemoComponent(current,workInProgress,resolvedType,nextProps,renderLanes);}{var innerPropTypes=type.propTypes;if(innerPropTypes){// Inner memo component props aren't currently validated in createElement.\n// We could move it there, but we'd still need this for lazy code path.\ncheckPropTypes(innerPropTypes,nextProps,// Resolved props\n'prop',getComponentNameFromType(type));}}var child=createFiberFromTypeAndProps(Component.type,null,nextProps,workInProgress,workInProgress.mode,renderLanes);child.ref=workInProgress.ref;child.return=workInProgress;workInProgress.child=child;return child;}{var _type=Component.type;var _innerPropTypes=_type.propTypes;if(_innerPropTypes){// Inner memo component props aren't currently validated in createElement.\n// We could move it there, but we'd still need this for lazy code path.\ncheckPropTypes(_innerPropTypes,nextProps,// Resolved props\n'prop',getComponentNameFromType(_type));}}var currentChild=current.child;// This is always exactly one child\nvar hasScheduledUpdateOrContext=checkScheduledUpdateOrContext(current,renderLanes);if(!hasScheduledUpdateOrContext){// This will be the props with resolved defaultProps,\n// unlike current.memoizedProps which will be the unresolved ones.\nvar prevProps=currentChild.memoizedProps;// Default to shallow comparison\nvar compare=Component.compare;compare=compare!==null?compare:shallowEqual;if(compare(prevProps,nextProps)&&current.ref===workInProgress.ref){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}}// React DevTools reads this flag.\nworkInProgress.flags|=PerformedWork;var newChild=createWorkInProgress(currentChild,nextProps);newChild.ref=workInProgress.ref;newChild.return=workInProgress;workInProgress.child=newChild;return newChild;}function updateSimpleMemoComponent(current,workInProgress,Component,nextProps,renderLanes){// TODO: current can be non-null here even if the component\n// hasn't yet mounted. This happens when the inner render suspends.\n// We'll need to figure out if this is fine or can cause issues.\n{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement\n// because they're only guaranteed to be resolved here.\nvar outerMemoType=workInProgress.elementType;if(outerMemoType.$$typeof===REACT_LAZY_TYPE){// We warn when you define propTypes on lazy()\n// so let's just skip over it to find memo() outer wrapper.\n// Inner props for memo are validated later.\nvar lazyComponent=outerMemoType;var payload=lazyComponent._payload;var init=lazyComponent._init;try{outerMemoType=init(payload);}catch(x){outerMemoType=null;}// Inner propTypes will be validated in the function component path.\nvar outerPropTypes=outerMemoType&&outerMemoType.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,nextProps,// Resolved (SimpleMemoComponent has no defaultProps)\n'prop',getComponentNameFromType(outerMemoType));}}}}if(current!==null){var prevProps=current.memoizedProps;if(shallowEqual(prevProps,nextProps)&&current.ref===workInProgress.ref&&// Prevent bailout if the implementation changed due to hot reload.\nworkInProgress.type===current.type){didReceiveUpdate=false;if(!checkScheduledUpdateOrContext(current,renderLanes)){// The pending lanes were cleared at the beginning of beginWork. We're\n// about to bail out, but there might be other lanes that weren't\n// included in the current render. Usually, the priority level of the\n// remaining updates is accumulated during the evaluation of the\n// component (i.e. when processing the update queue). But since since\n// we're bailing out early *without* evaluating the component, we need\n// to account for it here, too. Reset to the value of the current fiber.\n// NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n// because a MemoComponent fiber does not have hooks or an update queue;\n// rather, it wraps around an inner component, which may or may not\n// contains hooks.\n// TODO: Move the reset at in beginWork out of the common path so that\n// this is no longer necessary.\nworkInProgress.lanes=current.lanes;return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}else if((current.flags&ForceUpdateForLegacySuspense)!==NoFlags){// This is a special case that only exists for legacy mode.\n// See https://github.com/facebook/react/pull/19216.\ndidReceiveUpdate=true;}}}return updateFunctionComponent(current,workInProgress,Component,nextProps,renderLanes);}function updateOffscreenComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;var nextChildren=nextProps.children;var prevState=current!==null?current.memoizedState:null;if(nextProps.mode==='hidden'||enableLegacyHidden){// Rendering a hidden tree.\nif((workInProgress.mode&ConcurrentMode)===NoMode){// In legacy sync mode, don't defer the subtree. Render it now.\nvar nextState={baseLanes:NoLanes,cachePool:null};workInProgress.memoizedState=nextState;pushRenderLanes(workInProgress,renderLanes);}else if(!includesSomeLane(renderLanes,OffscreenLane)){var spawnedCachePool=null;// We're hidden, and we're not rendering at Offscreen. We will bail out\n// and resume this tree later.\nvar nextBaseLanes;if(prevState!==null){var prevBaseLanes=prevState.baseLanes;nextBaseLanes=mergeLanes(prevBaseLanes,renderLanes);}else{nextBaseLanes=renderLanes;}// Schedule this fiber to re-render at offscreen priority. Then bailout.\nworkInProgress.lanes=workInProgress.childLanes=laneToLanes(OffscreenLane);var _nextState={baseLanes:nextBaseLanes,cachePool:spawnedCachePool};workInProgress.memoizedState=_nextState;workInProgress.updateQueue=null;// to avoid a push/pop misalignment.\npushRenderLanes(workInProgress,nextBaseLanes);return null;}else{// This is the second render. The surrounding visible content has already\n// committed. Now we resume rendering the hidden tree.\n// Rendering at offscreen, so we can clear the base lanes.\nvar _nextState2={baseLanes:NoLanes,cachePool:null};workInProgress.memoizedState=_nextState2;// Push the lanes that were skipped when we bailed out.\nvar subtreeRenderLanes=prevState!==null?prevState.baseLanes:renderLanes;pushRenderLanes(workInProgress,subtreeRenderLanes);}}else{// Rendering a visible tree.\nvar _subtreeRenderLanes;if(prevState!==null){// We're going from hidden -> visible.\n_subtreeRenderLanes=mergeLanes(prevState.baseLanes,renderLanes);workInProgress.memoizedState=null;}else{// We weren't previously hidden, and we still aren't, so there's nothing\n// special to do. Need to push to the stack regardless, though, to avoid\n// a push/pop misalignment.\n_subtreeRenderLanes=renderLanes;}pushRenderLanes(workInProgress,_subtreeRenderLanes);}{reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}}function updateFragment(current,workInProgress,renderLanes){var nextChildren=workInProgress.pendingProps;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateMode(current,workInProgress,renderLanes){var nextChildren=workInProgress.pendingProps.children;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateProfiler(current,workInProgress,renderLanes){{workInProgress.flags|=Update;{// Reset effect durations for the next eventual effect phase.\n// These are reset during render to allow the DevTools commit hook a chance to read them,\nvar stateNode=workInProgress.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}}var nextProps=workInProgress.pendingProps;var nextChildren=nextProps.children;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function markRef$1(current,workInProgress){var ref=workInProgress.ref;if(current===null&&ref!==null||current!==null&&current.ref!==ref){// Schedule a Ref effect\nworkInProgress.flags|=Ref;{workInProgress.flags|=RefStatic;}}}function updateFunctionComponent(current,workInProgress,Component,nextProps,renderLanes){{if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement\n// because they're only guaranteed to be resolved here.\nvar innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props\n'prop',getComponentNameFromType(Component));}}}var context;{var unmaskedContext=getUnmaskedContext(workInProgress,Component,true);context=getMaskedContext(workInProgress,unmaskedContext);}var nextChildren;var hasId;prepareToReadContext(workInProgress,renderLanes);{markComponentRenderStarted(workInProgress);}{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);nextChildren=renderWithHooks(current,workInProgress,Component,nextProps,context,renderLanes);hasId=checkDidRenderIdHook();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{nextChildren=renderWithHooks(current,workInProgress,Component,nextProps,context,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}if(current!==null&&!didReceiveUpdate){bailoutHooks(current,workInProgress,renderLanes);return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}// React DevTools reads this flag.\nworkInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateClassComponent(current,workInProgress,Component,nextProps,renderLanes){{// This is used by DevTools to force a boundary to error.\nswitch(shouldError(workInProgress)){case false:{var _instance=workInProgress.stateNode;var ctor=workInProgress.type;// TODO This way of resetting the error boundary state is a hack.\n// Is there a better way to do this?\nvar tempInstance=new ctor(workInProgress.memoizedProps,_instance.context);var state=tempInstance.state;_instance.updater.enqueueSetState(_instance,state,null);break;}case true:{workInProgress.flags|=DidCapture;workInProgress.flags|=ShouldCapture;// eslint-disable-next-line react-internal/prod-error-codes\nvar error$1=new Error('Simulated error coming from DevTools');var lane=pickArbitraryLane(renderLanes);workInProgress.lanes=mergeLanes(workInProgress.lanes,lane);// Schedule the error boundary to re-render using updated state\nvar update=createClassErrorUpdate(workInProgress,createCapturedValue(error$1,workInProgress),lane);enqueueCapturedUpdate(workInProgress,update);break;}}if(workInProgress.type!==workInProgress.elementType){// Lazy component props can't be validated in createElement\n// because they're only guaranteed to be resolved here.\nvar innerPropTypes=Component.propTypes;if(innerPropTypes){checkPropTypes(innerPropTypes,nextProps,// Resolved props\n'prop',getComponentNameFromType(Component));}}}// Push context providers early to prevent context stack mismatches.\n// During mounting we don't know the child context yet as the instance doesn't exist.\n// We will invalidate the child context in finishClassComponent() right after rendering.\nvar hasContext;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else{hasContext=false;}prepareToReadContext(workInProgress,renderLanes);var instance=workInProgress.stateNode;var shouldUpdate;if(instance===null){if(current!==null){// A class component without an instance only mounts if it suspended\n// inside a non-concurrent tree, in an inconsistent state. We want to\n// treat it like a new mount, even though an empty version of it already\n// committed. Disconnect the alternate pointers.\ncurrent.alternate=null;workInProgress.alternate=null;// Since this is conceptually a new fiber, schedule a Placement effect\nworkInProgress.flags|=Placement;}// In the initial pass we might need to construct the instance.\nconstructClassInstance(workInProgress,Component,nextProps);mountClassInstance(workInProgress,Component,nextProps,renderLanes);shouldUpdate=true;}else if(current===null){// In a resume, we'll already have an instance we can reuse.\nshouldUpdate=resumeMountClassInstance(workInProgress,Component,nextProps,renderLanes);}else{shouldUpdate=updateClassInstance(current,workInProgress,Component,nextProps,renderLanes);}var nextUnitOfWork=finishClassComponent(current,workInProgress,Component,shouldUpdate,hasContext,renderLanes);{var inst=workInProgress.stateNode;if(shouldUpdate&&inst.props!==nextProps){if(!didWarnAboutReassigningProps){error('It looks like %s is reassigning its own `this.props` while rendering. '+'This is not supported and can lead to confusing bugs.',getComponentNameFromFiber(workInProgress)||'a component');}didWarnAboutReassigningProps=true;}}return nextUnitOfWork;}function finishClassComponent(current,workInProgress,Component,shouldUpdate,hasContext,renderLanes){// Refs should update even if shouldComponentUpdate returns false\nmarkRef$1(current,workInProgress);var didCaptureError=(workInProgress.flags&DidCapture)!==NoFlags;if(!shouldUpdate&&!didCaptureError){// Context providers should defer to sCU for rendering\nif(hasContext){invalidateContextProvider(workInProgress,Component,false);}return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}var instance=workInProgress.stateNode;// Rerender\nReactCurrentOwner$1.current=workInProgress;var nextChildren;if(didCaptureError&&typeof Component.getDerivedStateFromError!=='function'){// If we captured an error, but getDerivedStateFromError is not defined,\n// unmount all the children. componentDidCatch will schedule an update to\n// re-render a fallback. This is temporary until we migrate everyone to\n// the new API.\n// TODO: Warn in a future release.\nnextChildren=null;{stopProfilerTimerIfRunning();}}else{{markComponentRenderStarted(workInProgress);}{setIsRendering(true);nextChildren=instance.render();if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{instance.render();}finally{setIsStrictModeForDevtools(false);}}setIsRendering(false);}{markComponentRenderStopped();}}// React DevTools reads this flag.\nworkInProgress.flags|=PerformedWork;if(current!==null&&didCaptureError){// If we're recovering from an error, reconcile without reusing any of\n// the existing children. Conceptually, the normal children and the children\n// that are shown on error are two different sets, so we shouldn't reuse\n// normal children even if their identities match.\nforceUnmountCurrentAndReconcile(current,workInProgress,nextChildren,renderLanes);}else{reconcileChildren(current,workInProgress,nextChildren,renderLanes);}// Memoize state using the values we just used to render.\n// TODO: Restructure so we never read values from the instance.\nworkInProgress.memoizedState=instance.state;// The context might have changed so we need to recalculate it.\nif(hasContext){invalidateContextProvider(workInProgress,Component,true);}return workInProgress.child;}function pushHostRootContext(workInProgress){var root=workInProgress.stateNode;if(root.pendingContext){pushTopLevelContextObject(workInProgress,root.pendingContext,root.pendingContext!==root.context);}else if(root.context){// Should always be set\npushTopLevelContextObject(workInProgress,root.context,false);}pushHostContainer(workInProgress,root.containerInfo);}function updateHostRoot(current,workInProgress,renderLanes){pushHostRootContext(workInProgress);if(current===null){throw new Error('Should have a current fiber. This is a bug in React.');}var nextProps=workInProgress.pendingProps;var prevState=workInProgress.memoizedState;var prevChildren=prevState.element;cloneUpdateQueue(current,workInProgress);processUpdateQueue(workInProgress,nextProps,null,renderLanes);var nextState=workInProgress.memoizedState;var root=workInProgress.stateNode;// being called \"element\".\nvar nextChildren=nextState.element;if(supportsHydration&&prevState.isDehydrated){// This is a hydration root whose shell has not yet hydrated. We should\n// attempt to hydrate.\n// Flip isDehydrated to false to indicate that when this render\n// finishes, the root will no longer be dehydrated.\nvar overrideState={element:nextChildren,isDehydrated:false,cache:nextState.cache,transitions:nextState.transitions};var updateQueue=workInProgress.updateQueue;// `baseState` can always be the last state because the root doesn't\n// have reducer functions so it doesn't need rebasing.\nupdateQueue.baseState=overrideState;workInProgress.memoizedState=overrideState;if(workInProgress.flags&ForceClientRender){// Something errored during a previous attempt to hydrate the shell, so we\n// forced a client render.\nvar recoverableError=new Error('There was an error while hydrating. Because the error happened outside '+'of a Suspense boundary, the entire root will switch to '+'client rendering.');return mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,recoverableError);}else if(nextChildren!==prevChildren){var _recoverableError=new Error('This root received an early update, before anything was able '+'hydrate. Switched the entire root to client rendering.');return mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,_recoverableError);}else{// The outermost shell has not hydrated yet. Start hydrating.\nenterHydrationState(workInProgress);var child=mountChildFibers(workInProgress,null,nextChildren,renderLanes);workInProgress.child=child;var node=child;while(node){// Mark each child as hydrating. This is a fast path to know whether this\n// tree is part of a hydrating tree. This is used to determine if a child\n// node has fully mounted yet, and for scheduling event replaying.\n// Conceptually this is similar to Placement in that a new subtree is\n// inserted into the React tree here. It just happens to not need DOM\n// mutations because it already exists.\nnode.flags=node.flags&~Placement|Hydrating;node=node.sibling;}}}else{// Root is not dehydrated. Either this is a client-only root, or it\n// already hydrated.\nresetHydrationState();if(nextChildren===prevChildren){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}reconcileChildren(current,workInProgress,nextChildren,renderLanes);}return workInProgress.child;}function mountHostRootWithoutHydrating(current,workInProgress,nextChildren,renderLanes,recoverableError){// Revert to client rendering.\nresetHydrationState();queueHydrationError(recoverableError);workInProgress.flags|=ForceClientRender;reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateHostComponent$1(current,workInProgress,renderLanes){pushHostContext(workInProgress);if(current===null){tryToClaimNextHydratableInstance(workInProgress);}var type=workInProgress.type;var nextProps=workInProgress.pendingProps;var prevProps=current!==null?current.memoizedProps:null;var nextChildren=nextProps.children;var isDirectTextChild=shouldSetTextContent(type,nextProps);if(isDirectTextChild){// We special case a direct text child of a host node. This is a common\n// case. We won't handle it as a reified child. We will instead handle\n// this in the host environment that also has access to this prop. That\n// avoids allocating another HostText fiber and traversing it.\nnextChildren=null;}else if(prevProps!==null&&shouldSetTextContent(type,prevProps)){// If we're switching from a direct text child to a normal child, or to\n// empty, we need to schedule the text content to be reset.\nworkInProgress.flags|=ContentReset;}markRef$1(current,workInProgress);reconcileChildren(current,workInProgress,nextChildren,renderLanes);return workInProgress.child;}function updateHostText$1(current,workInProgress){if(current===null){tryToClaimNextHydratableInstance(workInProgress);}// Nothing to do here. This is terminal. We'll do the completion step\n// immediately after.\nreturn null;}function mountLazyComponent(_current,workInProgress,elementType,renderLanes){if(_current!==null){// A lazy component only mounts if it suspended inside a non-\n// concurrent tree, in an inconsistent state. We want to treat it like\n// a new mount, even though an empty version of it already committed.\n// Disconnect the alternate pointers.\n_current.alternate=null;workInProgress.alternate=null;// Since this is conceptually a new fiber, schedule a Placement effect\nworkInProgress.flags|=Placement;}var props=workInProgress.pendingProps;var lazyComponent=elementType;var payload=lazyComponent._payload;var init=lazyComponent._init;var Component=init(payload);// Store the unwrapped component in the type.\nworkInProgress.type=Component;var resolvedTag=workInProgress.tag=resolveLazyComponentTag(Component);var resolvedProps=resolveDefaultProps(Component,props);var child;switch(resolvedTag){case FunctionComponent:{{validateFunctionComponentInDev(workInProgress,Component);workInProgress.type=Component=resolveFunctionForHotReloading(Component);}child=updateFunctionComponent(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case ClassComponent:{{workInProgress.type=Component=resolveClassForHotReloading(Component);}child=updateClassComponent(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case ForwardRef:{{workInProgress.type=Component=resolveForwardRefForHotReloading(Component);}child=updateForwardRef(null,workInProgress,Component,resolvedProps,renderLanes);return child;}case MemoComponent:{{if(workInProgress.type!==workInProgress.elementType){var outerPropTypes=Component.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,resolvedProps,// Resolved for outer only\n'prop',getComponentNameFromType(Component));}}}child=updateMemoComponent(null,workInProgress,Component,resolveDefaultProps(Component.type,resolvedProps),// The inner type can have defaults too\nrenderLanes);return child;}}var hint='';{if(Component!==null&&typeof Component==='object'&&Component.$$typeof===REACT_LAZY_TYPE){hint=' Did you wrap a component in React.lazy() more than once?';}}// This message intentionally doesn't mention ForwardRef or MemoComponent\n// because the fact that it's a separate type of work is an\n// implementation detail.\nthrow new Error(\"Element type is invalid. Received a promise that resolves to: \"+Component+\". \"+(\"Lazy element type must resolve to a class or function.\"+hint));}function mountIncompleteClassComponent(_current,workInProgress,Component,nextProps,renderLanes){if(_current!==null){// An incomplete component only mounts if it suspended inside a non-\n// concurrent tree, in an inconsistent state. We want to treat it like\n// a new mount, even though an empty version of it already committed.\n// Disconnect the alternate pointers.\n_current.alternate=null;workInProgress.alternate=null;// Since this is conceptually a new fiber, schedule a Placement effect\nworkInProgress.flags|=Placement;}// Promote the fiber to a class and try rendering again.\nworkInProgress.tag=ClassComponent;// The rest of this function is a fork of `updateClassComponent`\n// Push context providers early to prevent context stack mismatches.\n// During mounting we don't know the child context yet as the instance doesn't exist.\n// We will invalidate the child context in finishClassComponent() right after rendering.\nvar hasContext;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else{hasContext=false;}prepareToReadContext(workInProgress,renderLanes);constructClassInstance(workInProgress,Component,nextProps);mountClassInstance(workInProgress,Component,nextProps,renderLanes);return finishClassComponent(null,workInProgress,Component,true,hasContext,renderLanes);}function mountIndeterminateComponent(_current,workInProgress,Component,renderLanes){if(_current!==null){// An indeterminate component only mounts if it suspended inside a non-\n// concurrent tree, in an inconsistent state. We want to treat it like\n// a new mount, even though an empty version of it already committed.\n// Disconnect the alternate pointers.\n_current.alternate=null;workInProgress.alternate=null;// Since this is conceptually a new fiber, schedule a Placement effect\nworkInProgress.flags|=Placement;}var props=workInProgress.pendingProps;var context;{var unmaskedContext=getUnmaskedContext(workInProgress,Component,false);context=getMaskedContext(workInProgress,unmaskedContext);}prepareToReadContext(workInProgress,renderLanes);var value;var hasId;{markComponentRenderStarted(workInProgress);}{if(Component.prototype&&typeof Component.prototype.render==='function'){var componentName=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutBadClass[componentName]){error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \"+'This is likely to cause errors. Change %s to extend React.Component instead.',componentName,componentName);didWarnAboutBadClass[componentName]=true;}}if(workInProgress.mode&StrictLegacyMode){ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress,null);}setIsRendering(true);ReactCurrentOwner$1.current=workInProgress;value=renderWithHooks(null,workInProgress,Component,props,context,renderLanes);hasId=checkDidRenderIdHook();setIsRendering(false);}{markComponentRenderStopped();}// React DevTools reads this flag.\nworkInProgress.flags|=PerformedWork;{// Support for module components is deprecated and is removed behind a flag.\n// Whether or not it would crash later, we want to show a good message in DEV first.\nif(typeof value==='object'&&value!==null&&typeof value.render==='function'&&value.$$typeof===undefined){var _componentName=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutModulePatternComponent[_componentName]){error('The <%s /> component appears to be a function component that returns a class instance. '+'Change %s to a class that extends React.Component instead. '+\"If you can't use a class try assigning the prototype on the function as a workaround. \"+\"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \"+'cannot be called with `new` by React.',_componentName,_componentName,_componentName);didWarnAboutModulePatternComponent[_componentName]=true;}}}if(// Run these checks in production only if the flag is off.\n// Eventually we'll delete this branch altogether.\ntypeof value==='object'&&value!==null&&typeof value.render==='function'&&value.$$typeof===undefined){{var _componentName2=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutModulePatternComponent[_componentName2]){error('The <%s /> component appears to be a function component that returns a class instance. '+'Change %s to a class that extends React.Component instead. '+\"If you can't use a class try assigning the prototype on the function as a workaround. \"+\"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \"+'cannot be called with `new` by React.',_componentName2,_componentName2,_componentName2);didWarnAboutModulePatternComponent[_componentName2]=true;}}// Proceed under the assumption that this is a class instance\nworkInProgress.tag=ClassComponent;// Throw out any hooks that were used.\nworkInProgress.memoizedState=null;workInProgress.updateQueue=null;// Push context providers early to prevent context stack mismatches.\n// During mounting we don't know the child context yet as the instance doesn't exist.\n// We will invalidate the child context in finishClassComponent() right after rendering.\nvar hasContext=false;if(isContextProvider(Component)){hasContext=true;pushContextProvider(workInProgress);}else{hasContext=false;}workInProgress.memoizedState=value.state!==null&&value.state!==undefined?value.state:null;initializeUpdateQueue(workInProgress);adoptClassInstance(workInProgress,value);mountClassInstance(workInProgress,Component,props,renderLanes);return finishClassComponent(null,workInProgress,Component,true,hasContext,renderLanes);}else{// Proceed under the assumption that this is a function component\nworkInProgress.tag=FunctionComponent;{if(workInProgress.mode&StrictLegacyMode){setIsStrictModeForDevtools(true);try{value=renderWithHooks(null,workInProgress,Component,props,context,renderLanes);hasId=checkDidRenderIdHook();}finally{setIsStrictModeForDevtools(false);}}}if(getIsHydrating()&&hasId){pushMaterializedTreeId(workInProgress);}reconcileChildren(null,workInProgress,value,renderLanes);{validateFunctionComponentInDev(workInProgress,Component);}return workInProgress.child;}}function validateFunctionComponentInDev(workInProgress,Component){{if(Component){if(Component.childContextTypes){error('%s(...): childContextTypes cannot be defined on a function component.',Component.displayName||Component.name||'Component');}}if(workInProgress.ref!==null){var info='';var ownerName=getCurrentFiberOwnerNameInDevOrNull();if(ownerName){info+='\\n\\nCheck the render method of `'+ownerName+'`.';}var warningKey=ownerName||'';var debugSource=workInProgress._debugSource;if(debugSource){warningKey=debugSource.fileName+':'+debugSource.lineNumber;}if(!didWarnAboutFunctionRefs[warningKey]){didWarnAboutFunctionRefs[warningKey]=true;error('Function components cannot be given refs. '+'Attempts to access this ref will fail. '+'Did you mean to use React.forwardRef()?%s',info);}}if(typeof Component.getDerivedStateFromProps==='function'){var _componentName3=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]){error('%s: Function components do not support getDerivedStateFromProps.',_componentName3);didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]=true;}}if(typeof Component.contextType==='object'&&Component.contextType!==null){var _componentName4=getComponentNameFromType(Component)||'Unknown';if(!didWarnAboutContextTypeOnFunctionComponent[_componentName4]){error('%s: Function components do not support contextType.',_componentName4);didWarnAboutContextTypeOnFunctionComponent[_componentName4]=true;}}}}var SUSPENDED_MARKER={dehydrated:null,treeContext:null,retryLane:NoLane};function mountSuspenseOffscreenState(renderLanes){return{baseLanes:renderLanes,cachePool:getSuspendedCache()};}function updateSuspenseOffscreenState(prevOffscreenState,renderLanes){var cachePool=null;return{baseLanes:mergeLanes(prevOffscreenState.baseLanes,renderLanes),cachePool:cachePool};}// TODO: Probably should inline this back\nfunction shouldRemainOnFallback(suspenseContext,current,workInProgress,renderLanes){// If we're already showing a fallback, there are cases where we need to\n// remain on that fallback regardless of whether the content has resolved.\n// For example, SuspenseList coordinates when nested content appears.\nif(current!==null){var suspenseState=current.memoizedState;if(suspenseState===null){// Currently showing content. Don't hide it, even if ForceSuspenseFallback\n// is true. More precise name might be \"ForceRemainSuspenseFallback\".\n// Note: This is a factoring smell. Can't remain on a fallback if there's\n// no fallback to remain on.\nreturn false;}}// Not currently showing content. Consult the Suspense context.\nreturn hasSuspenseContext(suspenseContext,ForceSuspenseFallback);}function getRemainingWorkInPrimaryTree(current,renderLanes){// TODO: Should not remove render lanes that were pinged during this render\nreturn removeLanes(current.childLanes,renderLanes);}function updateSuspenseComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;// This is used by DevTools to force a boundary to suspend.\n{if(shouldSuspend(workInProgress)){workInProgress.flags|=DidCapture;}}var suspenseContext=suspenseStackCursor.current;var showFallback=false;var didSuspend=(workInProgress.flags&DidCapture)!==NoFlags;if(didSuspend||shouldRemainOnFallback(suspenseContext,current)){// Something in this boundary's subtree already suspended. Switch to\n// rendering the fallback children.\nshowFallback=true;workInProgress.flags&=~DidCapture;}else{// Attempting the main content\nif(current===null||current.memoizedState!==null){// This is a new mount or this boundary is already showing a fallback state.\n// Mark this subtree context as having at least one invisible parent that could\n// handle the fallback state.\n// Avoided boundaries are not considered since they cannot handle preferred fallback states.\n{suspenseContext=addSubtreeSuspenseContext(suspenseContext,InvisibleParentSuspenseContext);}}}suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);pushSuspenseContext(workInProgress,suspenseContext);// OK, the next part is confusing. We're about to reconcile the Suspense\n// boundary's children. This involves some custom reconciliation logic. Two\n// main reasons this is so complicated.\n//\n// First, Legacy Mode has different semantics for backwards compatibility. The\n// primary tree will commit in an inconsistent state, so when we do the\n// second pass to render the fallback, we do some exceedingly, uh, clever\n// hacks to make that not totally break. Like transferring effects and\n// deletions from hidden tree. In Concurrent Mode, it's much simpler,\n// because we bailout on the primary tree completely and leave it in its old\n// state, no effects. Same as what we do for Offscreen (except that\n// Offscreen doesn't have the first render pass).\n//\n// Second is hydration. During hydration, the Suspense fiber has a slightly\n// different layout, where the child points to a dehydrated fragment, which\n// contains the DOM rendered by the server.\n//\n// Third, even if you set all that aside, Suspense is like error boundaries in\n// that we first we try to render one tree, and if that fails, we render again\n// and switch to a different tree. Like a try/catch block. So we have to track\n// which branch we're currently rendering. Ideally we would model this using\n// a stack.\nif(current===null){// Initial mount\n// If we're currently hydrating, try to hydrate this boundary.\ntryToClaimNextHydratableInstance(workInProgress);// This could've been a dehydrated suspense component.\n{var suspenseState=workInProgress.memoizedState;if(suspenseState!==null){var dehydrated=suspenseState.dehydrated;if(dehydrated!==null){return mountDehydratedSuspenseComponent(workInProgress,dehydrated);}}}var nextPrimaryChildren=nextProps.children;var nextFallbackChildren=nextProps.fallback;if(showFallback){var fallbackFragment=mountSuspenseFallbackChildren(workInProgress,nextPrimaryChildren,nextFallbackChildren,renderLanes);var primaryChildFragment=workInProgress.child;primaryChildFragment.memoizedState=mountSuspenseOffscreenState(renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return fallbackFragment;}else{return mountSuspensePrimaryChildren(workInProgress,nextPrimaryChildren);}}else{// This is an update.\n// If the current fiber has a SuspenseState, that means it's already showing\n// a fallback.\nvar prevState=current.memoizedState;if(prevState!==null){// The current tree is already showing a fallback\n// Special path for hydration\n{var _dehydrated=prevState.dehydrated;if(_dehydrated!==null){if(!didSuspend){return updateDehydratedSuspenseComponent(current,workInProgress,_dehydrated,prevState,renderLanes);}else if(workInProgress.flags&ForceClientRender){// Something errored during hydration. Try again without hydrating.\nworkInProgress.flags&=~ForceClientRender;return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,new Error('There was an error while hydrating this Suspense boundary. '+'Switched to client rendering.'));}else if(workInProgress.memoizedState!==null){// Something suspended and we should still be in dehydrated mode.\n// Leave the existing child in place.\nworkInProgress.child=current.child;// The dehydrated completion pass expects this flag to be there\n// but the normal suspense pass doesn't.\nworkInProgress.flags|=DidCapture;return null;}else{// Suspended but we should no longer be in dehydrated mode.\n// Therefore we now have to render the fallback.\nvar _nextPrimaryChildren=nextProps.children;var _nextFallbackChildren=nextProps.fallback;var fallbackChildFragment=mountSuspenseFallbackAfterRetryWithoutHydrating(current,workInProgress,_nextPrimaryChildren,_nextFallbackChildren,renderLanes);var _primaryChildFragment2=workInProgress.child;_primaryChildFragment2.memoizedState=mountSuspenseOffscreenState(renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return fallbackChildFragment;}}}if(showFallback){var _nextFallbackChildren2=nextProps.fallback;var _nextPrimaryChildren2=nextProps.children;var _fallbackChildFragment=updateSuspenseFallbackChildren(current,workInProgress,_nextPrimaryChildren2,_nextFallbackChildren2,renderLanes);var _primaryChildFragment3=workInProgress.child;var prevOffscreenState=current.child.memoizedState;_primaryChildFragment3.memoizedState=prevOffscreenState===null?mountSuspenseOffscreenState(renderLanes):updateSuspenseOffscreenState(prevOffscreenState,renderLanes);_primaryChildFragment3.childLanes=getRemainingWorkInPrimaryTree(current,renderLanes);workInProgress.memoizedState=SUSPENDED_MARKER;return _fallbackChildFragment;}else{var _nextPrimaryChildren3=nextProps.children;var _primaryChildFragment4=updateSuspensePrimaryChildren(current,workInProgress,_nextPrimaryChildren3,renderLanes);workInProgress.memoizedState=null;return _primaryChildFragment4;}}else{// The current tree is not already showing a fallback.\nif(showFallback){// Timed out.\nvar _nextFallbackChildren3=nextProps.fallback;var _nextPrimaryChildren4=nextProps.children;var _fallbackChildFragment2=updateSuspenseFallbackChildren(current,workInProgress,_nextPrimaryChildren4,_nextFallbackChildren3,renderLanes);var _primaryChildFragment5=workInProgress.child;var _prevOffscreenState=current.child.memoizedState;_primaryChildFragment5.memoizedState=_prevOffscreenState===null?mountSuspenseOffscreenState(renderLanes):updateSuspenseOffscreenState(_prevOffscreenState,renderLanes);_primaryChildFragment5.childLanes=getRemainingWorkInPrimaryTree(current,renderLanes);// Skip the primary children, and continue working on the\n// fallback children.\nworkInProgress.memoizedState=SUSPENDED_MARKER;return _fallbackChildFragment2;}else{// Still haven't timed out. Continue rendering the children, like we\n// normally do.\nvar _nextPrimaryChildren5=nextProps.children;var _primaryChildFragment6=updateSuspensePrimaryChildren(current,workInProgress,_nextPrimaryChildren5,renderLanes);workInProgress.memoizedState=null;return _primaryChildFragment6;}}}}function mountSuspensePrimaryChildren(workInProgress,primaryChildren,renderLanes){var mode=workInProgress.mode;var primaryChildProps={mode:'visible',children:primaryChildren};var primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,mode);primaryChildFragment.return=workInProgress;workInProgress.child=primaryChildFragment;return primaryChildFragment;}function mountSuspenseFallbackChildren(workInProgress,primaryChildren,fallbackChildren,renderLanes){var mode=workInProgress.mode;var progressedPrimaryFragment=workInProgress.child;var primaryChildProps={mode:'hidden',children:primaryChildren};var primaryChildFragment;var fallbackChildFragment;if((mode&ConcurrentMode)===NoMode&&progressedPrimaryFragment!==null){// In legacy mode, we commit the primary tree as if it successfully\n// completed, even though it's in an inconsistent state.\nprimaryChildFragment=progressedPrimaryFragment;primaryChildFragment.childLanes=NoLanes;primaryChildFragment.pendingProps=primaryChildProps;if(workInProgress.mode&ProfileMode){// Reset the durations from the first pass so they aren't included in the\n// final amounts. This seems counterintuitive, since we're intentionally\n// not measuring part of the render phase, but this makes it match what we\n// do in Concurrent Mode.\nprimaryChildFragment.actualDuration=0;primaryChildFragment.actualStartTime=-1;primaryChildFragment.selfBaseDuration=0;primaryChildFragment.treeBaseDuration=0;}fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);}else{primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,mode);fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);}primaryChildFragment.return=workInProgress;fallbackChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;return fallbackChildFragment;}function mountWorkInProgressOffscreenFiber(offscreenProps,mode,renderLanes){// The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n// this wrapper function to constrain it.\nreturn createFiberFromOffscreen(offscreenProps,mode,NoLanes,null);}function updateWorkInProgressOffscreenFiber(current,offscreenProps){// The props argument to `createWorkInProgress` is `any` typed, so we use this\n// wrapper function to constrain it.\nreturn createWorkInProgress(current,offscreenProps);}function updateSuspensePrimaryChildren(current,workInProgress,primaryChildren,renderLanes){var currentPrimaryChildFragment=current.child;var currentFallbackChildFragment=currentPrimaryChildFragment.sibling;var primaryChildFragment=updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment,{mode:'visible',children:primaryChildren});if((workInProgress.mode&ConcurrentMode)===NoMode){primaryChildFragment.lanes=renderLanes;}primaryChildFragment.return=workInProgress;primaryChildFragment.sibling=null;if(currentFallbackChildFragment!==null){// Delete the fallback child fragment\nvar deletions=workInProgress.deletions;if(deletions===null){workInProgress.deletions=[currentFallbackChildFragment];workInProgress.flags|=ChildDeletion;}else{deletions.push(currentFallbackChildFragment);}}workInProgress.child=primaryChildFragment;return primaryChildFragment;}function updateSuspenseFallbackChildren(current,workInProgress,primaryChildren,fallbackChildren,renderLanes){var mode=workInProgress.mode;var currentPrimaryChildFragment=current.child;var currentFallbackChildFragment=currentPrimaryChildFragment.sibling;var primaryChildProps={mode:'hidden',children:primaryChildren};var primaryChildFragment;if(// In legacy mode, we commit the primary tree as if it successfully\n// completed, even though it's in an inconsistent state.\n(mode&ConcurrentMode)===NoMode&&// Make sure we're on the second pass, i.e. the primary child fragment was\n// already cloned. In legacy mode, the only case where this isn't true is\n// when DevTools forces us to display a fallback; we skip the first render\n// pass entirely and go straight to rendering the fallback. (In Concurrent\n// Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n// only codepath.)\nworkInProgress.child!==currentPrimaryChildFragment){var progressedPrimaryFragment=workInProgress.child;primaryChildFragment=progressedPrimaryFragment;primaryChildFragment.childLanes=NoLanes;primaryChildFragment.pendingProps=primaryChildProps;if(workInProgress.mode&ProfileMode){// Reset the durations from the first pass so they aren't included in the\n// final amounts. This seems counterintuitive, since we're intentionally\n// not measuring part of the render phase, but this makes it match what we\n// do in Concurrent Mode.\nprimaryChildFragment.actualDuration=0;primaryChildFragment.actualStartTime=-1;primaryChildFragment.selfBaseDuration=currentPrimaryChildFragment.selfBaseDuration;primaryChildFragment.treeBaseDuration=currentPrimaryChildFragment.treeBaseDuration;}// However, since we're going to remain on the fallback, we no longer want\n// to delete it.\nworkInProgress.deletions=null;}else{primaryChildFragment=updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment,primaryChildProps);// (We don't do this in legacy mode, because in legacy mode we don't re-use\n// the current tree; see previous branch.)\nprimaryChildFragment.subtreeFlags=currentPrimaryChildFragment.subtreeFlags&StaticMask;}var fallbackChildFragment;if(currentFallbackChildFragment!==null){fallbackChildFragment=createWorkInProgress(currentFallbackChildFragment,fallbackChildren);}else{fallbackChildFragment=createFiberFromFragment(fallbackChildren,mode,renderLanes,null);// Needs a placement effect because the parent (the Suspense boundary) already\n// mounted but this is a new fiber.\nfallbackChildFragment.flags|=Placement;}fallbackChildFragment.return=workInProgress;primaryChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;return fallbackChildFragment;}function retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,recoverableError){// Falling back to client rendering. Because this has performance\n// implications, it's considered a recoverable error, even though the user\n// likely won't observe anything wrong with the UI.\n//\n// The error is passed in as an argument to enforce that every caller provide\n// a custom message, or explicitly opt out (currently the only path that opts\n// out is legacy mode; every concurrent path provides an error).\nif(recoverableError!==null){queueHydrationError(recoverableError);}// This will add the old fiber to the deletion list\nreconcileChildFibers(workInProgress,current.child,null,renderLanes);// We're now not suspended nor dehydrated.\nvar nextProps=workInProgress.pendingProps;var primaryChildren=nextProps.children;var primaryChildFragment=mountSuspensePrimaryChildren(workInProgress,primaryChildren);// Needs a placement effect because the parent (the Suspense boundary) already\n// mounted but this is a new fiber.\nprimaryChildFragment.flags|=Placement;workInProgress.memoizedState=null;return primaryChildFragment;}function mountSuspenseFallbackAfterRetryWithoutHydrating(current,workInProgress,primaryChildren,fallbackChildren,renderLanes){var fiberMode=workInProgress.mode;var primaryChildProps={mode:'visible',children:primaryChildren};var primaryChildFragment=mountWorkInProgressOffscreenFiber(primaryChildProps,fiberMode);var fallbackChildFragment=createFiberFromFragment(fallbackChildren,fiberMode,renderLanes,null);// Needs a placement effect because the parent (the Suspense\n// boundary) already mounted but this is a new fiber.\nfallbackChildFragment.flags|=Placement;primaryChildFragment.return=workInProgress;fallbackChildFragment.return=workInProgress;primaryChildFragment.sibling=fallbackChildFragment;workInProgress.child=primaryChildFragment;if((workInProgress.mode&ConcurrentMode)!==NoMode){// We will have dropped the effect list which contains the\n// deletion. We need to reconcile to delete the current child.\nreconcileChildFibers(workInProgress,current.child,null,renderLanes);}return fallbackChildFragment;}function mountDehydratedSuspenseComponent(workInProgress,suspenseInstance,renderLanes){// During the first pass, we'll bail out and not drill into the children.\n// Instead, we'll leave the content in place and try to hydrate it later.\nif((workInProgress.mode&ConcurrentMode)===NoMode){{error('Cannot hydrate Suspense in legacy mode. Switch from '+'ReactDOM.hydrate(element, container) to '+'ReactDOMClient.hydrateRoot(container, <App />)'+'.render(element) or remove the Suspense components from '+'the server rendered components.');}workInProgress.lanes=laneToLanes(SyncLane);}else if(isSuspenseInstanceFallback(suspenseInstance)){// This is a client-only boundary. Since we won't get any content from the server\n// for this, we need to schedule that at a higher priority based on when it would\n// have timed out. In theory we could render it in this pass but it would have the\n// wrong priority associated with it and will prevent hydration of parent path.\n// Instead, we'll leave work left on it to render it in a separate commit.\n// TODO This time should be the time at which the server rendered response that is\n// a parent to this boundary was displayed. However, since we currently don't have\n// a protocol to transfer that time, we'll just estimate it by using the current\n// time. This will mean that Suspense timeouts are slightly shifted to later than\n// they should be.\n// Schedule a normal pri update to render this content.\nworkInProgress.lanes=laneToLanes(DefaultHydrationLane);}else{// We'll continue hydrating the rest at offscreen priority since we'll already\n// be showing the right content coming from the server, it is no rush.\nworkInProgress.lanes=laneToLanes(OffscreenLane);}return null;}function updateDehydratedSuspenseComponent(current,workInProgress,suspenseInstance,suspenseState,renderLanes){// We should never be hydrating at this point because it is the first pass,\n// but after we've already committed once.\nwarnIfHydrating();if((workInProgress.mode&ConcurrentMode)===NoMode){return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,// TODO: When we delete legacy mode, we should make this error argument\n// required — every concurrent mode path that causes hydration to\n// de-opt to client rendering should have an error message.\nnull);}if(isSuspenseInstanceFallback(suspenseInstance)){// This boundary is in a permanent fallback state. In this case, we'll never\n// get an update and we'll never be able to hydrate the final content. Let's just try the\n// client side render instead.\nreturn retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,// TODO: The server should serialize the error message so we can log it\n// here on the client. Or, in production, a hash/id that corresponds to\n// the error.\nnew Error('The server could not finish this Suspense boundary, likely '+'due to an error during server rendering. Switched to '+'client rendering.'));}// any context has changed, we need to treat is as if the input might have changed.\nvar hasContextChanged=includesSomeLane(renderLanes,current.childLanes);if(didReceiveUpdate||hasContextChanged){// This boundary has changed since the first render. This means that we are now unable to\n// hydrate it. We might still be able to hydrate it using a higher priority lane.\nvar root=getWorkInProgressRoot();if(root!==null){var attemptHydrationAtLane=getBumpedLaneForHydration(root,renderLanes);if(attemptHydrationAtLane!==NoLane&&attemptHydrationAtLane!==suspenseState.retryLane){// Intentionally mutating since this render will get interrupted. This\n// is one of the very rare times where we mutate the current tree\n// during the render phase.\nsuspenseState.retryLane=attemptHydrationAtLane;// TODO: Ideally this would inherit the event time of the current render\nvar eventTime=NoTimestamp;scheduleUpdateOnFiber(current,attemptHydrationAtLane,eventTime);}}// If we have scheduled higher pri work above, this will probably just abort the render\n// since we now have higher priority work, but in case it doesn't, we need to prepare to\n// render something, if we time out. Even if that requires us to delete everything and\n// skip hydration.\n// Delay having to do this as long as the suspense timeout allows us.\nrenderDidSuspendDelayIfPossible();return retrySuspenseComponentWithoutHydrating(current,workInProgress,renderLanes,new Error('This Suspense boundary received an update before it finished '+'hydrating. This caused the boundary to switch to client rendering. '+'The usual way to fix this is to wrap the original update '+'in startTransition.'));}else if(isSuspenseInstancePending(suspenseInstance)){// This component is still pending more data from the server, so we can't hydrate its\n// content. We treat it as if this component suspended itself. It might seem as if\n// we could just try to render it client-side instead. However, this will perform a\n// lot of unnecessary work and is unlikely to complete since it often will suspend\n// on missing data anyway. Additionally, the server might be able to render more\n// than we can on the client yet. In that case we'd end up with more fallback states\n// on the client than if we just leave it alone. If the server times out or errors\n// these should update this boundary to the permanent Fallback state instead.\n// Mark it as having captured (i.e. suspended).\nworkInProgress.flags|=DidCapture;// Leave the child in place. I.e. the dehydrated fragment.\nworkInProgress.child=current.child;// Register a callback to retry this boundary once the server has sent the result.\nvar retry=retryDehydratedSuspenseBoundary.bind(null,current);registerSuspenseInstanceRetry(suspenseInstance,retry);return null;}else{// This is the first attempt.\nreenterHydrationStateFromDehydratedSuspenseInstance(workInProgress,suspenseInstance,suspenseState.treeContext);var nextProps=workInProgress.pendingProps;var primaryChildren=nextProps.children;var primaryChildFragment=mountSuspensePrimaryChildren(workInProgress,primaryChildren);// Mark the children as hydrating. This is a fast path to know whether this\n// tree is part of a hydrating tree. This is used to determine if a child\n// node has fully mounted yet, and for scheduling event replaying.\n// Conceptually this is similar to Placement in that a new subtree is\n// inserted into the React tree here. It just happens to not need DOM\n// mutations because it already exists.\nprimaryChildFragment.flags|=Hydrating;return primaryChildFragment;}}function scheduleSuspenseWorkOnFiber(fiber,renderLanes,propagationRoot){fiber.lanes=mergeLanes(fiber.lanes,renderLanes);var alternate=fiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,renderLanes);}scheduleContextWorkOnParentPath(fiber.return,renderLanes,propagationRoot);}function propagateSuspenseContextChange(workInProgress,firstChild,renderLanes){// Mark any Suspense boundaries with fallbacks as having work to do.\n// If they were previously forced into fallbacks, they may now be able\n// to unblock.\nvar node=firstChild;while(node!==null){if(node.tag===SuspenseComponent){var state=node.memoizedState;if(state!==null){scheduleSuspenseWorkOnFiber(node,renderLanes,workInProgress);}}else if(node.tag===SuspenseListComponent){// If the tail is hidden there might not be an Suspense boundaries\n// to schedule work on. In this case we have to schedule it on the\n// list itself.\n// We don't have to traverse to the children of the list since\n// the list will propagate the change when it rerenders.\nscheduleSuspenseWorkOnFiber(node,renderLanes,workInProgress);}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===workInProgress){return;}while(node.sibling===null){if(node.return===null||node.return===workInProgress){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}}function findLastContentRow(firstChild){// This is going to find the last row among these children that is already\n// showing content on the screen, as opposed to being in fallback state or\n// new. If a row has multiple Suspense boundaries, any of them being in the\n// fallback state, counts as the whole row being in a fallback state.\n// Note that the \"rows\" will be workInProgress, but any nested children\n// will still be current since we haven't rendered them yet. The mounted\n// order may not be the same as the new order. We use the new order.\nvar row=firstChild;var lastContentRow=null;while(row!==null){var currentRow=row.alternate;// New rows can't be content rows.\nif(currentRow!==null&&findFirstSuspended(currentRow)===null){lastContentRow=row;}row=row.sibling;}return lastContentRow;}function validateRevealOrder(revealOrder){{if(revealOrder!==undefined&&revealOrder!=='forwards'&&revealOrder!=='backwards'&&revealOrder!=='together'&&!didWarnAboutRevealOrder[revealOrder]){didWarnAboutRevealOrder[revealOrder]=true;if(typeof revealOrder==='string'){switch(revealOrder.toLowerCase()){case'together':case'forwards':case'backwards':{error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. '+'Use lowercase \"%s\" instead.',revealOrder,revealOrder.toLowerCase());break;}case'forward':case'backward':{error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. '+'React uses the -s suffix in the spelling. Use \"%ss\" instead.',revealOrder,revealOrder.toLowerCase());break;}default:error('\"%s\" is not a supported revealOrder on <SuspenseList />. '+'Did you mean \"together\", \"forwards\" or \"backwards\"?',revealOrder);break;}}else{error('%s is not a supported value for revealOrder on <SuspenseList />. '+'Did you mean \"together\", \"forwards\" or \"backwards\"?',revealOrder);}}}}function validateTailOptions(tailMode,revealOrder){{if(tailMode!==undefined&&!didWarnAboutTailOptions[tailMode]){if(tailMode!=='collapsed'&&tailMode!=='hidden'){didWarnAboutTailOptions[tailMode]=true;error('\"%s\" is not a supported value for tail on <SuspenseList />. '+'Did you mean \"collapsed\" or \"hidden\"?',tailMode);}else if(revealOrder!=='forwards'&&revealOrder!=='backwards'){didWarnAboutTailOptions[tailMode]=true;error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is '+'\"forwards\" or \"backwards\". '+'Did you mean to specify revealOrder=\"forwards\"?',tailMode);}}}}function validateSuspenseListNestedChild(childSlot,index){{var isAnArray=isArray(childSlot);var isIterable=!isAnArray&&typeof getIteratorFn(childSlot)==='function';if(isAnArray||isIterable){var type=isAnArray?'array':'iterable';error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in '+'an additional SuspenseList to configure its revealOrder: '+'<SuspenseList revealOrder=...> ... '+'<SuspenseList revealOrder=...>{%s}</SuspenseList> ... '+'</SuspenseList>',type,index,type);return false;}}return true;}function validateSuspenseListChildren(children,revealOrder){{if((revealOrder==='forwards'||revealOrder==='backwards')&&children!==undefined&&children!==null&&children!==false){if(isArray(children)){for(var i=0;i<children.length;i++){if(!validateSuspenseListNestedChild(children[i],i)){return;}}}else{var iteratorFn=getIteratorFn(children);if(typeof iteratorFn==='function'){var childrenIterator=iteratorFn.call(children);if(childrenIterator){var step=childrenIterator.next();var _i=0;for(;!step.done;step=childrenIterator.next()){if(!validateSuspenseListNestedChild(step.value,_i)){return;}_i++;}}}else{error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. '+'This is not useful since it needs multiple rows. '+'Did you mean to pass multiple children or an array?',revealOrder);}}}}}function initSuspenseListRenderState(workInProgress,isBackwards,tail,lastContentRow,tailMode){var renderState=workInProgress.memoizedState;if(renderState===null){workInProgress.memoizedState={isBackwards:isBackwards,rendering:null,renderingStartTime:0,last:lastContentRow,tail:tail,tailMode:tailMode};}else{// We can reuse the existing object from previous renders.\nrenderState.isBackwards=isBackwards;renderState.rendering=null;renderState.renderingStartTime=0;renderState.last=lastContentRow;renderState.tail=tail;renderState.tailMode=tailMode;}}// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(current,workInProgress,renderLanes){var nextProps=workInProgress.pendingProps;var revealOrder=nextProps.revealOrder;var tailMode=nextProps.tail;var newChildren=nextProps.children;validateRevealOrder(revealOrder);validateTailOptions(tailMode,revealOrder);validateSuspenseListChildren(newChildren,revealOrder);reconcileChildren(current,workInProgress,newChildren,renderLanes);var suspenseContext=suspenseStackCursor.current;var shouldForceFallback=hasSuspenseContext(suspenseContext,ForceSuspenseFallback);if(shouldForceFallback){suspenseContext=setShallowSuspenseContext(suspenseContext,ForceSuspenseFallback);workInProgress.flags|=DidCapture;}else{var didSuspendBefore=current!==null&&(current.flags&DidCapture)!==NoFlags;if(didSuspendBefore){// If we previously forced a fallback, we need to schedule work\n// on any nested boundaries to let them know to try to render\n// again. This is the same as context updating.\npropagateSuspenseContextChange(workInProgress,workInProgress.child,renderLanes);}suspenseContext=setDefaultShallowSuspenseContext(suspenseContext);}pushSuspenseContext(workInProgress,suspenseContext);if((workInProgress.mode&ConcurrentMode)===NoMode){// In legacy mode, SuspenseList doesn't work so we just\n// use make it a noop by treating it as the default revealOrder.\nworkInProgress.memoizedState=null;}else{switch(revealOrder){case'forwards':{var lastContentRow=findLastContentRow(workInProgress.child);var tail;if(lastContentRow===null){// The whole list is part of the tail.\n// TODO: We could fast path by just rendering the tail now.\ntail=workInProgress.child;workInProgress.child=null;}else{// Disconnect the tail rows after the content row.\n// We're going to render them separately later.\ntail=lastContentRow.sibling;lastContentRow.sibling=null;}initSuspenseListRenderState(workInProgress,false,// isBackwards\ntail,lastContentRow,tailMode);break;}case'backwards':{// We're going to find the first row that has existing content.\n// At the same time we're going to reverse the list of everything\n// we pass in the meantime. That's going to be our tail in reverse\n// order.\nvar _tail=null;var row=workInProgress.child;workInProgress.child=null;while(row!==null){var currentRow=row.alternate;// New rows can't be content rows.\nif(currentRow!==null&&findFirstSuspended(currentRow)===null){// This is the beginning of the main content.\nworkInProgress.child=row;break;}var nextRow=row.sibling;row.sibling=_tail;_tail=row;row=nextRow;}// TODO: If workInProgress.child is null, we can continue on the tail immediately.\ninitSuspenseListRenderState(workInProgress,true,// isBackwards\n_tail,null,// last\ntailMode);break;}case'together':{initSuspenseListRenderState(workInProgress,false,// isBackwards\nnull,// tail\nnull,// last\nundefined);break;}default:{// The default reveal order is the same as not having\n// a boundary.\nworkInProgress.memoizedState=null;}}}return workInProgress.child;}function updatePortalComponent(current,workInProgress,renderLanes){pushHostContainer(workInProgress,workInProgress.stateNode.containerInfo);var nextChildren=workInProgress.pendingProps;if(current===null){// Portals are special because we don't append the children during mount\n// but at commit. Therefore we need to track insertions which the normal\n// flow doesn't do during mount. This doesn't happen at the root because\n// the root always starts with a \"current\" with a null child.\n// TODO: Consider unifying this with how the root works.\nworkInProgress.child=reconcileChildFibers(workInProgress,null,nextChildren,renderLanes);}else{reconcileChildren(current,workInProgress,nextChildren,renderLanes);}return workInProgress.child;}var hasWarnedAboutUsingNoValuePropOnContextProvider=false;function updateContextProvider(current,workInProgress,renderLanes){var providerType=workInProgress.type;var context=providerType._context;var newProps=workInProgress.pendingProps;var oldProps=workInProgress.memoizedProps;var newValue=newProps.value;{if(!('value'in newProps)){if(!hasWarnedAboutUsingNoValuePropOnContextProvider){hasWarnedAboutUsingNoValuePropOnContextProvider=true;error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');}}var providerPropTypes=workInProgress.type.propTypes;if(providerPropTypes){checkPropTypes(providerPropTypes,newProps,'prop','Context.Provider');}}pushProvider(workInProgress,context,newValue);{if(oldProps!==null){var oldValue=oldProps.value;if(objectIs(oldValue,newValue)){// No change. Bailout early if children are the same.\nif(oldProps.children===newProps.children&&!hasContextChanged()){return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}}else{// The context value changed. Search for matching consumers and schedule\n// them to update.\npropagateContextChange(workInProgress,context,renderLanes);}}}var newChildren=newProps.children;reconcileChildren(current,workInProgress,newChildren,renderLanes);return workInProgress.child;}var hasWarnedAboutUsingContextAsConsumer=false;function updateContextConsumer(current,workInProgress,renderLanes){var context=workInProgress.type;// The logic below for Context differs depending on PROD or DEV mode. In\n// DEV mode, we create a separate object for Context.Consumer that acts\n// like a proxy to Context. This proxy object adds unnecessary code in PROD\n// so we use the old behaviour (Context.Consumer references Context) to\n// reduce size and overhead. The separate object references context via\n// a property called \"_context\", which also gives us the ability to check\n// in DEV mode if this property exists or not and warn if it does not.\n{if(context._context===undefined){// This may be because it's a Context (rather than a Consumer).\n// Or it may be because it's older React where they're the same thing.\n// We only want to warn if we're sure it's a new React.\nif(context!==context.Consumer){if(!hasWarnedAboutUsingContextAsConsumer){hasWarnedAboutUsingContextAsConsumer=true;error('Rendering <Context> directly is not supported and will be removed in '+'a future major release. Did you mean to render <Context.Consumer> instead?');}}}else{context=context._context;}}var newProps=workInProgress.pendingProps;var render=newProps.children;{if(typeof render!=='function'){error('A context consumer was rendered with multiple children, or a child '+\"that isn't a function. A context consumer expects a single child \"+'that is a function. If you did pass a function, make sure there '+'is no trailing or leading whitespace around it.');}}prepareToReadContext(workInProgress,renderLanes);var newValue=readContext(context);{markComponentRenderStarted(workInProgress);}var newChildren;{ReactCurrentOwner$1.current=workInProgress;setIsRendering(true);newChildren=render(newValue);setIsRendering(false);}{markComponentRenderStopped();}// React DevTools reads this flag.\nworkInProgress.flags|=PerformedWork;reconcileChildren(current,workInProgress,newChildren,renderLanes);return workInProgress.child;}function markWorkInProgressReceivedUpdate(){didReceiveUpdate=true;}function bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes){if(current!==null){// Reuse previous dependencies\nworkInProgress.dependencies=current.dependencies;}{// Don't update \"base\" render times for bailouts.\nstopProfilerTimerIfRunning();}markSkippedUpdateLanes(workInProgress.lanes);// Check if the children have any pending work.\nif(!includesSomeLane(renderLanes,workInProgress.childLanes)){// The children don't have any work either. We can skip them.\n// TODO: Once we add back resuming, we should check if the children are\n// a work-in-progress set. If so, we need to transfer their effects.\n{return null;}}// This fiber doesn't have work, but its subtree does. Clone the child\n// fibers and continue.\ncloneChildFibers(current,workInProgress);return workInProgress.child;}function remountFiber(current,oldWorkInProgress,newWorkInProgress){{var returnFiber=oldWorkInProgress.return;if(returnFiber===null){// eslint-disable-next-line react-internal/prod-error-codes\nthrow new Error('Cannot swap the root fiber.');}// Disconnect from the old current.\n// It will get deleted.\ncurrent.alternate=null;oldWorkInProgress.alternate=null;// Connect to the new tree.\nnewWorkInProgress.index=oldWorkInProgress.index;newWorkInProgress.sibling=oldWorkInProgress.sibling;newWorkInProgress.return=oldWorkInProgress.return;newWorkInProgress.ref=oldWorkInProgress.ref;// Replace the child/sibling pointers above it.\nif(oldWorkInProgress===returnFiber.child){returnFiber.child=newWorkInProgress;}else{var prevSibling=returnFiber.child;if(prevSibling===null){// eslint-disable-next-line react-internal/prod-error-codes\nthrow new Error('Expected parent to have a child.');}while(prevSibling.sibling!==oldWorkInProgress){prevSibling=prevSibling.sibling;if(prevSibling===null){// eslint-disable-next-line react-internal/prod-error-codes\nthrow new Error('Expected to find the previous sibling.');}}prevSibling.sibling=newWorkInProgress;}// Delete the old fiber and place the new one.\n// Since the old fiber is disconnected, we have to schedule it manually.\nvar deletions=returnFiber.deletions;if(deletions===null){returnFiber.deletions=[current];returnFiber.flags|=ChildDeletion;}else{deletions.push(current);}newWorkInProgress.flags|=Placement;// Restart work from the new fiber.\nreturn newWorkInProgress;}}function checkScheduledUpdateOrContext(current,renderLanes){// Before performing an early bailout, we must check if there are pending\n// updates or context.\nvar updateLanes=current.lanes;if(includesSomeLane(updateLanes,renderLanes)){return true;}// No pending update, but because context is propagated lazily, we need\nreturn false;}function attemptEarlyBailoutIfNoScheduledUpdate(current,workInProgress,renderLanes){// This fiber does not have any pending work. Bailout without entering\n// the begin phase. There's still some bookkeeping we that needs to be done\n// in this optimized path, mostly pushing stuff onto the stack.\nswitch(workInProgress.tag){case HostRoot:pushHostRootContext(workInProgress);var root=workInProgress.stateNode;resetHydrationState();break;case HostComponent:pushHostContext(workInProgress);break;case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){pushContextProvider(workInProgress);}break;}case HostPortal:pushHostContainer(workInProgress,workInProgress.stateNode.containerInfo);break;case ContextProvider:{var newValue=workInProgress.memoizedProps.value;var context=workInProgress.type._context;pushProvider(workInProgress,context,newValue);break;}case Profiler:{// Profiler should only call onRender when one of its descendants actually rendered.\nvar hasChildWork=includesSomeLane(renderLanes,workInProgress.childLanes);if(hasChildWork){workInProgress.flags|=Update;}{// Reset effect durations for the next eventual effect phase.\n// These are reset during render to allow the DevTools commit hook a chance to read them,\nvar stateNode=workInProgress.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}}break;case SuspenseComponent:{var state=workInProgress.memoizedState;if(state!==null){{if(state.dehydrated!==null){pushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));// We know that this component will suspend again because if it has\n// been unsuspended it has committed as a resolved Suspense component.\n// If it needs to be retried, it should have work scheduled on it.\nworkInProgress.flags|=DidCapture;// We should never render the children of a dehydrated boundary until we\n// upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\nreturn null;}}// If this boundary is currently timed out, we need to decide\n// whether to retry the primary children, or to skip over it and\n// go straight to the fallback. Check the priority of the primary\n// child fragment.\nvar primaryChildFragment=workInProgress.child;var primaryChildLanes=primaryChildFragment.childLanes;if(includesSomeLane(renderLanes,primaryChildLanes)){// The primary children have pending work. Use the normal path\n// to attempt to render the primary children again.\nreturn updateSuspenseComponent(current,workInProgress,renderLanes);}else{// The primary child fragment does not have pending work marked\n// on it\npushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));// The primary children do not have pending work with sufficient\n// priority. Bailout.\nvar child=bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);if(child!==null){// The fallback children have pending work. Skip over the\n// primary children and work on the fallback.\nreturn child.sibling;}else{// Note: We can return `null` here because we already checked\n// whether there were nested context consumers, via the call to\n// `bailoutOnAlreadyFinishedWork` above.\nreturn null;}}}else{pushSuspenseContext(workInProgress,setDefaultShallowSuspenseContext(suspenseStackCursor.current));}break;}case SuspenseListComponent:{var didSuspendBefore=(current.flags&DidCapture)!==NoFlags;var _hasChildWork=includesSomeLane(renderLanes,workInProgress.childLanes);if(didSuspendBefore){if(_hasChildWork){// If something was in fallback state last time, and we have all the\n// same children then we're still in progressive loading state.\n// Something might get unblocked by state updates or retries in the\n// tree which will affect the tail. So we need to use the normal\n// path to compute the correct tail.\nreturn updateSuspenseListComponent(current,workInProgress,renderLanes);}// If none of the children had any work, that means that none of\n// them got retried so they'll still be blocked in the same way\n// as before. We can fast bail out.\nworkInProgress.flags|=DidCapture;}// If nothing suspended before and we're rendering the same children,\n// then the tail doesn't matter. Anything new that suspends will work\n// in the \"together\" mode, so we can continue from the state we had.\nvar renderState=workInProgress.memoizedState;if(renderState!==null){// Reset to the \"together\" mode in case we've started a different\n// update in the past but didn't complete it.\nrenderState.rendering=null;renderState.tail=null;renderState.lastEffect=null;}pushSuspenseContext(workInProgress,suspenseStackCursor.current);if(_hasChildWork){break;}else{// If none of the children had any work, that means that none of\n// them got retried so they'll still be blocked in the same way\n// as before. We can fast bail out.\nreturn null;}}case OffscreenComponent:case LegacyHiddenComponent:{// Need to check if the tree still needs to be deferred. This is\n// almost identical to the logic used in the normal update path,\n// so we'll just enter that. The only difference is we'll bail out\n// at the next level instead of this one, because the child props\n// have not changed. Which is fine.\n// TODO: Probably should refactor `beginWork` to split the bailout\n// path from the normal path. I'm tempted to do a labeled break here\n// but I won't :)\nworkInProgress.lanes=NoLanes;return updateOffscreenComponent(current,workInProgress,renderLanes);}}return bailoutOnAlreadyFinishedWork(current,workInProgress,renderLanes);}function beginWork(current,workInProgress,renderLanes){{if(workInProgress._debugNeedsRemount&&current!==null){// This will restart the begin phase with a new fiber.\nreturn remountFiber(current,workInProgress,createFiberFromTypeAndProps(workInProgress.type,workInProgress.key,workInProgress.pendingProps,workInProgress._debugOwner||null,workInProgress.mode,workInProgress.lanes));}}if(current!==null){var oldProps=current.memoizedProps;var newProps=workInProgress.pendingProps;if(oldProps!==newProps||hasContextChanged()||// Force a re-render if the implementation changed due to hot reload:\nworkInProgress.type!==current.type){// If props or context changed, mark the fiber as having performed work.\n// This may be unset if the props are determined to be equal later (memo).\ndidReceiveUpdate=true;}else{// Neither props nor legacy context changes. Check if there's a pending\n// update or context change.\nvar hasScheduledUpdateOrContext=checkScheduledUpdateOrContext(current,renderLanes);if(!hasScheduledUpdateOrContext&&// If this is the second pass of an error or suspense boundary, there\n// may not be work scheduled on `current`, so we check for this flag.\n(workInProgress.flags&DidCapture)===NoFlags){// No pending updates or context. Bail out now.\ndidReceiveUpdate=false;return attemptEarlyBailoutIfNoScheduledUpdate(current,workInProgress,renderLanes);}if((current.flags&ForceUpdateForLegacySuspense)!==NoFlags){// This is a special case that only exists for legacy mode.\n// See https://github.com/facebook/react/pull/19216.\ndidReceiveUpdate=true;}else{// An update was scheduled on this fiber, but there are no new props\n// nor legacy context. Set this to false. If an update queue or context\n// consumer produces a changed value, it will set this to true. Otherwise,\n// the component will assume the children have not changed and bail out.\ndidReceiveUpdate=false;}}}else{didReceiveUpdate=false;if(getIsHydrating()&&isForkedChild(workInProgress)){// Check if this child belongs to a list of muliple children in\n// its parent.\n//\n// In a true multi-threaded implementation, we would render children on\n// parallel threads. This would represent the beginning of a new render\n// thread for this subtree.\n//\n// We only use this for id generation during hydration, which is why the\n// logic is located in this special branch.\nvar slotIndex=workInProgress.index;var numberOfForks=getForksAtLevel();pushTreeId(workInProgress,numberOfForks,slotIndex);}}// Before entering the begin phase, clear pending update priority.\n// TODO: This assumes that we're about to evaluate the component and process\n// the update queue. However, there's an exception: SimpleMemoComponent\n// sometimes bails out later in the begin phase. This indicates that we should\n// move this assignment out of the common path and into each branch.\nworkInProgress.lanes=NoLanes;switch(workInProgress.tag){case IndeterminateComponent:{return mountIndeterminateComponent(current,workInProgress,workInProgress.type,renderLanes);}case LazyComponent:{var elementType=workInProgress.elementType;return mountLazyComponent(current,workInProgress,elementType,renderLanes);}case FunctionComponent:{var Component=workInProgress.type;var unresolvedProps=workInProgress.pendingProps;var resolvedProps=workInProgress.elementType===Component?unresolvedProps:resolveDefaultProps(Component,unresolvedProps);return updateFunctionComponent(current,workInProgress,Component,resolvedProps,renderLanes);}case ClassComponent:{var _Component=workInProgress.type;var _unresolvedProps=workInProgress.pendingProps;var _resolvedProps=workInProgress.elementType===_Component?_unresolvedProps:resolveDefaultProps(_Component,_unresolvedProps);return updateClassComponent(current,workInProgress,_Component,_resolvedProps,renderLanes);}case HostRoot:return updateHostRoot(current,workInProgress,renderLanes);case HostComponent:return updateHostComponent$1(current,workInProgress,renderLanes);case HostText:return updateHostText$1(current,workInProgress);case SuspenseComponent:return updateSuspenseComponent(current,workInProgress,renderLanes);case HostPortal:return updatePortalComponent(current,workInProgress,renderLanes);case ForwardRef:{var type=workInProgress.type;var _unresolvedProps2=workInProgress.pendingProps;var _resolvedProps2=workInProgress.elementType===type?_unresolvedProps2:resolveDefaultProps(type,_unresolvedProps2);return updateForwardRef(current,workInProgress,type,_resolvedProps2,renderLanes);}case Fragment:return updateFragment(current,workInProgress,renderLanes);case Mode:return updateMode(current,workInProgress,renderLanes);case Profiler:return updateProfiler(current,workInProgress,renderLanes);case ContextProvider:return updateContextProvider(current,workInProgress,renderLanes);case ContextConsumer:return updateContextConsumer(current,workInProgress,renderLanes);case MemoComponent:{var _type2=workInProgress.type;var _unresolvedProps3=workInProgress.pendingProps;// Resolve outer props first, then resolve inner props.\nvar _resolvedProps3=resolveDefaultProps(_type2,_unresolvedProps3);{if(workInProgress.type!==workInProgress.elementType){var outerPropTypes=_type2.propTypes;if(outerPropTypes){checkPropTypes(outerPropTypes,_resolvedProps3,// Resolved for outer only\n'prop',getComponentNameFromType(_type2));}}}_resolvedProps3=resolveDefaultProps(_type2.type,_resolvedProps3);return updateMemoComponent(current,workInProgress,_type2,_resolvedProps3,renderLanes);}case SimpleMemoComponent:{return updateSimpleMemoComponent(current,workInProgress,workInProgress.type,workInProgress.pendingProps,renderLanes);}case IncompleteClassComponent:{var _Component2=workInProgress.type;var _unresolvedProps4=workInProgress.pendingProps;var _resolvedProps4=workInProgress.elementType===_Component2?_unresolvedProps4:resolveDefaultProps(_Component2,_unresolvedProps4);return mountIncompleteClassComponent(current,workInProgress,_Component2,_resolvedProps4,renderLanes);}case SuspenseListComponent:{return updateSuspenseListComponent(current,workInProgress,renderLanes);}case ScopeComponent:{break;}case OffscreenComponent:{return updateOffscreenComponent(current,workInProgress,renderLanes);}}throw new Error(\"Unknown unit of work tag (\"+workInProgress.tag+\"). This error is likely caused by a bug in \"+'React. Please file an issue.');}function unwindWork(current,workInProgress,renderLanes){// Note: This intentionally doesn't check if we're hydrating because comparing\n// to the current tree provider fiber is just as fast and less error-prone.\n// Ideally we would have a special version of the work loop only\n// for hydration.\npopTreeContext(workInProgress);switch(workInProgress.tag){case ClassComponent:{var Component=workInProgress.type;if(isContextProvider(Component)){popContext(workInProgress);}var flags=workInProgress.flags;if(flags&ShouldCapture){workInProgress.flags=flags&~ShouldCapture|DidCapture;if((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}return workInProgress;}return null;}case HostRoot:{popHostContainer(workInProgress);popTopLevelContextObject(workInProgress);resetWorkInProgressVersions();var _flags=workInProgress.flags;if((_flags&ShouldCapture)!==NoFlags&&(_flags&DidCapture)===NoFlags){// There was an error during render that wasn't captured by a suspense\n// boundary. Do a second pass on the root to unmount the children.\nworkInProgress.flags=_flags&~ShouldCapture|DidCapture;return workInProgress;}// We unwound to the root without completing it. Exit.\nreturn null;}case HostComponent:{// TODO: popHydrationState\npopHostContext(workInProgress);return null;}case SuspenseComponent:{popSuspenseContext(workInProgress);{var suspenseState=workInProgress.memoizedState;if(suspenseState!==null&&suspenseState.dehydrated!==null){if(workInProgress.alternate===null){throw new Error('Threw in newly mounted dehydrated component. This is likely a bug in '+'React. Please file an issue.');}resetHydrationState();}}var _flags2=workInProgress.flags;if(_flags2&ShouldCapture){workInProgress.flags=_flags2&~ShouldCapture|DidCapture;// Captured a suspense effect. Re-render the boundary.\nif((workInProgress.mode&ProfileMode)!==NoMode){transferActualDuration(workInProgress);}return workInProgress;}return null;}case SuspenseListComponent:{popSuspenseContext(workInProgress);// SuspenseList doesn't actually catch anything. It should've been\n// caught by a nested boundary. If not, it should bubble through.\nreturn null;}case HostPortal:popHostContainer(workInProgress);return null;case ContextProvider:var context=workInProgress.type._context;popProvider(context,workInProgress);return null;case OffscreenComponent:case LegacyHiddenComponent:popRenderLanes(workInProgress);return null;case CacheComponent:return null;default:return null;}}function unwindInterruptedWork(current,interruptedWork,renderLanes){// Note: This intentionally doesn't check if we're hydrating because comparing\n// to the current tree provider fiber is just as fast and less error-prone.\n// Ideally we would have a special version of the work loop only\n// for hydration.\npopTreeContext(interruptedWork);switch(interruptedWork.tag){case ClassComponent:{var childContextTypes=interruptedWork.type.childContextTypes;if(childContextTypes!==null&&childContextTypes!==undefined){popContext(interruptedWork);}break;}case HostRoot:{popHostContainer(interruptedWork);popTopLevelContextObject(interruptedWork);resetWorkInProgressVersions();break;}case HostComponent:{popHostContext(interruptedWork);break;}case HostPortal:popHostContainer(interruptedWork);break;case SuspenseComponent:popSuspenseContext(interruptedWork);break;case SuspenseListComponent:popSuspenseContext(interruptedWork);break;case ContextProvider:var context=interruptedWork.type._context;popProvider(context,interruptedWork);break;case OffscreenComponent:case LegacyHiddenComponent:popRenderLanes(interruptedWork);break;}}function invokeGuardedCallbackProd(name,func,context,a,b,c,d,e,f){var funcArgs=Array.prototype.slice.call(arguments,3);try{func.apply(context,funcArgs);}catch(error){this.onError(error);}}var invokeGuardedCallbackImpl=invokeGuardedCallbackProd;{// In DEV mode, we swap out invokeGuardedCallback for a special version\n// that plays more nicely with the browser's DevTools. The idea is to preserve\n// \"Pause on exceptions\" behavior. Because React wraps all user-provided\n// functions in invokeGuardedCallback, and the production version of\n// invokeGuardedCallback uses a try-catch, all user exceptions are treated\n// like caught exceptions, and the DevTools won't pause unless the developer\n// takes the extra step of enabling pause on caught exceptions. This is\n// unintuitive, though, because even though React has caught the error, from\n// the developer's perspective, the error is uncaught.\n//\n// To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n// try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n// DOM node, and call the user-provided callback from inside an event handler\n// for that fake event. If the callback throws, the error is \"captured\" using\n// a global event handler. But because the error happens in a different\n// event loop context, it does not interrupt the normal program flow.\n// Effectively, this gives us try-catch behavior without actually using\n// try-catch. Neat!\n// Check that the browser supports the APIs we need to implement our special\n// DEV version of invokeGuardedCallback\nif(typeof window!=='undefined'&&typeof window.dispatchEvent==='function'&&typeof document!=='undefined'&&typeof document.createEvent==='function'){var fakeNode=document.createElement('react');invokeGuardedCallbackImpl=function invokeGuardedCallbackDev(name,func,context,a,b,c,d,e,f){// If document doesn't exist we know for sure we will crash in this method\n// when we call document.createEvent(). However this can cause confusing\n// errors: https://github.com/facebook/create-react-app/issues/3482\n// So we preemptively throw with a better message instead.\nif(typeof document==='undefined'||document===null){throw new Error('The `document` global was defined when React was initialized, but is not '+'defined anymore. This can happen in a test environment if a component '+'schedules an update from an asynchronous callback, but the test has already '+'finished running. To solve this, you can either unmount the component at '+'the end of your test (and ensure that any asynchronous operations get '+'canceled in `componentWillUnmount`), or you can change the test itself '+'to be asynchronous.');}var evt=document.createEvent('Event');var didCall=false;// Keeps track of whether the user-provided callback threw an error. We\n// set this to true at the beginning, then set it to false right after\n// calling the function. If the function errors, `didError` will never be\n// set to false. This strategy works even if the browser is flaky and\n// fails to call our global error handler, because it doesn't rely on\n// the error event at all.\nvar didError=true;// Keeps track of the value of window.event so that we can reset it\n// during the callback to let user code access window.event in the\n// browsers that support it.\nvar windowEvent=window.event;// Keeps track of the descriptor of window.event to restore it after event\n// dispatching: https://github.com/facebook/react/issues/13688\nvar windowEventDescriptor=Object.getOwnPropertyDescriptor(window,'event');function restoreAfterDispatch(){// We immediately remove the callback from event listeners so that\n// nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n// nested call would trigger the fake event handlers of any call higher\n// in the stack.\nfakeNode.removeEventListener(evtType,callCallback,false);// We check for window.hasOwnProperty('event') to prevent the\n// window.event assignment in both IE <= 10 as they throw an error\n// \"Member not found\" in strict mode, and in Firefox which does not\n// support window.event.\nif(typeof window.event!=='undefined'&&window.hasOwnProperty('event')){window.event=windowEvent;}}// Create an event handler for our fake event. We will synchronously\n// dispatch our fake event using `dispatchEvent`. Inside the handler, we\n// call the user-provided callback.\nvar funcArgs=Array.prototype.slice.call(arguments,3);function callCallback(){didCall=true;restoreAfterDispatch();func.apply(context,funcArgs);didError=false;}// Create a global error event handler. We use this to capture the value\n// that was thrown. It's possible that this error handler will fire more\n// than once; for example, if non-React code also calls `dispatchEvent`\n// and a handler for that event throws. We should be resilient to most of\n// those cases. Even if our error event handler fires more than once, the\n// last error event is always used. If the callback actually does error,\n// we know that the last error event is the correct one, because it's not\n// possible for anything else to have happened in between our callback\n// erroring and the code that follows the `dispatchEvent` call below. If\n// the callback doesn't error, but the error event was fired, we know to\n// ignore it because `didError` will be false, as described above.\nvar error;// Use this to track whether the error event is ever called.\nvar didSetError=false;var isCrossOriginError=false;function handleWindowError(event){error=event.error;didSetError=true;if(error===null&&event.colno===0&&event.lineno===0){isCrossOriginError=true;}if(event.defaultPrevented){// Some other error handler has prevented default.\n// Browsers silence the error report if this happens.\n// We'll remember this to later decide whether to log it or not.\nif(error!=null&&typeof error==='object'){try{error._suppressLogging=true;}catch(inner){// Ignore.\n}}}}// Create a fake event type.\nvar evtType=\"react-\"+(name?name:'invokeguardedcallback');// Attach our event handlers\nwindow.addEventListener('error',handleWindowError);fakeNode.addEventListener(evtType,callCallback,false);// Synchronously dispatch our fake event. If the user-provided function\n// errors, it will trigger our global error handler.\nevt.initEvent(evtType,false,false);fakeNode.dispatchEvent(evt);if(windowEventDescriptor){Object.defineProperty(window,'event',windowEventDescriptor);}if(didCall&&didError){if(!didSetError){// The callback errored, but the error event never fired.\n// eslint-disable-next-line react-internal/prod-error-codes\nerror=new Error('An error was thrown inside one of your components, but React '+\"doesn't know what it was. This is likely due to browser \"+'flakiness. React does its best to preserve the \"Pause on '+'exceptions\" behavior of the DevTools, which requires some '+\"DEV-mode only tricks. It's possible that these don't work in \"+'your browser. Try triggering the error in production mode, '+'or switching to a modern browser. If you suspect that this is '+'actually an issue with React, please file an issue.');}else if(isCrossOriginError){// eslint-disable-next-line react-internal/prod-error-codes\nerror=new Error(\"A cross-origin error was thrown. React doesn't have access to \"+'the actual error object in development. '+'See https://reactjs.org/link/crossorigin-error for more information.');}this.onError(error);}// Remove our event listeners\nwindow.removeEventListener('error',handleWindowError);if(!didCall){// Something went really wrong, and our event was not dispatched.\n// https://github.com/facebook/react/issues/16734\n// https://github.com/facebook/react/issues/16585\n// Fall back to the production implementation.\nrestoreAfterDispatch();return invokeGuardedCallbackProd.apply(this,arguments);}};}}var invokeGuardedCallbackImpl$1=invokeGuardedCallbackImpl;var hasError=false;var caughtError=null;// Used by event system to capture/rethrow the first error.\nvar reporter={onError:function(error){hasError=true;caughtError=error;}};/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */function invokeGuardedCallback(name,func,context,a,b,c,d,e,f){hasError=false;caughtError=null;invokeGuardedCallbackImpl$1.apply(reporter,arguments);}function hasCaughtError(){return hasError;}function clearCaughtError(){if(hasError){var error=caughtError;hasError=false;caughtError=null;return error;}else{throw new Error('clearCaughtError was called but no error was captured. This error '+'is likely caused by a bug in React. Please file an issue.');}}var didWarnAboutUndefinedSnapshotBeforeUpdate=null;{didWarnAboutUndefinedSnapshotBeforeUpdate=new Set();}// Used during the commit phase to track the state of the Offscreen component stack.\n// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.\n// Only used when enableSuspenseLayoutEffectSemantics is enabled.\nvar offscreenSubtreeIsHidden=false;var offscreenSubtreeWasHidden=false;var PossiblyWeakSet=typeof WeakSet==='function'?WeakSet:Set;var nextEffect=null;// Used for Profiling builds to track updaters.\nvar inProgressLanes=null;var inProgressRoot=null;function reportUncaughtErrorInDEV(error){// Wrapping each small part of the commit phase into a guarded\n// callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n// But we rely on it to surface errors to DEV tools like overlays\n// (https://github.com/facebook/react/issues/21712).\n// As a compromise, rethrow only caught errors in a guard.\n{invokeGuardedCallback(null,function(){throw error;});clearCaughtError();}}var callComponentWillUnmountWithTimer=function(current,instance){instance.props=current.memoizedProps;instance.state=current.memoizedState;if(current.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentWillUnmount();}finally{recordLayoutEffectDuration(current);}}else{instance.componentWillUnmount();}};// Capture errors so they don't interrupt mounting.\nfunction safelyCallCommitHookLayoutEffectListMount(current,nearestMountedAncestor){try{commitHookEffectListMount(Layout,current);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(current,nearestMountedAncestor,instance){try{callComponentWillUnmountWithTimer(current,instance);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt mounting.\nfunction safelyCallComponentDidMount(current,nearestMountedAncestor,instance){try{instance.componentDidMount();}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(current,nearestMountedAncestor,error);}}// Capture errors so they don't interrupt mounting.\nfunction safelyAttachRef(current,nearestMountedAncestor){try{commitAttachRef(current);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(current,nearestMountedAncestor,error);}}function safelyDetachRef(current,nearestMountedAncestor){var ref=current.ref;if(ref!==null){if(typeof ref==='function'){var retVal;try{if(enableProfilerTimer&&enableProfilerCommitHooks&&current.mode&ProfileMode){try{startLayoutEffectTimer();retVal=ref(null);}finally{recordLayoutEffectDuration(current);}}else{retVal=ref(null);}}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(current,nearestMountedAncestor,error);}{if(typeof retVal==='function'){error('Unexpected return value from a callback ref in %s. '+'A callback ref should not return a function.',getComponentNameFromFiber(current));}}}else{ref.current=null;}}}function safelyCallDestroy(current,nearestMountedAncestor,destroy){try{destroy();}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(current,nearestMountedAncestor,error);}}var focusedInstanceHandle=null;var shouldFireAfterActiveInstanceBlur=false;function commitBeforeMutationEffects(root,firstChild){focusedInstanceHandle=prepareForCommit(root.containerInfo);nextEffect=firstChild;commitBeforeMutationEffects_begin();// We no longer need to track the active instance fiber\nvar shouldFire=shouldFireAfterActiveInstanceBlur;shouldFireAfterActiveInstanceBlur=false;focusedInstanceHandle=null;return shouldFire;}function commitBeforeMutationEffects_begin(){while(nextEffect!==null){var fiber=nextEffect;// This phase is only used for beforeActiveInstanceBlur.\nvar child=fiber.child;if((fiber.subtreeFlags&BeforeMutationMask)!==NoFlags&&child!==null){ensureCorrectReturnPointer(child,fiber);nextEffect=child;}else{commitBeforeMutationEffects_complete();}}}function commitBeforeMutationEffects_complete(){while(nextEffect!==null){var fiber=nextEffect;setCurrentFiber(fiber);try{commitBeforeMutationEffectsOnFiber(fiber);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();var sibling=fiber.sibling;if(sibling!==null){ensureCorrectReturnPointer(sibling,fiber.return);nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitBeforeMutationEffectsOnFiber(finishedWork){var current=finishedWork.alternate;var flags=finishedWork.flags;if((flags&Snapshot)!==NoFlags){setCurrentFiber(finishedWork);switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{break;}case ClassComponent:{if(current!==null){var prevProps=current.memoizedProps;var prevState=current.memoizedState;var instance=finishedWork.stateNode;// We could update instance props and state here,\n// but instead we rely on them being set during last render.\n// TODO: revisit this when we implement resuming.\n{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'getSnapshotBeforeUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'getSnapshotBeforeUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}var snapshot=instance.getSnapshotBeforeUpdate(finishedWork.elementType===finishedWork.type?prevProps:resolveDefaultProps(finishedWork.type,prevProps),prevState);{var didWarnSet=didWarnAboutUndefinedSnapshotBeforeUpdate;if(snapshot===undefined&&!didWarnSet.has(finishedWork.type)){didWarnSet.add(finishedWork.type);error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) '+'must be returned. You have returned undefined.',getComponentNameFromFiber(finishedWork));}}instance.__reactInternalSnapshotBeforeUpdate=snapshot;}break;}case HostRoot:{if(supportsMutation){var root=finishedWork.stateNode;clearContainer(root.containerInfo);}break;}case HostComponent:case HostText:case HostPortal:case IncompleteClassComponent:// Nothing to do for these component types\nbreak;default:{throw new Error('This unit of work tag should not have side-effects. This error is '+'likely caused by a bug in React. Please file an issue.');}}resetCurrentFiber();}}function commitHookEffectListUnmount(flags,finishedWork,nearestMountedAncestor){var updateQueue=finishedWork.updateQueue;var lastEffect=updateQueue!==null?updateQueue.lastEffect:null;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{if((effect.tag&flags)===flags){// Unmount\nvar destroy=effect.destroy;effect.destroy=undefined;if(destroy!==undefined){{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectUnmountStarted(finishedWork);}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectUnmountStarted(finishedWork);}}safelyCallDestroy(finishedWork,nearestMountedAncestor,destroy);{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectUnmountStopped();}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectUnmountStopped();}}}}effect=effect.next;}while(effect!==firstEffect);}}function commitHookEffectListMount(flags,finishedWork){var updateQueue=finishedWork.updateQueue;var lastEffect=updateQueue!==null?updateQueue.lastEffect:null;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{if((effect.tag&flags)===flags){{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectMountStarted(finishedWork);}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectMountStarted(finishedWork);}}// Mount\nvar create=effect.create;effect.destroy=create();{if((flags&Passive$1)!==NoFlags$1){markComponentPassiveEffectMountStopped();}else if((flags&Layout)!==NoFlags$1){markComponentLayoutEffectMountStopped();}}{var destroy=effect.destroy;if(destroy!==undefined&&typeof destroy!=='function'){var hookName=void 0;if((effect.tag&Layout)!==NoFlags){hookName='useLayoutEffect';}else if((effect.tag&Insertion)!==NoFlags){hookName='useInsertionEffect';}else{hookName='useEffect';}var addendum=void 0;if(destroy===null){addendum=' You returned null. If your effect does not require clean '+'up, return undefined (or nothing).';}else if(typeof destroy.then==='function'){addendum='\\n\\nIt looks like you wrote '+hookName+'(async () => ...) or returned a Promise. '+'Instead, write the async function inside your effect '+'and call it immediately:\\n\\n'+hookName+'(() => {\\n'+'  async function fetchData() {\\n'+'    // You can await here\\n'+'    const response = await MyAPI.getData(someId);\\n'+'    // ...\\n'+'  }\\n'+'  fetchData();\\n'+\"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\"+'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';}else{addendum=' You returned: '+destroy;}error('%s must not return anything besides a function, '+'which is used for clean-up.%s',hookName,addendum);}}}effect=effect.next;}while(effect!==firstEffect);}}function commitPassiveEffectDurations(finishedRoot,finishedWork){{// Only Profilers with work in their subtree will have an Update effect scheduled.\nif((finishedWork.flags&Update)!==NoFlags){switch(finishedWork.tag){case Profiler:{var passiveEffectDuration=finishedWork.stateNode.passiveEffectDuration;var _finishedWork$memoize=finishedWork.memoizedProps,id=_finishedWork$memoize.id,onPostCommit=_finishedWork$memoize.onPostCommit;// This value will still reflect the previous commit phase.\n// It does not get reset until the start of the next commit phase.\nvar commitTime=getCommitTime();var phase=finishedWork.alternate===null?'mount':'update';{if(isCurrentUpdateNested()){phase='nested-update';}}if(typeof onPostCommit==='function'){onPostCommit(id,phase,passiveEffectDuration,commitTime);}// Bubble times to the next nearest ancestor Profiler.\n// After we process that Profiler, we'll bubble further up.\nvar parentFiber=finishedWork.return;outer:while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.passiveEffectDuration+=passiveEffectDuration;break outer;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.passiveEffectDuration+=passiveEffectDuration;break outer;}parentFiber=parentFiber.return;}break;}}}}}function commitLayoutEffectOnFiber(finishedRoot,current,finishedWork,committedLanes){if((finishedWork.flags&LayoutMask)!==NoFlags){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(!offscreenSubtreeWasHidden){// At this point layout effects have already been destroyed (during mutation phase).\n// This is done to prevent sibling component effects from interfering with each other,\n// e.g. a destroy function in one component should never override a ref set\n// by a create function in another component during the same commit.\nif(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListMount(Layout|HasEffect,finishedWork);}finally{recordLayoutEffectDuration(finishedWork);}}else{commitHookEffectListMount(Layout|HasEffect,finishedWork);}}break;}case ClassComponent:{var instance=finishedWork.stateNode;if(finishedWork.flags&Update){if(!offscreenSubtreeWasHidden){if(current===null){// We could update instance props and state here,\n// but instead we rely on them being set during last render.\n// TODO: revisit this when we implement resuming.\n{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'componentDidMount. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'componentDidMount. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentDidMount();}finally{recordLayoutEffectDuration(finishedWork);}}else{instance.componentDidMount();}}else{var prevProps=finishedWork.elementType===finishedWork.type?current.memoizedProps:resolveDefaultProps(finishedWork.type,current.memoizedProps);var prevState=current.memoizedState;// We could update instance props and state here,\n// but instead we rely on them being set during last render.\n// TODO: revisit this when we implement resuming.\n{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'componentDidUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'componentDidUpdate. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();instance.componentDidUpdate(prevProps,prevState,instance.__reactInternalSnapshotBeforeUpdate);}finally{recordLayoutEffectDuration(finishedWork);}}else{instance.componentDidUpdate(prevProps,prevState,instance.__reactInternalSnapshotBeforeUpdate);}}}}// TODO: I think this is now always non-null by the time it reaches the\n// commit phase. Consider removing the type check.\nvar updateQueue=finishedWork.updateQueue;if(updateQueue!==null){{if(finishedWork.type===finishedWork.elementType&&!didWarnAboutReassigningProps){if(instance.props!==finishedWork.memoizedProps){error('Expected %s props to match memoized props before '+'processing the update queue. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.props`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}if(instance.state!==finishedWork.memoizedState){error('Expected %s state to match memoized state before '+'processing the update queue. '+'This might either be because of a bug in React, or because '+'a component reassigns its own `this.state`. '+'Please file an issue.',getComponentNameFromFiber(finishedWork)||'instance');}}}// We could update instance props and state here,\n// but instead we rely on them being set during last render.\n// TODO: revisit this when we implement resuming.\ncommitUpdateQueue(finishedWork,updateQueue,instance);}break;}case HostRoot:{// TODO: I think this is now always non-null by the time it reaches the\n// commit phase. Consider removing the type check.\nvar _updateQueue=finishedWork.updateQueue;if(_updateQueue!==null){var _instance=null;if(finishedWork.child!==null){switch(finishedWork.child.tag){case HostComponent:_instance=getPublicInstance(finishedWork.child.stateNode);break;case ClassComponent:_instance=finishedWork.child.stateNode;break;}}commitUpdateQueue(finishedWork,_updateQueue,_instance);}break;}case HostComponent:{var _instance2=finishedWork.stateNode;// Renderers may schedule work to be done after host components are mounted\n// (eg DOM renderer may schedule auto-focus for inputs and form controls).\n// These effects should only be committed when components are first mounted,\n// aka when there is no current/alternate.\nif(current===null&&finishedWork.flags&Update){var type=finishedWork.type;var props=finishedWork.memoizedProps;commitMount(_instance2,type,props,finishedWork);}break;}case HostText:{// We have no life-cycles associated with text.\nbreak;}case HostPortal:{// We have no life-cycles associated with portals.\nbreak;}case Profiler:{{var _finishedWork$memoize2=finishedWork.memoizedProps,onCommit=_finishedWork$memoize2.onCommit,onRender=_finishedWork$memoize2.onRender;var effectDuration=finishedWork.stateNode.effectDuration;var commitTime=getCommitTime();var phase=current===null?'mount':'update';{if(isCurrentUpdateNested()){phase='nested-update';}}if(typeof onRender==='function'){onRender(finishedWork.memoizedProps.id,phase,finishedWork.actualDuration,finishedWork.treeBaseDuration,finishedWork.actualStartTime,commitTime);}{if(typeof onCommit==='function'){onCommit(finishedWork.memoizedProps.id,phase,effectDuration,commitTime);}// Schedule a passive effect for this Profiler to call onPostCommit hooks.\n// This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n// because the effect is also where times bubble to parent Profilers.\nenqueuePendingPassiveProfilerEffect(finishedWork);// Propagate layout effect durations to the next nearest Profiler ancestor.\n// Do not reset these values until the next render so DevTools has a chance to read them first.\nvar parentFiber=finishedWork.return;outer:while(parentFiber!==null){switch(parentFiber.tag){case HostRoot:var root=parentFiber.stateNode;root.effectDuration+=effectDuration;break outer;case Profiler:var parentStateNode=parentFiber.stateNode;parentStateNode.effectDuration+=effectDuration;break outer;}parentFiber=parentFiber.return;}}}break;}case SuspenseComponent:{commitSuspenseHydrationCallbacks(finishedRoot,finishedWork);break;}case SuspenseListComponent:case IncompleteClassComponent:case ScopeComponent:case OffscreenComponent:case LegacyHiddenComponent:{break;}default:throw new Error('This unit of work tag should not have side-effects. This error is '+'likely caused by a bug in React. Please file an issue.');}}if(!offscreenSubtreeWasHidden){{if(finishedWork.flags&Ref){commitAttachRef(finishedWork);}}}}function reappearLayoutEffectsOnFiber(node){// Turn on layout effects in a tree that previously disappeared.\n// TODO (Offscreen) Check: flags & LayoutStatic\nswitch(node.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(node.mode&ProfileMode){try{startLayoutEffectTimer();safelyCallCommitHookLayoutEffectListMount(node,node.return);}finally{recordLayoutEffectDuration(node);}}else{safelyCallCommitHookLayoutEffectListMount(node,node.return);}break;}case ClassComponent:{var instance=node.stateNode;if(typeof instance.componentDidMount==='function'){safelyCallComponentDidMount(node,node.return,instance);}safelyAttachRef(node,node.return);break;}case HostComponent:{safelyAttachRef(node,node.return);break;}}}function hideOrUnhideAllChildren(finishedWork,isHidden){// Only hide or unhide the top-most host nodes.\nvar hostSubtreeRoot=null;if(supportsMutation){// We only have the top Fiber that was inserted but we need to recurse down its\n// children to find all the terminal nodes.\nvar node=finishedWork;while(true){if(node.tag===HostComponent){if(hostSubtreeRoot===null){hostSubtreeRoot=node;var instance=node.stateNode;if(isHidden){hideInstance(instance);}else{unhideInstance(node.stateNode,node.memoizedProps);}}}else if(node.tag===HostText){if(hostSubtreeRoot===null){var _instance3=node.stateNode;if(isHidden){hideTextInstance(_instance3);}else{unhideTextInstance(_instance3,node.memoizedProps);}}}else if((node.tag===OffscreenComponent||node.tag===LegacyHiddenComponent)&&node.memoizedState!==null&&node!==finishedWork);else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===finishedWork){return;}while(node.sibling===null){if(node.return===null||node.return===finishedWork){return;}if(hostSubtreeRoot===node){hostSubtreeRoot=null;}node=node.return;}if(hostSubtreeRoot===node){hostSubtreeRoot=null;}node.sibling.return=node.return;node=node.sibling;}}}function commitAttachRef(finishedWork){var ref=finishedWork.ref;if(ref!==null){var instance=finishedWork.stateNode;var instanceToUse;switch(finishedWork.tag){case HostComponent:instanceToUse=getPublicInstance(instance);break;default:instanceToUse=instance;}// Moved outside to ensure DCE works with this flag\nif(typeof ref==='function'){var retVal;if(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();retVal=ref(instanceToUse);}finally{recordLayoutEffectDuration(finishedWork);}}else{retVal=ref(instanceToUse);}{if(typeof retVal==='function'){error('Unexpected return value from a callback ref in %s. '+'A callback ref should not return a function.',getComponentNameFromFiber(finishedWork));}}}else{{if(!ref.hasOwnProperty('current')){error('Unexpected ref object provided for %s. '+'Use either a ref-setter function or React.createRef().',getComponentNameFromFiber(finishedWork));}}ref.current=instanceToUse;}}}function commitDetachRef(current){var currentRef=current.ref;if(currentRef!==null){if(typeof currentRef==='function'){if(current.mode&ProfileMode){try{startLayoutEffectTimer();currentRef(null);}finally{recordLayoutEffectDuration(current);}}else{currentRef(null);}}else{currentRef.current=null;}}}// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(finishedRoot,current,nearestMountedAncestor){onCommitUnmount(current);switch(current.tag){case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{var updateQueue=current.updateQueue;if(updateQueue!==null){var lastEffect=updateQueue.lastEffect;if(lastEffect!==null){var firstEffect=lastEffect.next;var effect=firstEffect;do{var _effect=effect,destroy=_effect.destroy,tag=_effect.tag;if(destroy!==undefined){if((tag&Insertion)!==NoFlags$1){safelyCallDestroy(current,nearestMountedAncestor,destroy);}else if((tag&Layout)!==NoFlags$1){{markComponentLayoutEffectUnmountStarted(current);}if(current.mode&ProfileMode){startLayoutEffectTimer();safelyCallDestroy(current,nearestMountedAncestor,destroy);recordLayoutEffectDuration(current);}else{safelyCallDestroy(current,nearestMountedAncestor,destroy);}{markComponentLayoutEffectUnmountStopped();}}}effect=effect.next;}while(effect!==firstEffect);}}return;}case ClassComponent:{safelyDetachRef(current,nearestMountedAncestor);var instance=current.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(current,nearestMountedAncestor,instance);}return;}case HostComponent:{safelyDetachRef(current,nearestMountedAncestor);return;}case HostPortal:{// TODO: this is recursive.\n// We are also not using this parent because\n// the portal will get pushed immediately.\nif(supportsMutation){unmountHostComponents(finishedRoot,current,nearestMountedAncestor);}else if(supportsPersistence){emptyPortalContainer(current);}return;}case DehydratedFragment:{return;}case ScopeComponent:{return;}}}function commitNestedUnmounts(finishedRoot,root,nearestMountedAncestor){// While we're inside a removed host node we don't want to call\n// removeChild on the inner nodes because they're removed by the top\n// call anyway. We also want to call componentWillUnmount on all\n// composites before this host node is removed from the tree. Therefore\n// we do an inner loop while we're still inside the host node.\nvar node=root;while(true){commitUnmount(finishedRoot,node,nearestMountedAncestor);// Visit children because they may contain more composite or host nodes.\n// Skip portals because commitUnmount() currently visits them recursively.\nif(node.child!==null&&(// If we use mutation we drill down into portals using commitUnmount above.\n// If we don't use mutation we drill down into portals here instead.\n!supportsMutation||node.tag!==HostPortal)){node.child.return=node;node=node.child;continue;}if(node===root){return;}while(node.sibling===null){if(node.return===null||node.return===root){return;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}}function detachFiberMutation(fiber){// Cut off the return pointer to disconnect it from the tree.\n// This enables us to detect and warn against state updates on an unmounted component.\n// It also prevents events from bubbling from within disconnected components.\n//\n// Ideally, we should also clear the child pointer of the parent alternate to let this\n// get GC:ed but we don't know which for sure which parent is the current\n// one so we'll settle for GC:ing the subtree of this child.\n// This child itself will be GC:ed when the parent updates the next time.\n//\n// Note that we can't clear child or sibling pointers yet.\n// They're needed for passive effects and for findDOMNode.\n// We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n//\n// Don't reset the alternate yet, either. We need that so we can detach the\n// alternate's fields in the passive phase. Clearing the return pointer is\n// sufficient for findDOMNode semantics.\nvar alternate=fiber.alternate;if(alternate!==null){alternate.return=null;}fiber.return=null;}function detachFiberAfterEffects(fiber){var alternate=fiber.alternate;if(alternate!==null){fiber.alternate=null;detachFiberAfterEffects(alternate);}// Note: Defensively using negation instead of < in case\n// `deletedTreeCleanUpLevel` is undefined.\n{// Clear cyclical Fiber fields. This level alone is designed to roughly\n// approximate the planned Fiber refactor. In that world, `setState` will be\n// bound to a special \"instance\" object instead of a Fiber. The Instance\n// object will not have any of these fields. It will only be connected to\n// the fiber tree via a single link at the root. So if this level alone is\n// sufficient to fix memory issues, that bodes well for our plans.\nfiber.child=null;fiber.deletions=null;fiber.sibling=null;// The `stateNode` is cyclical because on host nodes it points to the host\n// tree, which has its own pointers to children, parents, and siblings.\n// The other host nodes also point back to fibers, so we should detach that\n// one, too.\nif(fiber.tag===HostComponent){var hostInstance=fiber.stateNode;if(hostInstance!==null){detachDeletedInstance(hostInstance);}}fiber.stateNode=null;// I'm intentionally not clearing the `return` field in this level. We\n// already disconnect the `return` pointer at the root of the deleted\n// subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n// cyclical — it's only cyclical when combined with `child`, `sibling`, and\n// `alternate`. But we'll clear it in the next level anyway, just in case.\n{fiber._debugOwner=null;}{// Theoretically, nothing in here should be necessary, because we already\n// disconnected the fiber from the tree. So even if something leaks this\n// particular fiber, it won't leak anything else\n//\n// The purpose of this branch is to be super aggressive so we can measure\n// if there's any difference in memory impact. If there is, that could\n// indicate a React leak we don't know about.\nfiber.return=null;fiber.dependencies=null;fiber.memoizedProps=null;fiber.memoizedState=null;fiber.pendingProps=null;fiber.stateNode=null;// TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\nfiber.updateQueue=null;}}}function emptyPortalContainer(current){if(!supportsPersistence){return;}var portal=current.stateNode;var containerInfo=portal.containerInfo;var emptyChildSet=createContainerChildSet(containerInfo);replaceContainerChildren(containerInfo,emptyChildSet);}function commitContainer(finishedWork){if(!supportsPersistence){return;}switch(finishedWork.tag){case ClassComponent:case HostComponent:case HostText:{return;}case HostRoot:case HostPortal:{var portalOrRoot=finishedWork.stateNode;var containerInfo=portalOrRoot.containerInfo,pendingChildren=portalOrRoot.pendingChildren;replaceContainerChildren(containerInfo,pendingChildren);return;}}throw new Error('This unit of work tag should not have side-effects. This error is '+'likely caused by a bug in React. Please file an issue.');}function getHostParentFiber(fiber){var parent=fiber.return;while(parent!==null){if(isHostParent(parent)){return parent;}parent=parent.return;}throw new Error('Expected to find a host parent. This error is likely caused by a bug '+'in React. Please file an issue.');}function isHostParent(fiber){return fiber.tag===HostComponent||fiber.tag===HostRoot||fiber.tag===HostPortal;}function getHostSibling(fiber){// We're going to search forward into the tree until we find a sibling host\n// node. Unfortunately, if multiple insertions are done in a row we have to\n// search past them. This leads to exponential search for the next sibling.\n// TODO: Find a more efficient way to do this.\nvar node=fiber;siblings:while(true){// If we didn't find anything, let's try the next sibling.\nwhile(node.sibling===null){if(node.return===null||isHostParent(node.return)){// If we pop out of the root or hit the parent the fiber we are the\n// last sibling.\nreturn null;}node=node.return;}node.sibling.return=node.return;node=node.sibling;while(node.tag!==HostComponent&&node.tag!==HostText&&node.tag!==DehydratedFragment){// If it is not host node and, we might have a host node inside it.\n// Try to search down until we find one.\nif(node.flags&Placement){// If we don't have a child, try the siblings instead.\ncontinue siblings;}// If we don't have a child, try the siblings instead.\n// We also skip portals because they are not part of this host tree.\nif(node.child===null||node.tag===HostPortal){continue siblings;}else{node.child.return=node;node=node.child;}}// Check if this host node is stable or about to be placed.\nif(!(node.flags&Placement)){// Found it!\nreturn node.stateNode;}}}function commitPlacement(finishedWork){if(!supportsMutation){return;}// Recursively insert all host nodes into the parent.\nvar parentFiber=getHostParentFiber(finishedWork);// Note: these two variables *must* always be updated together.\nswitch(parentFiber.tag){case HostComponent:{var parent=parentFiber.stateNode;if(parentFiber.flags&ContentReset){// Reset the text content of the parent before doing any insertions\nresetTextContent(parent);// Clear ContentReset from the effect tag\nparentFiber.flags&=~ContentReset;}var before=getHostSibling(finishedWork);// We only have the top Fiber that was inserted but we need to recurse down its\n// children to find all the terminal nodes.\ninsertOrAppendPlacementNode(finishedWork,before,parent);break;}case HostRoot:case HostPortal:{var _parent=parentFiber.stateNode.containerInfo;var _before=getHostSibling(finishedWork);insertOrAppendPlacementNodeIntoContainer(finishedWork,_before,_parent);break;}// eslint-disable-next-line-no-fallthrough\ndefault:throw new Error('Invalid host parent fiber. This error is likely caused by a bug '+'in React. Please file an issue.');}}function insertOrAppendPlacementNodeIntoContainer(node,before,parent){var tag=node.tag;var isHost=tag===HostComponent||tag===HostText;if(isHost){var stateNode=node.stateNode;if(before){insertInContainerBefore(parent,stateNode,before);}else{appendChildToContainer(parent,stateNode);}}else if(tag===HostPortal);else{var child=node.child;if(child!==null){insertOrAppendPlacementNodeIntoContainer(child,before,parent);var sibling=child.sibling;while(sibling!==null){insertOrAppendPlacementNodeIntoContainer(sibling,before,parent);sibling=sibling.sibling;}}}}function insertOrAppendPlacementNode(node,before,parent){var tag=node.tag;var isHost=tag===HostComponent||tag===HostText;if(isHost){var stateNode=node.stateNode;if(before){insertBefore(parent,stateNode,before);}else{appendChild(parent,stateNode);}}else if(tag===HostPortal);else{var child=node.child;if(child!==null){insertOrAppendPlacementNode(child,before,parent);var sibling=child.sibling;while(sibling!==null){insertOrAppendPlacementNode(sibling,before,parent);sibling=sibling.sibling;}}}}function unmountHostComponents(finishedRoot,current,nearestMountedAncestor){// We only have the top Fiber that was deleted but we need to recurse down its\n// children to find all the terminal nodes.\nvar node=current;// Each iteration, currentParent is populated with node's host parent if not\n// currentParentIsValid.\nvar currentParentIsValid=false;// Note: these two variables *must* always be updated together.\nvar currentParent;var currentParentIsContainer;while(true){if(!currentParentIsValid){var parent=node.return;findParent:while(true){if(parent===null){throw new Error('Expected to find a host parent. This error is likely caused by '+'a bug in React. Please file an issue.');}var parentStateNode=parent.stateNode;switch(parent.tag){case HostComponent:currentParent=parentStateNode;currentParentIsContainer=false;break findParent;case HostRoot:currentParent=parentStateNode.containerInfo;currentParentIsContainer=true;break findParent;case HostPortal:currentParent=parentStateNode.containerInfo;currentParentIsContainer=true;break findParent;}parent=parent.return;}currentParentIsValid=true;}if(node.tag===HostComponent||node.tag===HostText){commitNestedUnmounts(finishedRoot,node,nearestMountedAncestor);// After all the children have unmounted, it is now safe to remove the\n// node from the tree.\nif(currentParentIsContainer){removeChildFromContainer(currentParent,node.stateNode);}else{removeChild(currentParent,node.stateNode);}// Don't visit children because we already visited them.\n}else if(node.tag===DehydratedFragment){if(currentParentIsContainer){clearSuspenseBoundaryFromContainer(currentParent,node.stateNode);}else{clearSuspenseBoundary(currentParent,node.stateNode);}}else if(node.tag===HostPortal){if(node.child!==null){// When we go into a portal, it becomes the parent to remove from.\n// We will reassign it back when we pop the portal on the way up.\ncurrentParent=node.stateNode.containerInfo;currentParentIsContainer=true;// Visit children because portals might contain host components.\nnode.child.return=node;node=node.child;continue;}}else{commitUnmount(finishedRoot,node,nearestMountedAncestor);// Visit children because we may find more host components below.\nif(node.child!==null){node.child.return=node;node=node.child;continue;}}if(node===current){return;}while(node.sibling===null){if(node.return===null||node.return===current){return;}node=node.return;if(node.tag===HostPortal){// When we go out of the portal, we need to restore the parent.\n// Since we don't keep a stack of them, we will search for it.\ncurrentParentIsValid=false;}}node.sibling.return=node.return;node=node.sibling;}}function commitDeletion(finishedRoot,current,nearestMountedAncestor){if(supportsMutation){// Recursively delete all host nodes from the parent.\n// Detach refs and call componentWillUnmount() on the whole subtree.\nunmountHostComponents(finishedRoot,current,nearestMountedAncestor);}else{// Detach refs and call componentWillUnmount() on the whole subtree.\ncommitNestedUnmounts(finishedRoot,current,nearestMountedAncestor);}detachFiberMutation(current);}function commitWork(current,finishedWork){if(!supportsMutation){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{commitHookEffectListUnmount(Insertion|HasEffect,finishedWork,finishedWork.return);commitHookEffectListMount(Insertion|HasEffect,finishedWork);// Layout effects are destroyed during the mutation phase so that all\n// destroy functions for all fibers are called before any create functions.\n// This prevents sibling component effects from interfering with each other,\n// e.g. a destroy function in one component should never override a ref set\n// by a create function in another component during the same commit.\n// TODO: Check if we're inside an Offscreen subtree that disappeared\n// during this commit. If so, we would have already unmounted its\n// layout hooks. (However, since we null out the `destroy` function\n// right before calling it, the behavior is already correct, so this\n// would mostly be for modeling purposes.)\nif(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListUnmount(Layout|HasEffect,finishedWork,finishedWork.return);}finally{recordLayoutEffectDuration(finishedWork);}}else{commitHookEffectListUnmount(Layout|HasEffect,finishedWork,finishedWork.return);}return;}case Profiler:{return;}case SuspenseComponent:{commitSuspenseCallback(finishedWork);attachSuspenseRetryListeners(finishedWork);return;}case SuspenseListComponent:{attachSuspenseRetryListeners(finishedWork);return;}case HostRoot:{if(supportsHydration){if(current!==null){var prevRootState=current.memoizedState;if(prevRootState.isDehydrated){var root=finishedWork.stateNode;commitHydratedContainer(root.containerInfo);}}}break;}case OffscreenComponent:case LegacyHiddenComponent:{return;}}commitContainer(finishedWork);return;}switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{commitHookEffectListUnmount(Insertion|HasEffect,finishedWork,finishedWork.return);commitHookEffectListMount(Insertion|HasEffect,finishedWork);// Layout effects are destroyed during the mutation phase so that all\n// destroy functions for all fibers are called before any create functions.\n// This prevents sibling component effects from interfering with each other,\n// e.g. a destroy function in one component should never override a ref set\n// by a create function in another component during the same commit.\nif(finishedWork.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListUnmount(Layout|HasEffect,finishedWork,finishedWork.return);}finally{recordLayoutEffectDuration(finishedWork);}}else{commitHookEffectListUnmount(Layout|HasEffect,finishedWork,finishedWork.return);}return;}case ClassComponent:{return;}case HostComponent:{var instance=finishedWork.stateNode;if(instance!=null){// Commit the work prepared earlier.\nvar newProps=finishedWork.memoizedProps;// For hydration we reuse the update path but we treat the oldProps\n// as the newProps. The updatePayload will contain the real change in\n// this case.\nvar oldProps=current!==null?current.memoizedProps:newProps;var type=finishedWork.type;// TODO: Type the updateQueue to be specific to host components.\nvar updatePayload=finishedWork.updateQueue;finishedWork.updateQueue=null;if(updatePayload!==null){commitUpdate(instance,updatePayload,type,oldProps,newProps,finishedWork);}}return;}case HostText:{if(finishedWork.stateNode===null){throw new Error('This should have a text node initialized. This error is likely '+'caused by a bug in React. Please file an issue.');}var textInstance=finishedWork.stateNode;var newText=finishedWork.memoizedProps;// For hydration we reuse the update path but we treat the oldProps\n// as the newProps. The updatePayload will contain the real change in\n// this case.\nvar oldText=current!==null?current.memoizedProps:newText;commitTextUpdate(textInstance,oldText,newText);return;}case HostRoot:{if(supportsHydration){if(current!==null){var _prevRootState=current.memoizedState;if(_prevRootState.isDehydrated){var _root=finishedWork.stateNode;commitHydratedContainer(_root.containerInfo);}}}return;}case Profiler:{return;}case SuspenseComponent:{commitSuspenseCallback(finishedWork);attachSuspenseRetryListeners(finishedWork);return;}case SuspenseListComponent:{attachSuspenseRetryListeners(finishedWork);return;}case IncompleteClassComponent:{return;}}throw new Error('This unit of work tag should not have side-effects. This error is '+'likely caused by a bug in React. Please file an issue.');}function commitSuspenseCallback(finishedWork){// TODO: Move this to passive phase\nvar newState=finishedWork.memoizedState;}function commitSuspenseHydrationCallbacks(finishedRoot,finishedWork){if(!supportsHydration){return;}var newState=finishedWork.memoizedState;if(newState===null){var current=finishedWork.alternate;if(current!==null){var prevState=current.memoizedState;if(prevState!==null){var suspenseInstance=prevState.dehydrated;if(suspenseInstance!==null){commitHydratedSuspenseInstance(suspenseInstance);}}}}}function attachSuspenseRetryListeners(finishedWork){// If this boundary just timed out, then it will have a set of wakeables.\n// For each wakeable, attach a listener so that when it resolves, React\n// attempts to re-render the boundary in the primary (pre-timeout) state.\nvar wakeables=finishedWork.updateQueue;if(wakeables!==null){finishedWork.updateQueue=null;var retryCache=finishedWork.stateNode;if(retryCache===null){retryCache=finishedWork.stateNode=new PossiblyWeakSet();}wakeables.forEach(function(wakeable){// Memoize using the boundary fiber to prevent redundant listeners.\nvar retry=resolveRetryWakeable.bind(null,finishedWork,wakeable);if(!retryCache.has(wakeable)){retryCache.add(wakeable);{if(isDevToolsPresent){if(inProgressLanes!==null&&inProgressRoot!==null){// If we have pending work still, associate the original updaters with it.\nrestorePendingUpdaters(inProgressRoot,inProgressLanes);}else{throw Error('Expected finished root and lanes to be set. This is a bug in React.');}}}wakeable.then(retry,retry);}});}}// This function detects when a Suspense boundary goes from visible to hidden.\nfunction commitResetTextContent(current){if(!supportsMutation){return;}resetTextContent(current.stateNode);}function commitMutationEffects(root,firstChild,committedLanes){inProgressLanes=committedLanes;inProgressRoot=root;nextEffect=firstChild;commitMutationEffects_begin(root,committedLanes);inProgressLanes=null;inProgressRoot=null;}function commitMutationEffects_begin(root,lanes){while(nextEffect!==null){var fiber=nextEffect;// TODO: Should wrap this in flags check, too, as optimization\nvar deletions=fiber.deletions;if(deletions!==null){for(var i=0;i<deletions.length;i++){var childToDelete=deletions[i];try{commitDeletion(root,childToDelete,fiber);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(childToDelete,fiber,error);}}}var child=fiber.child;if((fiber.subtreeFlags&MutationMask)!==NoFlags&&child!==null){ensureCorrectReturnPointer(child,fiber);nextEffect=child;}else{commitMutationEffects_complete(root,lanes);}}}function commitMutationEffects_complete(root,lanes){while(nextEffect!==null){var fiber=nextEffect;setCurrentFiber(fiber);try{commitMutationEffectsOnFiber(fiber,root,lanes);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();var sibling=fiber.sibling;if(sibling!==null){ensureCorrectReturnPointer(sibling,fiber.return);nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitMutationEffectsOnFiber(finishedWork,root,lanes){// TODO: The factoring of this phase could probably be improved. Consider\n// switching on the type of work before checking the flags. That's what\n// we do in all the other phases. I think this one is only different\n// because of the shared reconciliation logic below.\nvar flags=finishedWork.flags;if(flags&ContentReset){commitResetTextContent(finishedWork);}if(flags&Ref){var current=finishedWork.alternate;if(current!==null){commitDetachRef(current);}}if(flags&Visibility){switch(finishedWork.tag){case SuspenseComponent:{var newState=finishedWork.memoizedState;var isHidden=newState!==null;if(isHidden){var _current=finishedWork.alternate;var wasHidden=_current!==null&&_current.memoizedState!==null;if(!wasHidden){// TODO: Move to passive phase\nmarkCommitTimeOfFallback();}}break;}case OffscreenComponent:{var _newState=finishedWork.memoizedState;var _isHidden=_newState!==null;var _current2=finishedWork.alternate;var _wasHidden=_current2!==null&&_current2.memoizedState!==null;var offscreenBoundary=finishedWork;if(supportsMutation){// TODO: This needs to run whenever there's an insertion or update\n// inside a hidden Offscreen tree.\nhideOrUnhideAllChildren(offscreenBoundary,_isHidden);}{if(_isHidden){if(!_wasHidden){if((offscreenBoundary.mode&ConcurrentMode)!==NoMode){nextEffect=offscreenBoundary;var offscreenChild=offscreenBoundary.child;while(offscreenChild!==null){nextEffect=offscreenChild;disappearLayoutEffects_begin(offscreenChild);offscreenChild=offscreenChild.sibling;}}}}break;}}}}// The following switch statement is only concerned about placement,\n// updates, and deletions. To avoid needing to add a case for every possible\n// bitmap value, we remove the secondary effects from the effect tag and\n// switch on that value.\nvar primaryFlags=flags&(Placement|Update|Hydrating);switch(primaryFlags){case Placement:{commitPlacement(finishedWork);// Clear the \"placement\" from effect tag so that we know that this is\n// inserted, before any life-cycles like componentDidMount gets called.\n// TODO: findDOMNode doesn't rely on this any more but isMounted does\n// and isMounted is deprecated anyway so we should be able to kill this.\nfinishedWork.flags&=~Placement;break;}case PlacementAndUpdate:{// Placement\ncommitPlacement(finishedWork);// Clear the \"placement\" from effect tag so that we know that this is\n// inserted, before any life-cycles like componentDidMount gets called.\nfinishedWork.flags&=~Placement;// Update\nvar _current3=finishedWork.alternate;commitWork(_current3,finishedWork);break;}case Hydrating:{finishedWork.flags&=~Hydrating;break;}case HydratingAndUpdate:{finishedWork.flags&=~Hydrating;// Update\nvar _current4=finishedWork.alternate;commitWork(_current4,finishedWork);break;}case Update:{var _current5=finishedWork.alternate;commitWork(_current5,finishedWork);break;}}}function commitLayoutEffects(finishedWork,root,committedLanes){inProgressLanes=committedLanes;inProgressRoot=root;nextEffect=finishedWork;commitLayoutEffects_begin(finishedWork,root,committedLanes);inProgressLanes=null;inProgressRoot=null;}function commitLayoutEffects_begin(subtreeRoot,root,committedLanes){// Suspense layout effects semantics don't change for legacy roots.\nvar isModernRoot=(subtreeRoot.mode&ConcurrentMode)!==NoMode;while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if(fiber.tag===OffscreenComponent&&isModernRoot){// Keep track of the current Offscreen stack's state.\nvar isHidden=fiber.memoizedState!==null;var newOffscreenSubtreeIsHidden=isHidden||offscreenSubtreeIsHidden;if(newOffscreenSubtreeIsHidden){// The Offscreen tree is hidden. Skip over its layout effects.\ncommitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);continue;}else{// TODO (Offscreen) Also check: subtreeFlags & LayoutMask\nvar current=fiber.alternate;var wasHidden=current!==null&&current.memoizedState!==null;var newOffscreenSubtreeWasHidden=wasHidden||offscreenSubtreeWasHidden;var prevOffscreenSubtreeIsHidden=offscreenSubtreeIsHidden;var prevOffscreenSubtreeWasHidden=offscreenSubtreeWasHidden;// Traverse the Offscreen subtree with the current Offscreen as the root.\noffscreenSubtreeIsHidden=newOffscreenSubtreeIsHidden;offscreenSubtreeWasHidden=newOffscreenSubtreeWasHidden;if(offscreenSubtreeWasHidden&&!prevOffscreenSubtreeWasHidden){// This is the root of a reappearing boundary. Turn its layout effects\n// back on.\nnextEffect=fiber;reappearLayoutEffects_begin(fiber);}var child=firstChild;while(child!==null){nextEffect=child;commitLayoutEffects_begin(child,// New root; bubble back up to here and stop.\nroot,committedLanes);child=child.sibling;}// Restore Offscreen state and resume in our-progress traversal.\nnextEffect=fiber;offscreenSubtreeIsHidden=prevOffscreenSubtreeIsHidden;offscreenSubtreeWasHidden=prevOffscreenSubtreeWasHidden;commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);continue;}}if((fiber.subtreeFlags&LayoutMask)!==NoFlags&&firstChild!==null){ensureCorrectReturnPointer(firstChild,fiber);nextEffect=firstChild;}else{commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes);}}}function commitLayoutMountEffects_complete(subtreeRoot,root,committedLanes){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&LayoutMask)!==NoFlags){var current=fiber.alternate;setCurrentFiber(fiber);try{commitLayoutEffectOnFiber(root,current,fiber,committedLanes);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();}if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){ensureCorrectReturnPointer(sibling,fiber.return);nextEffect=sibling;return;}nextEffect=fiber.return;}}function disappearLayoutEffects_begin(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;// TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)\nswitch(fiber.tag){case FunctionComponent:case ForwardRef:case MemoComponent:case SimpleMemoComponent:{if(fiber.mode&ProfileMode){try{startLayoutEffectTimer();commitHookEffectListUnmount(Layout,fiber,fiber.return);}finally{recordLayoutEffectDuration(fiber);}}else{commitHookEffectListUnmount(Layout,fiber,fiber.return);}break;}case ClassComponent:{// TODO (Offscreen) Check: flags & RefStatic\nsafelyDetachRef(fiber,fiber.return);var instance=fiber.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(fiber,fiber.return,instance);}break;}case HostComponent:{safelyDetachRef(fiber,fiber.return);break;}case OffscreenComponent:{// Check if this is a\nvar isHidden=fiber.memoizedState!==null;if(isHidden){// Nested Offscreen tree is already hidden. Don't disappear\n// its effects.\ndisappearLayoutEffects_complete(subtreeRoot);continue;}break;}}// TODO (Offscreen) Check: subtreeFlags & LayoutStatic\nif(firstChild!==null){firstChild.return=fiber;nextEffect=firstChild;}else{disappearLayoutEffects_complete(subtreeRoot);}}}function disappearLayoutEffects_complete(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){sibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function reappearLayoutEffects_begin(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if(fiber.tag===OffscreenComponent){var isHidden=fiber.memoizedState!==null;if(isHidden){// Nested Offscreen tree is still hidden. Don't re-appear its effects.\nreappearLayoutEffects_complete(subtreeRoot);continue;}}// TODO (Offscreen) Check: subtreeFlags & LayoutStatic\nif(firstChild!==null){// This node may have been reused from a previous render, so we can't\n// assume its return pointer is correct.\nfirstChild.return=fiber;nextEffect=firstChild;}else{reappearLayoutEffects_complete(subtreeRoot);}}}function reappearLayoutEffects_complete(subtreeRoot){while(nextEffect!==null){var fiber=nextEffect;// TODO (Offscreen) Check: flags & LayoutStatic\nsetCurrentFiber(fiber);try{reappearLayoutEffectsOnFiber(fiber);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){// This node may have been reused from a previous render, so we can't\n// assume its return pointer is correct.\nsibling.return=fiber.return;nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveMountEffects(root,finishedWork){nextEffect=finishedWork;commitPassiveMountEffects_begin(finishedWork,root);}function commitPassiveMountEffects_begin(subtreeRoot,root){while(nextEffect!==null){var fiber=nextEffect;var firstChild=fiber.child;if((fiber.subtreeFlags&PassiveMask)!==NoFlags&&firstChild!==null){ensureCorrectReturnPointer(firstChild,fiber);nextEffect=firstChild;}else{commitPassiveMountEffects_complete(subtreeRoot,root);}}}function commitPassiveMountEffects_complete(subtreeRoot,root){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&Passive)!==NoFlags){setCurrentFiber(fiber);try{commitPassiveMountOnFiber(root,fiber);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}resetCurrentFiber();}if(fiber===subtreeRoot){nextEffect=null;return;}var sibling=fiber.sibling;if(sibling!==null){ensureCorrectReturnPointer(sibling,fiber.return);nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveMountOnFiber(finishedRoot,finishedWork){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(finishedWork.mode&ProfileMode){startPassiveEffectTimer();try{commitHookEffectListMount(Passive$1|HasEffect,finishedWork);}finally{recordPassiveEffectDuration(finishedWork);}}else{commitHookEffectListMount(Passive$1|HasEffect,finishedWork);}break;}}}function commitPassiveUnmountEffects(firstChild){nextEffect=firstChild;commitPassiveUnmountEffects_begin();}function commitPassiveUnmountEffects_begin(){while(nextEffect!==null){var fiber=nextEffect;var child=fiber.child;if((nextEffect.flags&ChildDeletion)!==NoFlags){var deletions=fiber.deletions;if(deletions!==null){for(var i=0;i<deletions.length;i++){var fiberToDelete=deletions[i];nextEffect=fiberToDelete;commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete,fiber);}{// A fiber was deleted from this parent fiber, but it's still part of\n// the previous (alternate) parent fiber's list of children. Because\n// children are a linked list, an earlier sibling that's still alive\n// will be connected to the deleted fiber via its `alternate`:\n//\n//   live fiber\n//   --alternate--> previous live fiber\n//   --sibling--> deleted fiber\n//\n// We can't disconnect `alternate` on nodes that haven't been deleted\n// yet, but we can disconnect the `sibling` and `child` pointers.\nvar previousFiber=fiber.alternate;if(previousFiber!==null){var detachedChild=previousFiber.child;if(detachedChild!==null){previousFiber.child=null;do{var detachedSibling=detachedChild.sibling;detachedChild.sibling=null;detachedChild=detachedSibling;}while(detachedChild!==null);}}}nextEffect=fiber;}}if((fiber.subtreeFlags&PassiveMask)!==NoFlags&&child!==null){ensureCorrectReturnPointer(child,fiber);nextEffect=child;}else{commitPassiveUnmountEffects_complete();}}}function commitPassiveUnmountEffects_complete(){while(nextEffect!==null){var fiber=nextEffect;if((fiber.flags&Passive)!==NoFlags){setCurrentFiber(fiber);commitPassiveUnmountOnFiber(fiber);resetCurrentFiber();}var sibling=fiber.sibling;if(sibling!==null){ensureCorrectReturnPointer(sibling,fiber.return);nextEffect=sibling;return;}nextEffect=fiber.return;}}function commitPassiveUnmountOnFiber(finishedWork){switch(finishedWork.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(finishedWork.mode&ProfileMode){startPassiveEffectTimer();commitHookEffectListUnmount(Passive$1|HasEffect,finishedWork,finishedWork.return);recordPassiveEffectDuration(finishedWork);}else{commitHookEffectListUnmount(Passive$1|HasEffect,finishedWork,finishedWork.return);}break;}}}function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot,nearestMountedAncestor){while(nextEffect!==null){var fiber=nextEffect;// Deletion effects fire in parent -> child order\n// TODO: Check if fiber has a PassiveStatic flag\nsetCurrentFiber(fiber);commitPassiveUnmountInsideDeletedTreeOnFiber(fiber,nearestMountedAncestor);resetCurrentFiber();var child=fiber.child;// TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n// do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\nif(child!==null){ensureCorrectReturnPointer(child,fiber);nextEffect=child;}else{commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);}}}function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot){while(nextEffect!==null){var fiber=nextEffect;var sibling=fiber.sibling;var returnFiber=fiber.return;{// Recursively traverse the entire deleted tree and clean up fiber fields.\n// This is more aggressive than ideal, and the long term goal is to only\n// have to detach the deleted tree at the root.\ndetachFiberAfterEffects(fiber);if(fiber===deletedSubtreeRoot){nextEffect=null;return;}}if(sibling!==null){ensureCorrectReturnPointer(sibling,returnFiber);nextEffect=sibling;return;}nextEffect=returnFiber;}}function commitPassiveUnmountInsideDeletedTreeOnFiber(current,nearestMountedAncestor){switch(current.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{if(current.mode&ProfileMode){startPassiveEffectTimer();commitHookEffectListUnmount(Passive$1,current,nearestMountedAncestor);recordPassiveEffectDuration(current);}else{commitHookEffectListUnmount(Passive$1,current,nearestMountedAncestor);}break;}}}var didWarnWrongReturnPointer=false;function ensureCorrectReturnPointer(fiber,expectedReturnFiber){{if(!didWarnWrongReturnPointer&&fiber.return!==expectedReturnFiber){didWarnWrongReturnPointer=true;error('Internal React error: Return pointer is inconsistent '+'with parent.');}}// TODO: Remove this assignment once we're confident that it won't break\n// anything, by checking the warning logs for the above invariant\nfiber.return=expectedReturnFiber;}// TODO: Reuse reappearLayoutEffects traversal here?\nfunction invokeLayoutEffectMountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.\n// This function is only called if that check has already passed.\nswitch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListMount(Layout|HasEffect,fiber);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}break;}case ClassComponent:{var instance=fiber.stateNode;try{instance.componentDidMount();}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}break;}}}}function invokePassiveEffectMountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.\n// This function is only called if that check has already passed.\nswitch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListMount(Passive$1|HasEffect,fiber);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}break;}}}}function invokeLayoutEffectUnmountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.\n// This function is only called if that check has already passed.\nswitch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListUnmount(Layout|HasEffect,fiber,fiber.return);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}break;}case ClassComponent:{var instance=fiber.stateNode;if(typeof instance.componentWillUnmount==='function'){safelyCallComponentWillUnmount(fiber,fiber.return,instance);}break;}}}}function invokePassiveEffectUnmountInDEV(fiber){{// We don't need to re-check StrictEffectsMode here.\n// This function is only called if that check has already passed.\nswitch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{try{commitHookEffectListUnmount(Passive$1|HasEffect,fiber,fiber.return);}catch(error){reportUncaughtErrorInDEV(error);captureCommitPhaseError(fiber,fiber.return,error);}}}}}var COMPONENT_TYPE=0;var HAS_PSEUDO_CLASS_TYPE=1;var ROLE_TYPE=2;var TEST_NAME_TYPE=3;var TEXT_TYPE=4;if(typeof Symbol==='function'&&Symbol.for){var symbolFor=Symbol.for;COMPONENT_TYPE=symbolFor('selector.component');HAS_PSEUDO_CLASS_TYPE=symbolFor('selector.has_pseudo_class');ROLE_TYPE=symbolFor('selector.role');TEST_NAME_TYPE=symbolFor('selector.test_id');TEXT_TYPE=symbolFor('selector.text');}function createComponentSelector(component){return{$$typeof:COMPONENT_TYPE,value:component};}function createHasPseudoClassSelector(selectors){return{$$typeof:HAS_PSEUDO_CLASS_TYPE,value:selectors};}function createRoleSelector(role){return{$$typeof:ROLE_TYPE,value:role};}function createTextSelector(text){return{$$typeof:TEXT_TYPE,value:text};}function createTestNameSelector(id){return{$$typeof:TEST_NAME_TYPE,value:id};}function findFiberRootForHostRoot(hostRoot){var maybeFiber=getInstanceFromNode(hostRoot);if(maybeFiber!=null){if(typeof maybeFiber.memoizedProps['data-testname']!=='string'){throw new Error('Invalid host root specified. Should be either a React container or a node with a testname attribute.');}return maybeFiber;}else{var fiberRoot=findFiberRoot(hostRoot);if(fiberRoot===null){throw new Error('Could not find React container within specified host subtree.');}// The Flow type for FiberRoot is a little funky.\n// createFiberRoot() cheats this by treating the root as :any and adding stateNode lazily.\nreturn fiberRoot.stateNode.current;}}function matchSelector(fiber,selector){switch(selector.$$typeof){case COMPONENT_TYPE:if(fiber.type===selector.value){return true;}break;case HAS_PSEUDO_CLASS_TYPE:return hasMatchingPaths(fiber,selector.value);case ROLE_TYPE:if(fiber.tag===HostComponent){var node=fiber.stateNode;if(matchAccessibilityRole(node,selector.value)){return true;}}break;case TEXT_TYPE:if(fiber.tag===HostComponent||fiber.tag===HostText){var textContent=getTextContent(fiber);if(textContent!==null&&textContent.indexOf(selector.value)>=0){return true;}}break;case TEST_NAME_TYPE:if(fiber.tag===HostComponent){var dataTestID=fiber.memoizedProps['data-testname'];if(typeof dataTestID==='string'&&dataTestID.toLowerCase()===selector.value.toLowerCase()){return true;}}break;default:throw new Error('Invalid selector type specified.');}return false;}function selectorToString(selector){switch(selector.$$typeof){case COMPONENT_TYPE:var displayName=getComponentNameFromType(selector.value)||'Unknown';return\"<\"+displayName+\">\";case HAS_PSEUDO_CLASS_TYPE:return\":has(\"+(selectorToString(selector)||'')+\")\";case ROLE_TYPE:return\"[role=\\\"\"+selector.value+\"\\\"]\";case TEXT_TYPE:return\"\\\"\"+selector.value+\"\\\"\";case TEST_NAME_TYPE:return\"[data-testname=\\\"\"+selector.value+\"\\\"]\";default:throw new Error('Invalid selector type specified.');}}function findPaths(root,selectors){var matchingFibers=[];var stack=[root,0];var index=0;while(index<stack.length){var fiber=stack[index++];var selectorIndex=stack[index++];var selector=selectors[selectorIndex];if(fiber.tag===HostComponent&&isHiddenSubtree(fiber)){continue;}else{while(selector!=null&&matchSelector(fiber,selector)){selectorIndex++;selector=selectors[selectorIndex];}}if(selectorIndex===selectors.length){matchingFibers.push(fiber);}else{var child=fiber.child;while(child!==null){stack.push(child,selectorIndex);child=child.sibling;}}}return matchingFibers;}// Same as findPaths but with eager bailout on first match\nfunction hasMatchingPaths(root,selectors){var stack=[root,0];var index=0;while(index<stack.length){var fiber=stack[index++];var selectorIndex=stack[index++];var selector=selectors[selectorIndex];if(fiber.tag===HostComponent&&isHiddenSubtree(fiber)){continue;}else{while(selector!=null&&matchSelector(fiber,selector)){selectorIndex++;selector=selectors[selectorIndex];}}if(selectorIndex===selectors.length){return true;}else{var child=fiber.child;while(child!==null){stack.push(child,selectorIndex);child=child.sibling;}}}return false;}function findAllNodes(hostRoot,selectors){if(!supportsTestSelectors){throw new Error('Test selector API is not supported by this renderer.');}var root=findFiberRootForHostRoot(hostRoot);var matchingFibers=findPaths(root,selectors);var instanceRoots=[];var stack=Array.from(matchingFibers);var index=0;while(index<stack.length){var node=stack[index++];if(node.tag===HostComponent){if(isHiddenSubtree(node)){continue;}instanceRoots.push(node.stateNode);}else{var child=node.child;while(child!==null){stack.push(child);child=child.sibling;}}}return instanceRoots;}function getFindAllNodesFailureDescription(hostRoot,selectors){if(!supportsTestSelectors){throw new Error('Test selector API is not supported by this renderer.');}var root=findFiberRootForHostRoot(hostRoot);var maxSelectorIndex=0;var matchedNames=[];// The logic of this loop should be kept in sync with findPaths()\nvar stack=[root,0];var index=0;while(index<stack.length){var fiber=stack[index++];var selectorIndex=stack[index++];var selector=selectors[selectorIndex];if(fiber.tag===HostComponent&&isHiddenSubtree(fiber)){continue;}else if(matchSelector(fiber,selector)){matchedNames.push(selectorToString(selector));selectorIndex++;if(selectorIndex>maxSelectorIndex){maxSelectorIndex=selectorIndex;}}if(selectorIndex<selectors.length){var child=fiber.child;while(child!==null){stack.push(child,selectorIndex);child=child.sibling;}}}if(maxSelectorIndex<selectors.length){var unmatchedNames=[];for(var i=maxSelectorIndex;i<selectors.length;i++){unmatchedNames.push(selectorToString(selectors[i]));}return'findAllNodes was able to match part of the selector:\\n'+(\"  \"+matchedNames.join(' > ')+\"\\n\\n\")+'No matching component was found for:\\n'+(\"  \"+unmatchedNames.join(' > '));}return null;}function findBoundingRects(hostRoot,selectors){if(!supportsTestSelectors){throw new Error('Test selector API is not supported by this renderer.');}var instanceRoots=findAllNodes(hostRoot,selectors);var boundingRects=[];for(var i=0;i<instanceRoots.length;i++){boundingRects.push(getBoundingRect(instanceRoots[i]));}for(var _i=boundingRects.length-1;_i>0;_i--){var targetRect=boundingRects[_i];var targetLeft=targetRect.x;var targetRight=targetLeft+targetRect.width;var targetTop=targetRect.y;var targetBottom=targetTop+targetRect.height;for(var j=_i-1;j>=0;j--){if(_i!==j){var otherRect=boundingRects[j];var otherLeft=otherRect.x;var otherRight=otherLeft+otherRect.width;var otherTop=otherRect.y;var otherBottom=otherTop+otherRect.height;// Merging all rects to the minimums set would be complicated,\n// but we can handle the most common cases:\n// 1. completely overlapping rects\n// 2. adjacent rects that are the same width or height (e.g. items in a list)\n//\n// Even given the above constraints,\n// we still won't end up with the fewest possible rects without doing multiple passes,\n// but it's good enough for this purpose.\nif(targetLeft>=otherLeft&&targetTop>=otherTop&&targetRight<=otherRight&&targetBottom<=otherBottom){// Complete overlapping rects; remove the inner one.\nboundingRects.splice(_i,1);break;}else if(targetLeft===otherLeft&&targetRect.width===otherRect.width&&!(otherBottom<targetTop)&&!(otherTop>targetBottom)){// Adjacent vertical rects; merge them.\nif(otherTop>targetTop){otherRect.height+=otherTop-targetTop;otherRect.y=targetTop;}if(otherBottom<targetBottom){otherRect.height=targetBottom-otherTop;}boundingRects.splice(_i,1);break;}else if(targetTop===otherTop&&targetRect.height===otherRect.height&&!(otherRight<targetLeft)&&!(otherLeft>targetRight)){// Adjacent horizontal rects; merge them.\nif(otherLeft>targetLeft){otherRect.width+=otherLeft-targetLeft;otherRect.x=targetLeft;}if(otherRight<targetRight){otherRect.width=targetRight-otherLeft;}boundingRects.splice(_i,1);break;}}}}return boundingRects;}function focusWithin(hostRoot,selectors){if(!supportsTestSelectors){throw new Error('Test selector API is not supported by this renderer.');}var root=findFiberRootForHostRoot(hostRoot);var matchingFibers=findPaths(root,selectors);var stack=Array.from(matchingFibers);var index=0;while(index<stack.length){var fiber=stack[index++];if(isHiddenSubtree(fiber)){continue;}if(fiber.tag===HostComponent){var node=fiber.stateNode;if(setFocusIfFocusable(node)){return true;}}var child=fiber.child;while(child!==null){stack.push(child);child=child.sibling;}}return false;}var commitHooks=[];function onCommitRoot$1(){if(supportsTestSelectors){commitHooks.forEach(function(commitHook){return commitHook();});}}function observeVisibleRects(hostRoot,selectors,callback,options){if(!supportsTestSelectors){throw new Error('Test selector API is not supported by this renderer.');}var instanceRoots=findAllNodes(hostRoot,selectors);var _setupIntersectionObs=setupIntersectionObserver(instanceRoots,callback,options),disconnect=_setupIntersectionObs.disconnect,observe=_setupIntersectionObs.observe,unobserve=_setupIntersectionObs.unobserve;// When React mutates the host environment, we may need to change what we're listening to.\nvar commitHook=function(){var nextInstanceRoots=findAllNodes(hostRoot,selectors);instanceRoots.forEach(function(target){if(nextInstanceRoots.indexOf(target)<0){unobserve(target);}});nextInstanceRoots.forEach(function(target){if(instanceRoots.indexOf(target)<0){observe(target);}});};commitHooks.push(commitHook);return{disconnect:function(){// Stop listening for React mutations:\nvar index=commitHooks.indexOf(commitHook);if(index>=0){commitHooks.splice(index,1);}// Disconnect the host observer:\ndisconnect();}};}var ReactCurrentActQueue=ReactSharedInternals.ReactCurrentActQueue;function isLegacyActEnvironment(fiber){{// Legacy mode. We preserve the behavior of React 17's act. It assumes an\n// act environment whenever `jest` is defined, but you can still turn off\n// spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n// to false.\nvar isReactActEnvironmentGlobal=// $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\ntypeof IS_REACT_ACT_ENVIRONMENT!=='undefined'?IS_REACT_ACT_ENVIRONMENT:undefined;// $FlowExpectedError - Flow doesn't know about jest\nvar jestIsDefined=typeof jest!=='undefined';return warnsIfNotActing&&jestIsDefined&&isReactActEnvironmentGlobal!==false;}}function isConcurrentActEnvironment(){{var isReactActEnvironmentGlobal=// $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\ntypeof IS_REACT_ACT_ENVIRONMENT!=='undefined'?IS_REACT_ACT_ENVIRONMENT:undefined;if(!isReactActEnvironmentGlobal&&ReactCurrentActQueue.current!==null){// TODO: Include link to relevant documentation page.\nerror('The current testing environment is not configured to support '+'act(...)');}return isReactActEnvironmentGlobal;}}var ceil=Math.ceil;var ReactCurrentDispatcher$2=ReactSharedInternals.ReactCurrentDispatcher,ReactCurrentOwner$2=ReactSharedInternals.ReactCurrentOwner,ReactCurrentBatchConfig$2=ReactSharedInternals.ReactCurrentBatchConfig,ReactCurrentActQueue$1=ReactSharedInternals.ReactCurrentActQueue;var NoContext=/*             */0;var BatchedContext=/*               */1;var RenderContext=/*                */2;var CommitContext=/*                */4;var RootInProgress=0;var RootFatalErrored=1;var RootErrored=2;var RootSuspended=3;var RootSuspendedWithDelay=4;var RootCompleted=5;var RootDidNotComplete=6;// Describes where we are in the React execution stack\nvar executionContext=NoContext;// The root we're working on\nvar workInProgressRoot=null;// The fiber we're working on\nvar workInProgress=null;// The lanes we're rendering\nvar workInProgressRootRenderLanes=NoLanes;// Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\nvar subtreeRenderLanes=NoLanes;var subtreeRenderLanesCursor=createCursor(NoLanes);// Whether to root completed, errored, suspended, etc.\nvar workInProgressRootExitStatus=RootInProgress;// A fatal error, if one is thrown\nvar workInProgressRootFatalError=null;// \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\nvar workInProgressRootIncludedLanes=NoLanes;// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nvar workInProgressRootSkippedLanes=NoLanes;// Lanes that were updated (in an interleaved event) during this render.\nvar workInProgressRootInterleavedUpdatedLanes=NoLanes;// Lanes that were updated during the render phase (*not* an interleaved event).\nvar workInProgressRootPingedLanes=NoLanes;// Errors that are thrown during the render phase.\nvar workInProgressRootConcurrentErrors=null;// These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\nvar workInProgressRootRecoverableErrors=null;// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nvar globalMostRecentFallbackTime=0;var FALLBACK_THROTTLE_MS=500;// The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\nvar workInProgressRootRenderTargetTime=Infinity;// How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\nvar RENDER_TIMEOUT_MS=500;function resetRenderTimer(){workInProgressRootRenderTargetTime=now$1()+RENDER_TIMEOUT_MS;}function getRenderTargetTime(){return workInProgressRootRenderTargetTime;}var hasUncaughtError=false;var firstUncaughtError=null;var legacyErrorBoundariesThatAlreadyFailed=null;// Only used when enableProfilerNestedUpdateScheduledHook is true;\nvar rootDoesHavePassiveEffects=false;var rootWithPendingPassiveEffects=null;var pendingPassiveEffectsLanes=NoLanes;var pendingPassiveProfilerEffects=[];var NESTED_UPDATE_LIMIT=50;var nestedUpdateCount=0;var rootWithNestedUpdates=null;var NESTED_PASSIVE_UPDATE_LIMIT=50;var nestedPassiveUpdateCount=0;// If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\nvar currentEventTime=NoTimestamp;var currentEventTransitionLane=NoLanes;function getWorkInProgressRoot(){return workInProgressRoot;}function requestEventTime(){if((executionContext&(RenderContext|CommitContext))!==NoContext){// We're inside React, so it's fine to read the actual time.\nreturn now$1();}// We're not inside React, so we may be in the middle of a browser event.\nif(currentEventTime!==NoTimestamp){// Use the same start time for all updates until we enter React again.\nreturn currentEventTime;}// This is the first update since React yielded. Compute a new start time.\ncurrentEventTime=now$1();return currentEventTime;}function requestUpdateLane(fiber){// Special cases\nvar mode=fiber.mode;if((mode&ConcurrentMode)===NoMode){return SyncLane;}else if((executionContext&RenderContext)!==NoContext&&workInProgressRootRenderLanes!==NoLanes){// This is a render phase update. These are not officially supported. The\n// old behavior is to give this the same \"thread\" (lanes) as\n// whatever is currently rendering. So if you call `setState` on a component\n// that happens later in the same render, it will flush. Ideally, we want to\n// remove the special case and treat them as if they came from an\n// interleaved event. Regardless, this pattern is not officially supported.\n// This behavior is only a fallback. The flag only exists until we can roll\n// out the setState warning, since existing code might accidentally rely on\n// the current behavior.\nreturn pickArbitraryLane(workInProgressRootRenderLanes);}var isTransition=requestCurrentTransition()!==NoTransition;if(isTransition){if(ReactCurrentBatchConfig$2.transition!==null){var transition=ReactCurrentBatchConfig$2.transition;if(!transition._updatedFibers){transition._updatedFibers=new Set();}transition._updatedFibers.add(fiber);}// The algorithm for assigning an update to a lane should be stable for all\n// updates at the same priority within the same event. To do this, the\n// inputs to the algorithm must be the same.\n//\n// The trick we use is to cache the first of each of these inputs within an\n// event. Then reset the cached values once we can be sure the event is\n// over. Our heuristic for that is whenever we enter a concurrent work loop.\nif(currentEventTransitionLane===NoLane){// All transitions within the same event are assigned the same lane.\ncurrentEventTransitionLane=claimNextTransitionLane();}return currentEventTransitionLane;}// Updates originating inside certain React methods, like flushSync, have\n// their priority set by tracking it with a context variable.\n//\n// The opaque type returned by the host config is internally a lane, so we can\n// use that directly.\n// TODO: Move this type conversion to the event priority module.\nvar updateLane=getCurrentUpdatePriority();if(updateLane!==NoLane){return updateLane;}// This update originated outside React. Ask the host environment for an\n// appropriate priority, based on the type of event.\n//\n// The opaque type returned by the host config is internally a lane, so we can\n// use that directly.\n// TODO: Move this type conversion to the event priority module.\nvar eventLane=getCurrentEventPriority();return eventLane;}function requestRetryLane(fiber){// This is a fork of `requestUpdateLane` designed specifically for Suspense\n// \"retries\" — a special update that attempts to flip a Suspense boundary\n// from its placeholder state to its primary/resolved state.\n// Special cases\nvar mode=fiber.mode;if((mode&ConcurrentMode)===NoMode){return SyncLane;}return claimNextRetryLane();}function scheduleUpdateOnFiber(fiber,lane,eventTime){checkForNestedUpdates();var root=markUpdateLaneFromFiberToRoot(fiber,lane);if(root===null){return null;}// Mark that the root has a pending update.\nmarkRootUpdated(root,lane,eventTime);if((executionContext&RenderContext)!==NoLanes&&root===workInProgressRoot){// This update was dispatched during the render phase. This is a mistake\n// if the update originates from user space (with the exception of local\n// hook updates, which are handled differently and don't reach this\n// function), but there are some internal React features that use this as\n// an implementation detail, like selective hydration.\nwarnAboutRenderPhaseUpdatesInDEV(fiber);// Track lanes that were updated during the render phase\n}else{// This is a normal update, scheduled from outside the render phase. For\n// example, during an input event.\n{if(isDevToolsPresent){addFiberToLanesMap(root,fiber,lane);}}warnIfUpdatesNotWrappedWithActDEV(fiber);if(root===workInProgressRoot){// TODO: Consolidate with `isInterleavedUpdate` check\n// Received an update to a tree that's in the middle of rendering. Mark\n// that there was an interleaved update work on this root. Unless the\n// `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n// phase update. In that case, we don't treat render phase updates as if\n// they were interleaved, for backwards compat reasons.\nif((executionContext&RenderContext)===NoContext){workInProgressRootInterleavedUpdatedLanes=mergeLanes(workInProgressRootInterleavedUpdatedLanes,lane);}if(workInProgressRootExitStatus===RootSuspendedWithDelay){// The root already suspended with a delay, which means this render\n// definitely won't finish. Since we have a new update, let's mark it as\n// suspended now, right before marking the incoming update. This has the\n// effect of interrupting the current render and switching to the update.\n// TODO: Make sure this doesn't override pings that happen while we've\n// already started rendering.\nmarkRootSuspended$1(root,workInProgressRootRenderLanes);}}ensureRootIsScheduled(root,eventTime);if(lane===SyncLane&&executionContext===NoContext&&(fiber.mode&ConcurrentMode)===NoMode&&// Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n!ReactCurrentActQueue$1.isBatchingLegacy){// Flush the synchronous work now, unless we're already working or inside\n// a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n// scheduleCallbackForFiber to preserve the ability to schedule a callback\n// without immediately flushing it. We only do this for user-initiated\n// updates, to preserve historical behavior of legacy mode.\nresetRenderTimer();flushSyncCallbacksOnlyInLegacyMode();}}return root;}function scheduleInitialHydrationOnRoot(root,lane,eventTime){// This is a special fork of scheduleUpdateOnFiber that is only used to\n// schedule the initial hydration of a root that has just been created. Most\n// of the stuff in scheduleUpdateOnFiber can be skipped.\n//\n// The main reason for this separate path, though, is to distinguish the\n// initial children from subsequent updates. In fully client-rendered roots\n// (createRoot instead of hydrateRoot), all top-level renders are modeled as\n// updates, but hydration roots are special because the initial render must\n// match what was rendered on the server.\nvar current=root.current;current.lanes=lane;markRootUpdated(root,lane,eventTime);ensureRootIsScheduled(root,eventTime);}// This is split into a separate function so we can mark a fiber with pending\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\nfunction markUpdateLaneFromFiberToRoot(sourceFiber,lane){// Update the source fiber's lanes\nsourceFiber.lanes=mergeLanes(sourceFiber.lanes,lane);var alternate=sourceFiber.alternate;if(alternate!==null){alternate.lanes=mergeLanes(alternate.lanes,lane);}{if(alternate===null&&(sourceFiber.flags&(Placement|Hydrating))!==NoFlags){warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);}}// Walk the parent path to the root and update the child lanes.\nvar node=sourceFiber;var parent=sourceFiber.return;while(parent!==null){parent.childLanes=mergeLanes(parent.childLanes,lane);alternate=parent.alternate;if(alternate!==null){alternate.childLanes=mergeLanes(alternate.childLanes,lane);}else{{if((parent.flags&(Placement|Hydrating))!==NoFlags){warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);}}}node=parent;parent=parent.return;}if(node.tag===HostRoot){var root=node.stateNode;return root;}else{return null;}}function isInterleavedUpdate(fiber,lane){return(// TODO: Optimize slightly by comparing to root that fiber belongs to.\n// Requires some refactoring. Not a big deal though since it's rare for\n// concurrent apps to have more than a single root.\nworkInProgressRoot!==null&&(fiber.mode&ConcurrentMode)!==NoMode&&// If this is a render phase update (i.e. UNSAFE_componentWillReceiveProps),\n// then don't treat this as an interleaved update. This pattern is\n// accompanied by a warning but we haven't fully deprecated it yet. We can\n// remove once the deferRenderPhaseUpdateToNextBatch flag is enabled.\n(executionContext&RenderContext)===NoContext);}// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\nfunction ensureRootIsScheduled(root,currentTime){var existingCallbackNode=root.callbackNode;// Check if any lanes are being starved by other work. If so, mark them as\n// expired so we know to work on those next.\nmarkStarvedLanesAsExpired(root,currentTime);// Determine the next lanes to work on, and their priority.\nvar nextLanes=getNextLanes(root,root===workInProgressRoot?workInProgressRootRenderLanes:NoLanes);if(nextLanes===NoLanes){// Special case: There's nothing to work on.\nif(existingCallbackNode!==null){cancelCallback$1(existingCallbackNode);}root.callbackNode=null;root.callbackPriority=NoLane;return;}// We use the highest priority lane to represent the priority of the callback.\nvar newCallbackPriority=getHighestPriorityLane(nextLanes);// Check if there's an existing task. We may be able to reuse it.\nvar existingCallbackPriority=root.callbackPriority;if(existingCallbackPriority===newCallbackPriority&&// Special case related to `act`. If the currently scheduled task is a\n// Scheduler task, rather than an `act` task, cancel it and re-scheduled\n// on the `act` queue.\n!(ReactCurrentActQueue$1.current!==null&&existingCallbackNode!==fakeActCallbackNode)){{// If we're going to re-use an existing task, it needs to exist.\n// Assume that discrete update microtasks are non-cancellable and null.\n// TODO: Temporary until we confirm this warning is not fired.\nif(existingCallbackNode==null&&existingCallbackPriority!==SyncLane){error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');}}// The priority hasn't changed. We can reuse the existing task. Exit.\nreturn;}if(existingCallbackNode!=null){// Cancel the existing callback. We'll schedule a new one below.\ncancelCallback$1(existingCallbackNode);}// Schedule a new callback.\nvar newCallbackNode;if(newCallbackPriority===SyncLane){// Special case: Sync React callbacks are scheduled on a special\n// internal queue\nif(root.tag===LegacyRoot){if(ReactCurrentActQueue$1.isBatchingLegacy!==null){ReactCurrentActQueue$1.didScheduleLegacyUpdate=true;}scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null,root));}else{scheduleSyncCallback(performSyncWorkOnRoot.bind(null,root));}if(supportsMicrotasks){// Flush the queue in a microtask.\nif(ReactCurrentActQueue$1.current!==null){// Inside `act`, use our internal `act` queue so that these get flushed\n// at the end of the current scope even when using the sync version\n// of `act`.\nReactCurrentActQueue$1.current.push(flushSyncCallbacks);}else{scheduleMicrotask(function(){// In Safari, appending an iframe forces microtasks to run.\n// https://github.com/facebook/react/issues/22459\n// We don't support running callbacks in the middle of render\n// or commit so we need to check against that.\nif(executionContext===NoContext){// It's only safe to do this conditionally because we always\n// check for pending work before we exit the task.\nflushSyncCallbacks();}});}}else{// Flush the queue in an Immediate task.\nscheduleCallback$1(ImmediatePriority,flushSyncCallbacks);}newCallbackNode=null;}else{var schedulerPriorityLevel;switch(lanesToEventPriority(nextLanes)){case DiscreteEventPriority:schedulerPriorityLevel=ImmediatePriority;break;case ContinuousEventPriority:schedulerPriorityLevel=UserBlockingPriority;break;case DefaultEventPriority:schedulerPriorityLevel=NormalPriority;break;case IdleEventPriority:schedulerPriorityLevel=IdlePriority;break;default:schedulerPriorityLevel=NormalPriority;break;}newCallbackNode=scheduleCallback$1(schedulerPriorityLevel,performConcurrentWorkOnRoot.bind(null,root));}root.callbackPriority=newCallbackPriority;root.callbackNode=newCallbackNode;}// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root,didTimeout){{resetNestedUpdateFlag();}// Since we know we're in a React event, we can clear the current\n// event time. The next update will compute a new event time.\ncurrentEventTime=NoTimestamp;currentEventTransitionLane=NoLanes;if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}// Flush any pending passive effects before deciding which lanes to work on,\n// in case they schedule additional work.\nvar originalCallbackNode=root.callbackNode;var didFlushPassiveEffects=flushPassiveEffects();if(didFlushPassiveEffects){// Something in the passive effect phase may have canceled the current task.\n// Check if the task node for this root was changed.\nif(root.callbackNode!==originalCallbackNode){// The current task was canceled. Exit. We don't need to call\n// `ensureRootIsScheduled` because the check above implies either that\n// there's a new task, or that there's no remaining work on this root.\nreturn null;}}// Determine the next lanes to work on, using the fields stored\n// on the root.\nvar lanes=getNextLanes(root,root===workInProgressRoot?workInProgressRootRenderLanes:NoLanes);if(lanes===NoLanes){// Defensive coding. This is never expected to happen.\nreturn null;}// We disable time-slicing in some cases: if the work has been CPU-bound\n// for too long (\"expired\" work, to prevent starvation), or we're in\n// sync-updates-by-default mode.\n// TODO: We only check `didTimeout` defensively, to account for a Scheduler\n// bug we're still investigating. Once the bug in Scheduler is fixed,\n// we can remove this, since we track expiration ourselves.\nvar shouldTimeSlice=!includesBlockingLane(root,lanes)&&!includesExpiredLane(root,lanes)&&!didTimeout;var exitStatus=shouldTimeSlice?renderRootConcurrent(root,lanes):renderRootSync(root,lanes);if(exitStatus!==RootInProgress){if(exitStatus===RootErrored){// If something threw an error, try rendering one more time. We'll\n// render synchronously to block concurrent data mutations, and we'll\n// includes all pending updates are included. If it still fails after\n// the second attempt, we'll give up and commit the resulting tree.\nvar errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(errorRetryLanes!==NoLanes){lanes=errorRetryLanes;exitStatus=recoverFromConcurrentError(root,errorRetryLanes);}}if(exitStatus===RootFatalErrored){var fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now$1());throw fatalError;}if(exitStatus===RootDidNotComplete){// The render unwound without completing the tree. This happens in special\n// cases where need to exit the current render without producing a\n// consistent tree or committing.\n//\n// This should only happen during a concurrent render, not a discrete or\n// synchronous update. We should have already checked for this when we\n// unwound the stack.\nmarkRootSuspended$1(root,lanes);}else{// The render completed.\n// Check if this render may have yielded to a concurrent event, and if so,\n// confirm that any newly rendered stores are consistent.\n// TODO: It's possible that even a concurrent render may never have yielded\n// to the main thread, if it was fast enough, or if it expired. We could\n// skip the consistency check in that case, too.\nvar renderWasConcurrent=!includesBlockingLane(root,lanes);var finishedWork=root.current.alternate;if(renderWasConcurrent&&!isRenderConsistentWithExternalStores(finishedWork)){// A store was mutated in an interleaved event. Render again,\n// synchronously, to block further mutations.\nexitStatus=renderRootSync(root,lanes);// We need to check again if something threw\nif(exitStatus===RootErrored){var _errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(_errorRetryLanes!==NoLanes){lanes=_errorRetryLanes;exitStatus=recoverFromConcurrentError(root,_errorRetryLanes);// We assume the tree is now consistent because we didn't yield to any\n// concurrent events.\n}}if(exitStatus===RootFatalErrored){var _fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now$1());throw _fatalError;}}// We now have a consistent tree. The next step is either to commit it,\n// or, if something suspended, wait to commit it after a timeout.\nroot.finishedWork=finishedWork;root.finishedLanes=lanes;finishConcurrentRender(root,exitStatus,lanes);}}ensureRootIsScheduled(root,now$1());if(root.callbackNode===originalCallbackNode){// The task node scheduled for this root is the same one that's\n// currently executed. Need to return a continuation.\nreturn performConcurrentWorkOnRoot.bind(null,root);}return null;}function recoverFromConcurrentError(root,errorRetryLanes){// If an error occurred during hydration, discard server response and fall\n// back to client side render.\n// Before rendering again, save the errors from the previous attempt.\nvar errorsFromFirstAttempt=workInProgressRootConcurrentErrors;if(isRootDehydrated(root)){// The shell failed to hydrate. Set a flag to force a client rendering\n// during the next attempt. To do this, we call prepareFreshStack now\n// to create the root work-in-progress fiber. This is a bit weird in terms\n// of factoring, because it relies on renderRootSync not calling\n// prepareFreshStack again in the call below, which happens because the\n// root and lanes haven't changed.\n//\n// TODO: I think what we should do is set ForceClientRender inside\n// throwException, like we do for nested Suspense boundaries. The reason\n// it's here instead is so we can switch to the synchronous work loop, too.\n// Something to consider for a future refactor.\nvar rootWorkInProgress=prepareFreshStack(root,errorRetryLanes);rootWorkInProgress.flags|=ForceClientRender;{errorHydratingContainer(root.containerInfo);}}var exitStatus=renderRootSync(root,errorRetryLanes);if(exitStatus!==RootErrored){// Successfully finished rendering on retry\n// The errors from the failed first attempt have been recovered. Add\n// them to the collection of recoverable errors. We'll log them in the\n// commit phase.\nvar errorsFromSecondAttempt=workInProgressRootRecoverableErrors;workInProgressRootRecoverableErrors=errorsFromFirstAttempt;// The errors from the second attempt should be queued after the errors\n// from the first attempt, to preserve the causal sequence.\nif(errorsFromSecondAttempt!==null){queueRecoverableErrors(errorsFromSecondAttempt);}}return exitStatus;}function queueRecoverableErrors(errors){if(workInProgressRootRecoverableErrors===null){workInProgressRootRecoverableErrors=errors;}else{workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors,errors);}}function finishConcurrentRender(root,exitStatus,lanes){switch(exitStatus){case RootInProgress:case RootFatalErrored:{throw new Error('Root did not complete. This is a bug in React.');}// Flow knows about invariant, so it complains if I add a break\n// statement, but eslint doesn't know about invariant, so it complains\n// if I do. eslint-disable-next-line no-fallthrough\ncase RootErrored:{// We should have already attempted to retry this tree. If we reached\n// this point, it errored again. Commit it.\ncommitRoot(root,workInProgressRootRecoverableErrors);break;}case RootSuspended:{markRootSuspended$1(root,lanes);// We have an acceptable loading state. We need to figure out if we\n// should immediately commit it or wait a bit.\nif(includesOnlyRetries(lanes)&&// do not delay if we're inside an act() scope\n!shouldForceFlushFallbacksInDEV()){// This render only included retries, no updates. Throttle committing\n// retries so that we don't show too many loading states too quickly.\nvar msUntilTimeout=globalMostRecentFallbackTime+FALLBACK_THROTTLE_MS-now$1();// Don't bother with a very short suspense time.\nif(msUntilTimeout>10){var nextLanes=getNextLanes(root,NoLanes);if(nextLanes!==NoLanes){// There's additional work on this root.\nbreak;}var suspendedLanes=root.suspendedLanes;if(!isSubsetOfLanes(suspendedLanes,lanes)){// We should prefer to render the fallback of at the last\n// suspended level. Ping the last suspended level to try\n// rendering it again.\n// FIXME: What if the suspended lanes are Idle? Should not restart.\nvar eventTime=requestEventTime();markRootPinged(root,suspendedLanes);break;}// The render is suspended, it hasn't timed out, and there's no\n// lower priority work to do. Instead of committing the fallback\n// immediately, wait for more data to arrive.\nroot.timeoutHandle=scheduleTimeout(commitRoot.bind(null,root,workInProgressRootRecoverableErrors),msUntilTimeout);break;}}// The work expired. Commit immediately.\ncommitRoot(root,workInProgressRootRecoverableErrors);break;}case RootSuspendedWithDelay:{markRootSuspended$1(root,lanes);if(includesOnlyTransitions(lanes)){// This is a transition, so we should exit without committing a\n// placeholder and without scheduling a timeout. Delay indefinitely\n// until we receive more data.\nbreak;}if(!shouldForceFlushFallbacksInDEV()){// This is not a transition, but we did trigger an avoided state.\n// Schedule a placeholder to display after a short delay, using the Just\n// Noticeable Difference.\n// TODO: Is the JND optimization worth the added complexity? If this is\n// the only reason we track the event time, then probably not.\n// Consider removing.\nvar mostRecentEventTime=getMostRecentEventTime(root,lanes);var eventTimeMs=mostRecentEventTime;var timeElapsedMs=now$1()-eventTimeMs;var _msUntilTimeout=jnd(timeElapsedMs)-timeElapsedMs;// Don't bother with a very short suspense time.\nif(_msUntilTimeout>10){// Instead of committing the fallback immediately, wait for more data\n// to arrive.\nroot.timeoutHandle=scheduleTimeout(commitRoot.bind(null,root,workInProgressRootRecoverableErrors),_msUntilTimeout);break;}}// Commit the placeholder.\ncommitRoot(root,workInProgressRootRecoverableErrors);break;}case RootCompleted:{// The work completed. Ready to commit.\ncommitRoot(root,workInProgressRootRecoverableErrors);break;}default:{throw new Error('Unknown root exit status.');}}}function isRenderConsistentWithExternalStores(finishedWork){// Search the rendered tree for external store reads, and check whether the\n// stores were mutated in a concurrent event. Intentionally using an iterative\n// loop instead of recursion so we can exit early.\nvar node=finishedWork;while(true){if(node.flags&StoreConsistency){var updateQueue=node.updateQueue;if(updateQueue!==null){var checks=updateQueue.stores;if(checks!==null){for(var i=0;i<checks.length;i++){var check=checks[i];var getSnapshot=check.getSnapshot;var renderedValue=check.value;try{if(!objectIs(getSnapshot(),renderedValue)){// Found an inconsistent store.\nreturn false;}}catch(error){// If `getSnapshot` throws, return `false`. This will schedule\n// a re-render, and the error will be rethrown during render.\nreturn false;}}}}}var child=node.child;if(node.subtreeFlags&StoreConsistency&&child!==null){child.return=node;node=child;continue;}if(node===finishedWork){return true;}while(node.sibling===null){if(node.return===null||node.return===finishedWork){return true;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}// Flow doesn't know this is unreachable, but eslint does\n// eslint-disable-next-line no-unreachable\nreturn true;}function markRootSuspended$1(root,suspendedLanes){// When suspending, we should always exclude lanes that were pinged or (more\n// rarely, since we try to avoid it) updated during the render phase.\n// TODO: Lol maybe there's a better way to factor this besides this\n// obnoxiously named function :)\nsuspendedLanes=removeLanes(suspendedLanes,workInProgressRootPingedLanes);suspendedLanes=removeLanes(suspendedLanes,workInProgressRootInterleavedUpdatedLanes);markRootSuspended(root,suspendedLanes);}// This is the entry point for synchronous tasks that don't go\n// through Scheduler\nfunction performSyncWorkOnRoot(root){{syncNestedUpdateFlag();}if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}flushPassiveEffects();var lanes=getNextLanes(root,NoLanes);if(!includesSomeLane(lanes,SyncLane)){// There's no remaining sync work left.\nensureRootIsScheduled(root,now$1());return null;}var exitStatus=renderRootSync(root,lanes);if(root.tag!==LegacyRoot&&exitStatus===RootErrored){// If something threw an error, try rendering one more time. We'll render\n// synchronously to block concurrent data mutations, and we'll includes\n// all pending updates are included. If it still fails after the second\n// attempt, we'll give up and commit the resulting tree.\nvar errorRetryLanes=getLanesToRetrySynchronouslyOnError(root);if(errorRetryLanes!==NoLanes){lanes=errorRetryLanes;exitStatus=recoverFromConcurrentError(root,errorRetryLanes);}}if(exitStatus===RootFatalErrored){var fatalError=workInProgressRootFatalError;prepareFreshStack(root,NoLanes);markRootSuspended$1(root,lanes);ensureRootIsScheduled(root,now$1());throw fatalError;}if(exitStatus===RootDidNotComplete){throw new Error('Root did not complete. This is a bug in React.');}// We now have a consistent tree. Because this is a sync render, we\n// will commit it even if something suspended.\nvar finishedWork=root.current.alternate;root.finishedWork=finishedWork;root.finishedLanes=lanes;commitRoot(root,workInProgressRootRecoverableErrors);// Before exiting, make sure there's a callback scheduled for the next\n// pending level.\nensureRootIsScheduled(root,now$1());return null;}function flushRoot(root,lanes){if(lanes!==NoLanes){markRootEntangled(root,mergeLanes(lanes,SyncLane));ensureRootIsScheduled(root,now$1());if((executionContext&(RenderContext|CommitContext))===NoContext){resetRenderTimer();flushSyncCallbacks();}}}function deferredUpdates(fn){var previousPriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig$2.transition;try{ReactCurrentBatchConfig$2.transition=null;setCurrentUpdatePriority(DefaultEventPriority);return fn();}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$2.transition=prevTransition;}}function batchedUpdates(fn,a){var prevExecutionContext=executionContext;executionContext|=BatchedContext;try{return fn(a);}finally{executionContext=prevExecutionContext;// If there were legacy sync updates, flush them at the end of the outer\n// most batchedUpdates-like method.\nif(executionContext===NoContext&&// Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n!ReactCurrentActQueue$1.isBatchingLegacy){resetRenderTimer();flushSyncCallbacksOnlyInLegacyMode();}}}function discreteUpdates(fn,a,b,c,d){var previousPriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig$2.transition;try{ReactCurrentBatchConfig$2.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);return fn(a,b,c,d);}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$2.transition=prevTransition;if(executionContext===NoContext){resetRenderTimer();}}}// Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\n// eslint-disable-next-line no-redeclare\nfunction flushSync(fn){// In legacy mode, we flush pending passive effects at the beginning of the\n// next event, not at the end of the previous one.\nif(rootWithPendingPassiveEffects!==null&&rootWithPendingPassiveEffects.tag===LegacyRoot&&(executionContext&(RenderContext|CommitContext))===NoContext){flushPassiveEffects();}var prevExecutionContext=executionContext;executionContext|=BatchedContext;var prevTransition=ReactCurrentBatchConfig$2.transition;var previousPriority=getCurrentUpdatePriority();try{ReactCurrentBatchConfig$2.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);if(fn){return fn();}else{return undefined;}}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$2.transition=prevTransition;executionContext=prevExecutionContext;// Flush the immediate callbacks that were scheduled during this batch.\n// Note that this will happen even if batchedUpdates is higher up\n// the stack.\nif((executionContext&(RenderContext|CommitContext))===NoContext){flushSyncCallbacks();}}}function isAlreadyRendering(){// Used by the renderer to print a warning if certain APIs are called from\n// the wrong context.\nreturn(executionContext&(RenderContext|CommitContext))!==NoContext;}function flushControlled(fn){var prevExecutionContext=executionContext;executionContext|=BatchedContext;var prevTransition=ReactCurrentBatchConfig$2.transition;var previousPriority=getCurrentUpdatePriority();try{ReactCurrentBatchConfig$2.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);fn();}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$2.transition=prevTransition;executionContext=prevExecutionContext;if(executionContext===NoContext){// Flush the immediate callbacks that were scheduled during this batch\nresetRenderTimer();flushSyncCallbacks();}}}function pushRenderLanes(fiber,lanes){push(subtreeRenderLanesCursor,subtreeRenderLanes,fiber);subtreeRenderLanes=mergeLanes(subtreeRenderLanes,lanes);workInProgressRootIncludedLanes=mergeLanes(workInProgressRootIncludedLanes,lanes);}function popRenderLanes(fiber){subtreeRenderLanes=subtreeRenderLanesCursor.current;pop(subtreeRenderLanesCursor,fiber);}function prepareFreshStack(root,lanes){root.finishedWork=null;root.finishedLanes=NoLanes;var timeoutHandle=root.timeoutHandle;if(timeoutHandle!==noTimeout){// The root previous suspended and scheduled a timeout to commit a fallback\n// state. Now that we have additional work, cancel the timeout.\nroot.timeoutHandle=noTimeout;// $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\ncancelTimeout(timeoutHandle);}if(workInProgress!==null){var interruptedWork=workInProgress.return;while(interruptedWork!==null){var current=interruptedWork.alternate;unwindInterruptedWork(current,interruptedWork);interruptedWork=interruptedWork.return;}}workInProgressRoot=root;var rootWorkInProgress=createWorkInProgress(root.current,null);workInProgress=rootWorkInProgress;workInProgressRootRenderLanes=subtreeRenderLanes=workInProgressRootIncludedLanes=lanes;workInProgressRootExitStatus=RootInProgress;workInProgressRootFatalError=null;workInProgressRootSkippedLanes=NoLanes;workInProgressRootInterleavedUpdatedLanes=NoLanes;workInProgressRootPingedLanes=NoLanes;workInProgressRootConcurrentErrors=null;workInProgressRootRecoverableErrors=null;enqueueInterleavedUpdates();{ReactStrictModeWarnings.discardPendingWarnings();}return rootWorkInProgress;}function handleError(root,thrownValue){do{var erroredWork=workInProgress;try{// Reset module-level state that was set during the render phase.\nresetContextDependencies();resetHooksAfterThrow();resetCurrentFiber();// TODO: I found and added this missing line while investigating a\n// separate issue. Write a regression test using string refs.\nReactCurrentOwner$2.current=null;if(erroredWork===null||erroredWork.return===null){// Expected to be working on a non-root fiber. This is a fatal error\n// because there's no ancestor that can handle it; the root is\n// supposed to capture all errors that weren't caught by an error\n// boundary.\nworkInProgressRootExitStatus=RootFatalErrored;workInProgressRootFatalError=thrownValue;// Set `workInProgress` to null. This represents advancing to the next\n// sibling, or the parent if there are no siblings. But since the root\n// has no siblings nor a parent, we set it to null. Usually this is\n// handled by `completeUnitOfWork` or `unwindWork`, but since we're\n// intentionally not calling those, we need set it here.\n// TODO: Consider calling `unwindWork` to pop the contexts.\nworkInProgress=null;return;}if(enableProfilerTimer&&erroredWork.mode&ProfileMode){// Record the time spent rendering before an error was thrown. This\n// avoids inaccurate Profiler durations in the case of a\n// suspended render.\nstopProfilerTimerIfRunningAndRecordDelta(erroredWork,true);}if(enableSchedulingProfiler){markComponentRenderStopped();if(thrownValue!==null&&typeof thrownValue==='object'&&typeof thrownValue.then==='function'){var wakeable=thrownValue;markComponentSuspended(erroredWork,wakeable,workInProgressRootRenderLanes);}else{markComponentErrored(erroredWork,thrownValue,workInProgressRootRenderLanes);}}throwException(root,erroredWork.return,erroredWork,thrownValue,workInProgressRootRenderLanes);completeUnitOfWork(erroredWork);}catch(yetAnotherThrownValue){// Something in the return path also threw.\nthrownValue=yetAnotherThrownValue;if(workInProgress===erroredWork&&erroredWork!==null){// If this boundary has already errored, then we had trouble processing\n// the error. Bubble it to the next boundary.\nerroredWork=erroredWork.return;workInProgress=erroredWork;}else{erroredWork=workInProgress;}continue;}// Return to the normal work loop.\nreturn;}while(true);}function pushDispatcher(){var prevDispatcher=ReactCurrentDispatcher$2.current;ReactCurrentDispatcher$2.current=ContextOnlyDispatcher;if(prevDispatcher===null){// The React isomorphic package does not include a default dispatcher.\n// Instead the first renderer will lazily attach one, in order to give\n// nicer error messages.\nreturn ContextOnlyDispatcher;}else{return prevDispatcher;}}function popDispatcher(prevDispatcher){ReactCurrentDispatcher$2.current=prevDispatcher;}function markCommitTimeOfFallback(){globalMostRecentFallbackTime=now$1();}function markSkippedUpdateLanes(lane){workInProgressRootSkippedLanes=mergeLanes(lane,workInProgressRootSkippedLanes);}function renderDidSuspend(){if(workInProgressRootExitStatus===RootInProgress){workInProgressRootExitStatus=RootSuspended;}}function renderDidSuspendDelayIfPossible(){if(workInProgressRootExitStatus===RootInProgress||workInProgressRootExitStatus===RootSuspended||workInProgressRootExitStatus===RootErrored){workInProgressRootExitStatus=RootSuspendedWithDelay;}// Check if there are updates that we skipped tree that might have unblocked\n// this render.\nif(workInProgressRoot!==null&&(includesNonIdleWork(workInProgressRootSkippedLanes)||includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))){// Mark the current render as suspended so that we switch to working on\n// the updates that were skipped. Usually we only suspend at the end of\n// the render phase.\n// TODO: We should probably always mark the root as suspended immediately\n// (inside this function), since by suspending at the end of the render\n// phase introduces a potential mistake where we suspend lanes that were\n// pinged or updated while we were rendering.\nmarkRootSuspended$1(workInProgressRoot,workInProgressRootRenderLanes);}}function renderDidError(error){if(workInProgressRootExitStatus!==RootSuspendedWithDelay){workInProgressRootExitStatus=RootErrored;}if(workInProgressRootConcurrentErrors===null){workInProgressRootConcurrentErrors=[error];}else{workInProgressRootConcurrentErrors.push(error);}}// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nfunction renderHasNotSuspendedYet(){// If something errored or completed, we can't really be sure,\n// so those are false.\nreturn workInProgressRootExitStatus===RootInProgress;}function renderRootSync(root,lanes){var prevExecutionContext=executionContext;executionContext|=RenderContext;var prevDispatcher=pushDispatcher();// If the root or lanes have changed, throw out the existing stack\n// and prepare a fresh one. Otherwise we'll continue where we left off.\nif(workInProgressRoot!==root||workInProgressRootRenderLanes!==lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;if(memoizedUpdaters.size>0){restorePendingUpdaters(root,workInProgressRootRenderLanes);memoizedUpdaters.clear();}// At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n// If we bailout on this work, we'll move them back (like above).\n// It's important to move them now in case the work spawns more work at the same priority with different updaters.\n// That way we can keep the current update and future updates separate.\nmovePendingFibersToMemoized(root,lanes);}}prepareFreshStack(root,lanes);}{markRenderStarted(lanes);}do{try{workLoopSync();break;}catch(thrownValue){handleError(root,thrownValue);}}while(true);resetContextDependencies();executionContext=prevExecutionContext;popDispatcher(prevDispatcher);if(workInProgress!==null){// This is a sync render, so we should have finished the whole tree.\nthrow new Error('Cannot commit an incomplete root. This error is likely caused by a '+'bug in React. Please file an issue.');}{markRenderStopped();}// Set this to null to indicate there's no in-progress render.\nworkInProgressRoot=null;workInProgressRootRenderLanes=NoLanes;return workInProgressRootExitStatus;}// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */function workLoopSync(){// Already timed out, so perform work without checking if we need to yield.\nwhile(workInProgress!==null){performUnitOfWork(workInProgress);}}function renderRootConcurrent(root,lanes){var prevExecutionContext=executionContext;executionContext|=RenderContext;var prevDispatcher=pushDispatcher();// If the root or lanes have changed, throw out the existing stack\n// and prepare a fresh one. Otherwise we'll continue where we left off.\nif(workInProgressRoot!==root||workInProgressRootRenderLanes!==lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;if(memoizedUpdaters.size>0){restorePendingUpdaters(root,workInProgressRootRenderLanes);memoizedUpdaters.clear();}// At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n// If we bailout on this work, we'll move them back (like above).\n// It's important to move them now in case the work spawns more work at the same priority with different updaters.\n// That way we can keep the current update and future updates separate.\nmovePendingFibersToMemoized(root,lanes);}}resetRenderTimer();prepareFreshStack(root,lanes);}{markRenderStarted(lanes);}do{try{workLoopConcurrent();break;}catch(thrownValue){handleError(root,thrownValue);}}while(true);resetContextDependencies();popDispatcher(prevDispatcher);executionContext=prevExecutionContext;if(workInProgress!==null){// Still work remaining.\n{markRenderYielded();}return RootInProgress;}else{// Completed the tree.\n{markRenderStopped();}// Set this to null to indicate there's no in-progress render.\nworkInProgressRoot=null;workInProgressRootRenderLanes=NoLanes;// Return the final exit status.\nreturn workInProgressRootExitStatus;}}/** @noinline */function workLoopConcurrent(){// Perform work until Scheduler asks us to yield\nwhile(workInProgress!==null&&!shouldYield()){performUnitOfWork(workInProgress);}}function performUnitOfWork(unitOfWork){// The current, flushed, state of this fiber is the alternate. Ideally\n// nothing should rely on this, but relying on it here means that we don't\n// need an additional field on the work in progress.\nvar current=unitOfWork.alternate;setCurrentFiber(unitOfWork);var next;if((unitOfWork.mode&ProfileMode)!==NoMode){startProfilerTimer(unitOfWork);next=beginWork$1(current,unitOfWork,subtreeRenderLanes);stopProfilerTimerIfRunningAndRecordDelta(unitOfWork,true);}else{next=beginWork$1(current,unitOfWork,subtreeRenderLanes);}resetCurrentFiber();unitOfWork.memoizedProps=unitOfWork.pendingProps;if(next===null){// If this doesn't spawn new work, complete the current work.\ncompleteUnitOfWork(unitOfWork);}else{workInProgress=next;}ReactCurrentOwner$2.current=null;}function completeUnitOfWork(unitOfWork){// Attempt to complete the current unit of work, then move to the next\n// sibling. If there are no more siblings, return to the parent fiber.\nvar completedWork=unitOfWork;do{// The current, flushed, state of this fiber is the alternate. Ideally\n// nothing should rely on this, but relying on it here means that we don't\n// need an additional field on the work in progress.\nvar current=completedWork.alternate;var returnFiber=completedWork.return;// Check if the work completed or if something threw.\nif((completedWork.flags&Incomplete)===NoFlags){setCurrentFiber(completedWork);var next=void 0;if((completedWork.mode&ProfileMode)===NoMode){next=completeWork(current,completedWork,subtreeRenderLanes);}else{startProfilerTimer(completedWork);next=completeWork(current,completedWork,subtreeRenderLanes);// Update render duration assuming we didn't error.\nstopProfilerTimerIfRunningAndRecordDelta(completedWork,false);}resetCurrentFiber();if(next!==null){// Completing this fiber spawned new work. Work on that next.\nworkInProgress=next;return;}}else{// This fiber did not complete because something threw. Pop values off\n// the stack without entering the complete phase. If this is a boundary,\n// capture values if possible.\nvar _next=unwindWork(current,completedWork);// Because this fiber did not complete, don't reset its lanes.\nif(_next!==null){// If completing this work spawned new work, do that next. We'll come\n// back here again.\n// Since we're restarting, remove anything that is not a host effect\n// from the effect tag.\n_next.flags&=HostEffectMask;workInProgress=_next;return;}if((completedWork.mode&ProfileMode)!==NoMode){// Record the render duration for the fiber that errored.\nstopProfilerTimerIfRunningAndRecordDelta(completedWork,false);// Include the time spent working on failed children before continuing.\nvar actualDuration=completedWork.actualDuration;var child=completedWork.child;while(child!==null){actualDuration+=child.actualDuration;child=child.sibling;}completedWork.actualDuration=actualDuration;}if(returnFiber!==null){// Mark the parent fiber as incomplete and clear its subtree flags.\nreturnFiber.flags|=Incomplete;returnFiber.subtreeFlags=NoFlags;returnFiber.deletions=null;}else{// We've unwound all the way to the root.\nworkInProgressRootExitStatus=RootDidNotComplete;workInProgress=null;return;}}var siblingFiber=completedWork.sibling;if(siblingFiber!==null){// If there is more work to do in this returnFiber, do that next.\nworkInProgress=siblingFiber;return;}// Otherwise, return to the parent\ncompletedWork=returnFiber;// Update the next thing we're working on in case something throws.\nworkInProgress=completedWork;}while(completedWork!==null);// We've reached the root.\nif(workInProgressRootExitStatus===RootInProgress){workInProgressRootExitStatus=RootCompleted;}}function commitRoot(root,recoverableErrors){// TODO: This no longer makes any sense. We already wrap the mutation and\n// layout phases. Should be able to remove.\nvar previousUpdateLanePriority=getCurrentUpdatePriority();var prevTransition=ReactCurrentBatchConfig$2.transition;try{ReactCurrentBatchConfig$2.transition=null;setCurrentUpdatePriority(DiscreteEventPriority);commitRootImpl(root,recoverableErrors,previousUpdateLanePriority);}finally{ReactCurrentBatchConfig$2.transition=prevTransition;setCurrentUpdatePriority(previousUpdateLanePriority);}return null;}function commitRootImpl(root,recoverableErrors,renderPriorityLevel){do{// `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n// means `flushPassiveEffects` will sometimes result in additional\n// passive effects. So we need to keep flushing in a loop until there are\n// no more pending effects.\n// TODO: Might be better if `flushPassiveEffects` did not automatically\n// flush synchronous work at the end, to avoid factoring hazards like this.\nflushPassiveEffects();}while(rootWithPendingPassiveEffects!==null);flushRenderPhaseStrictModeWarningsInDEV();if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Should not already be working.');}var finishedWork=root.finishedWork;var lanes=root.finishedLanes;{markCommitStarted(lanes);}if(finishedWork===null){{markCommitStopped();}return null;}else{{if(lanes===NoLanes){error('root.finishedLanes should not be empty during a commit. This is a '+'bug in React.');}}}root.finishedWork=null;root.finishedLanes=NoLanes;if(finishedWork===root.current){throw new Error('Cannot commit the same tree as before. This error is likely caused by '+'a bug in React. Please file an issue.');}// commitRoot never returns a continuation; it always finishes synchronously.\n// So we can clear these now to allow a new callback to be scheduled.\nroot.callbackNode=null;root.callbackPriority=NoLane;// Update the first and last pending times on this root. The new first\n// pending time is whatever is left on the root fiber.\nvar remainingLanes=mergeLanes(finishedWork.lanes,finishedWork.childLanes);markRootFinished(root,remainingLanes);if(root===workInProgressRoot){// We can reset these now that they are finished.\nworkInProgressRoot=null;workInProgress=null;workInProgressRootRenderLanes=NoLanes;}// If there are pending passive effects, schedule a callback to process them.\n// Do this as early as possible, so it is queued before anything else that\n// might get scheduled in the commit phase. (See #16714.)\n// TODO: Delete all other places that schedule the passive effect callback\n// They're redundant.\nif((finishedWork.subtreeFlags&PassiveMask)!==NoFlags||(finishedWork.flags&PassiveMask)!==NoFlags){if(!rootDoesHavePassiveEffects){rootDoesHavePassiveEffects=true;scheduleCallback$1(NormalPriority,function(){flushPassiveEffects();// This render triggered passive effects: release the root cache pool\n// *after* passive effects fire to avoid freeing a cache pool that may\n// be referenced by a node in the tree (HostRoot, Cache boundary etc)\nreturn null;});}}// Check if there are any effects in the whole tree.\n// TODO: This is left over from the effect list implementation, where we had\n// to check for the existence of `firstEffect` to satisfy Flow. I think the\n// only other reason this optimization exists is because it affects profiling.\n// Reconsider whether this is necessary.\nvar subtreeHasEffects=(finishedWork.subtreeFlags&(BeforeMutationMask|MutationMask|LayoutMask|PassiveMask))!==NoFlags;var rootHasEffect=(finishedWork.flags&(BeforeMutationMask|MutationMask|LayoutMask|PassiveMask))!==NoFlags;if(subtreeHasEffects||rootHasEffect){var prevTransition=ReactCurrentBatchConfig$2.transition;ReactCurrentBatchConfig$2.transition=null;var previousPriority=getCurrentUpdatePriority();setCurrentUpdatePriority(DiscreteEventPriority);var prevExecutionContext=executionContext;executionContext|=CommitContext;// Reset this to null before calling lifecycles\nReactCurrentOwner$2.current=null;// The commit phase is broken into several sub-phases. We do a separate pass\n// of the effect list for each phase: all mutation effects come before all\n// layout effects, and so on.\n// The first phase a \"before mutation\" phase. We use this phase to read the\n// state of the host tree right before we mutate it. This is where\n// getSnapshotBeforeUpdate is called.\nvar shouldFireAfterActiveInstanceBlur=commitBeforeMutationEffects(root,finishedWork);{// Mark the current commit time to be shared by all Profilers in this\n// batch. This enables them to be grouped later.\nrecordCommitTime();}commitMutationEffects(root,finishedWork,lanes);resetAfterCommit(root.containerInfo);// The work-in-progress tree is now the current tree. This must come after\n// the mutation phase, so that the previous tree is still current during\n// componentWillUnmount, but before the layout phase, so that the finished\n// work is current during componentDidMount/Update.\nroot.current=finishedWork;// The next phase is the layout phase, where we call effects that read\n{markLayoutEffectsStarted(lanes);}commitLayoutEffects(finishedWork,root,lanes);{markLayoutEffectsStopped();}// opportunity to paint.\nrequestPaint();executionContext=prevExecutionContext;// Reset the priority to the previous non-sync value.\nsetCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$2.transition=prevTransition;}else{// No effects.\nroot.current=finishedWork;// Measure these anyway so the flamegraph explicitly shows that there were\n// no effects.\n// TODO: Maybe there's a better way to report this.\n{recordCommitTime();}}var rootDidHavePassiveEffects=rootDoesHavePassiveEffects;if(rootDoesHavePassiveEffects){// This commit has passive effects. Stash a reference to them. But don't\n// schedule a callback until after flushing layout work.\nrootDoesHavePassiveEffects=false;rootWithPendingPassiveEffects=root;pendingPassiveEffectsLanes=lanes;}// Read this again, since an effect might have updated it\nremainingLanes=root.pendingLanes;// Check if there's remaining work on this root\n// TODO: This is part of the `componentDidCatch` implementation. Its purpose\n// is to detect whether something might have called setState inside\n// `componentDidCatch`. The mechanism is known to be flawed because `setState`\n// inside `componentDidCatch` is itself flawed — that's why we recommend\n// `getDerivedStateFromError` instead. However, it could be improved by\n// checking if remainingLanes includes Sync work, instead of whether there's\n// any work remaining at all (which would also include stuff like Suspense\n// retries or transitions). It's been like this for a while, though, so fixing\n// it probably isn't that urgent.\nif(remainingLanes===NoLanes){// If there's no remaining work, we can clear the set of already failed\n// error boundaries.\nlegacyErrorBoundariesThatAlreadyFailed=null;}{if(!rootDidHavePassiveEffects){commitDoubleInvokeEffectsInDEV(root.current,false);}}onCommitRoot(finishedWork.stateNode,renderPriorityLevel);{if(isDevToolsPresent){root.memoizedUpdaters.clear();}}{onCommitRoot$1();}// Always call this before exiting `commitRoot`, to ensure that any\n// additional work on this root is scheduled.\nensureRootIsScheduled(root,now$1());if(recoverableErrors!==null){// There were errors during this render, but recovered from them without\n// needing to surface it to the UI. We log them here.\nvar onRecoverableError=root.onRecoverableError;for(var i=0;i<recoverableErrors.length;i++){var recoverableError=recoverableErrors[i];onRecoverableError(recoverableError);}}if(hasUncaughtError){hasUncaughtError=false;var error$1=firstUncaughtError;firstUncaughtError=null;throw error$1;}// If the passive effects are the result of a discrete render, flush them\n// synchronously at the end of the current task so that the result is\n// immediately observable. Otherwise, we assume that they are not\n// order-dependent and do not need to be observed by external systems, so we\n// can wait until after paint.\n// TODO: We can optimize this by not scheduling the callback earlier. Since we\n// currently schedule the callback in multiple places, will wait until those\n// are consolidated.\nif(includesSomeLane(pendingPassiveEffectsLanes,SyncLane)&&root.tag!==LegacyRoot){flushPassiveEffects();}// Read this again, since a passive effect might have updated it\nremainingLanes=root.pendingLanes;if(includesSomeLane(remainingLanes,SyncLane)){{markNestedUpdateScheduled();}// Count the number of times the root synchronously re-renders without\n// finishing. If there are too many, it indicates an infinite update loop.\nif(root===rootWithNestedUpdates){nestedUpdateCount++;}else{nestedUpdateCount=0;rootWithNestedUpdates=root;}}else{nestedUpdateCount=0;}// If layout work was scheduled, flush it now.\nflushSyncCallbacks();{markCommitStopped();}return null;}function flushPassiveEffects(){// Returns whether passive effects were flushed.\n// TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n// probably just combine the two functions. I believe they were only separate\n// in the first place because we used to wrap it with\n// `Scheduler.runWithPriority`, which accepts a function. But now we track the\n// priority within React itself, so we can mutate the variable directly.\nif(rootWithPendingPassiveEffects!==null){var renderPriority=lanesToEventPriority(pendingPassiveEffectsLanes);var priority=lowerEventPriority(DefaultEventPriority,renderPriority);var prevTransition=ReactCurrentBatchConfig$2.transition;var previousPriority=getCurrentUpdatePriority();try{ReactCurrentBatchConfig$2.transition=null;setCurrentUpdatePriority(priority);return flushPassiveEffectsImpl();}finally{setCurrentUpdatePriority(previousPriority);ReactCurrentBatchConfig$2.transition=prevTransition;// Once passive effects have run for the tree - giving components a\n}}return false;}function enqueuePendingPassiveProfilerEffect(fiber){{pendingPassiveProfilerEffects.push(fiber);if(!rootDoesHavePassiveEffects){rootDoesHavePassiveEffects=true;scheduleCallback$1(NormalPriority,function(){flushPassiveEffects();return null;});}}}function flushPassiveEffectsImpl(){if(rootWithPendingPassiveEffects===null){return false;}var root=rootWithPendingPassiveEffects;var lanes=pendingPassiveEffectsLanes;rootWithPendingPassiveEffects=null;// TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n// Figure out why and fix it. It's not causing any known issues (probably\n// because it's only used for profiling), but it's a refactor hazard.\npendingPassiveEffectsLanes=NoLanes;if((executionContext&(RenderContext|CommitContext))!==NoContext){throw new Error('Cannot flush passive effects while already rendering.');}{markPassiveEffectsStarted(lanes);}var prevExecutionContext=executionContext;executionContext|=CommitContext;commitPassiveUnmountEffects(root.current);commitPassiveMountEffects(root,root.current);// TODO: Move to commitPassiveMountEffects\n{var profilerEffects=pendingPassiveProfilerEffects;pendingPassiveProfilerEffects=[];for(var i=0;i<profilerEffects.length;i++){var _fiber=profilerEffects[i];commitPassiveEffectDurations(root,_fiber);}}{markPassiveEffectsStopped();}{commitDoubleInvokeEffectsInDEV(root.current,true);}executionContext=prevExecutionContext;flushSyncCallbacks();// If additional passive effects were scheduled, increment a counter. If this\n// exceeds the limit, we'll fire a warning.\nnestedPassiveUpdateCount=rootWithPendingPassiveEffects===null?0:nestedPassiveUpdateCount+1;// TODO: Move to commitPassiveMountEffects\nonPostCommitRoot(root);{var stateNode=root.current.stateNode;stateNode.effectDuration=0;stateNode.passiveEffectDuration=0;}return true;}function isAlreadyFailedLegacyErrorBoundary(instance){return legacyErrorBoundariesThatAlreadyFailed!==null&&legacyErrorBoundariesThatAlreadyFailed.has(instance);}function markLegacyErrorBoundaryAsFailed(instance){if(legacyErrorBoundariesThatAlreadyFailed===null){legacyErrorBoundariesThatAlreadyFailed=new Set([instance]);}else{legacyErrorBoundariesThatAlreadyFailed.add(instance);}}function prepareToThrowUncaughtError(error){if(!hasUncaughtError){hasUncaughtError=true;firstUncaughtError=error;}}var onUncaughtError=prepareToThrowUncaughtError;function captureCommitPhaseErrorOnRoot(rootFiber,sourceFiber,error){var errorInfo=createCapturedValue(error,sourceFiber);var update=createRootErrorUpdate(rootFiber,errorInfo,SyncLane);enqueueUpdate(rootFiber,update);var eventTime=requestEventTime();var root=markUpdateLaneFromFiberToRoot(rootFiber,SyncLane);if(root!==null){markRootUpdated(root,SyncLane,eventTime);ensureRootIsScheduled(root,eventTime);}}function captureCommitPhaseError(sourceFiber,nearestMountedAncestor,error$1){if(sourceFiber.tag===HostRoot){// Error was thrown at the root. There is no parent, so the root\n// itself should capture it.\ncaptureCommitPhaseErrorOnRoot(sourceFiber,sourceFiber,error$1);return;}var fiber=null;{fiber=nearestMountedAncestor;}while(fiber!==null){if(fiber.tag===HostRoot){captureCommitPhaseErrorOnRoot(fiber,sourceFiber,error$1);return;}else if(fiber.tag===ClassComponent){var ctor=fiber.type;var instance=fiber.stateNode;if(typeof ctor.getDerivedStateFromError==='function'||typeof instance.componentDidCatch==='function'&&!isAlreadyFailedLegacyErrorBoundary(instance)){var errorInfo=createCapturedValue(error$1,sourceFiber);var update=createClassErrorUpdate(fiber,errorInfo,SyncLane);enqueueUpdate(fiber,update);var eventTime=requestEventTime();var root=markUpdateLaneFromFiberToRoot(fiber,SyncLane);if(root!==null){markRootUpdated(root,SyncLane,eventTime);ensureRootIsScheduled(root,eventTime);}return;}}fiber=fiber.return;}{// TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n// will fire for errors that are thrown by destroy functions inside deleted\n// trees. What it should instead do is propagate the error to the parent of\n// the deleted tree. In the meantime, do not add this warning to the\n// allowlist; this is only for our internal use.\nerror('Internal React error: Attempted to capture a commit phase error '+'inside a detached tree. This indicates a bug in React. Likely '+'causes include deleting the same fiber more than once, committing an '+'already-finished tree, or an inconsistent return pointer.\\n\\n'+'Error message:\\n\\n%s',error$1);}}function pingSuspendedRoot(root,wakeable,pingedLanes){var pingCache=root.pingCache;if(pingCache!==null){// The wakeable resolved, so we no longer need to memoize, because it will\n// never be thrown again.\npingCache.delete(wakeable);}var eventTime=requestEventTime();markRootPinged(root,pingedLanes);warnIfSuspenseResolutionNotWrappedWithActDEV(root);if(workInProgressRoot===root&&isSubsetOfLanes(workInProgressRootRenderLanes,pingedLanes)){// Received a ping at the same priority level at which we're currently\n// rendering. We might want to restart this render. This should mirror\n// the logic of whether or not a root suspends once it completes.\n// TODO: If we're rendering sync either due to Sync, Batched or expired,\n// we should probably never restart.\n// If we're suspended with delay, or if it's a retry, we'll always suspend\n// so we can always restart.\nif(workInProgressRootExitStatus===RootSuspendedWithDelay||workInProgressRootExitStatus===RootSuspended&&includesOnlyRetries(workInProgressRootRenderLanes)&&now$1()-globalMostRecentFallbackTime<FALLBACK_THROTTLE_MS){// Restart from the root.\nprepareFreshStack(root,NoLanes);}else{// Even though we can't restart right now, we might get an\n// opportunity later. So we mark this render as having a ping.\nworkInProgressRootPingedLanes=mergeLanes(workInProgressRootPingedLanes,pingedLanes);}}ensureRootIsScheduled(root,eventTime);}function retryTimedOutBoundary(boundaryFiber,retryLane){// The boundary fiber (a Suspense component or SuspenseList component)\n// previously was rendered in its fallback state. One of the promises that\n// suspended it has resolved, which means at least part of the tree was\n// likely unblocked. Try rendering again, at a new lanes.\nif(retryLane===NoLane){// TODO: Assign this to `suspenseState.retryLane`? to avoid\n// unnecessary entanglement?\nretryLane=requestRetryLane(boundaryFiber);}// TODO: Special case idle priority?\nvar eventTime=requestEventTime();var root=markUpdateLaneFromFiberToRoot(boundaryFiber,retryLane);if(root!==null){markRootUpdated(root,retryLane,eventTime);ensureRootIsScheduled(root,eventTime);}}function retryDehydratedSuspenseBoundary(boundaryFiber){var suspenseState=boundaryFiber.memoizedState;var retryLane=NoLane;if(suspenseState!==null){retryLane=suspenseState.retryLane;}retryTimedOutBoundary(boundaryFiber,retryLane);}function resolveRetryWakeable(boundaryFiber,wakeable){var retryLane=NoLane;// Default\nvar retryCache;{switch(boundaryFiber.tag){case SuspenseComponent:retryCache=boundaryFiber.stateNode;var suspenseState=boundaryFiber.memoizedState;if(suspenseState!==null){retryLane=suspenseState.retryLane;}break;case SuspenseListComponent:retryCache=boundaryFiber.stateNode;break;default:throw new Error('Pinged unknown suspense boundary type. '+'This is probably a bug in React.');}}if(retryCache!==null){// The wakeable resolved, so we no longer need to memoize, because it will\n// never be thrown again.\nretryCache.delete(wakeable);}retryTimedOutBoundary(boundaryFiber,retryLane);}// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed){return timeElapsed<120?120:timeElapsed<480?480:timeElapsed<1080?1080:timeElapsed<1920?1920:timeElapsed<3000?3000:timeElapsed<4320?4320:ceil(timeElapsed/1960)*1960;}function checkForNestedUpdates(){if(nestedUpdateCount>NESTED_UPDATE_LIMIT){nestedUpdateCount=0;rootWithNestedUpdates=null;throw new Error('Maximum update depth exceeded. This can happen when a component '+'repeatedly calls setState inside componentWillUpdate or '+'componentDidUpdate. React limits the number of nested updates to '+'prevent infinite loops.');}{if(nestedPassiveUpdateCount>NESTED_PASSIVE_UPDATE_LIMIT){nestedPassiveUpdateCount=0;error('Maximum update depth exceeded. This can happen when a component '+\"calls setState inside useEffect, but useEffect either doesn't \"+'have a dependency array, or one of the dependencies changes on '+'every render.');}}}function flushRenderPhaseStrictModeWarningsInDEV(){{ReactStrictModeWarnings.flushLegacyContextWarning();{ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();}}}function commitDoubleInvokeEffectsInDEV(fiber,hasPassiveEffects){{// TODO (StrictEffects) Should we set a marker on the root if it contains strict effects\n// so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.\n// Maybe not a big deal since this is DEV only behavior.\nsetCurrentFiber(fiber);invokeEffectsInDev(fiber,MountLayoutDev,invokeLayoutEffectUnmountInDEV);if(hasPassiveEffects){invokeEffectsInDev(fiber,MountPassiveDev,invokePassiveEffectUnmountInDEV);}invokeEffectsInDev(fiber,MountLayoutDev,invokeLayoutEffectMountInDEV);if(hasPassiveEffects){invokeEffectsInDev(fiber,MountPassiveDev,invokePassiveEffectMountInDEV);}resetCurrentFiber();}}function invokeEffectsInDev(firstChild,fiberFlags,invokeEffectFn){{// We don't need to re-check StrictEffectsMode here.\n// This function is only called if that check has already passed.\nvar current=firstChild;var subtreeRoot=null;while(current!==null){var primarySubtreeFlag=current.subtreeFlags&fiberFlags;if(current!==subtreeRoot&&current.child!==null&&primarySubtreeFlag!==NoFlags){current=current.child;}else{if((current.flags&fiberFlags)!==NoFlags){invokeEffectFn(current);}if(current.sibling!==null){current=current.sibling;}else{current=subtreeRoot=current.return;}}}}}var didWarnStateUpdateForNotYetMountedComponent=null;function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber){{if((executionContext&RenderContext)!==NoContext){// We let the other warning about render phase updates deal with this one.\nreturn;}if(!(fiber.mode&ConcurrentMode)){return;}var tag=fiber.tag;if(tag!==IndeterminateComponent&&tag!==HostRoot&&tag!==ClassComponent&&tag!==FunctionComponent&&tag!==ForwardRef&&tag!==MemoComponent&&tag!==SimpleMemoComponent){// Only warn for user-defined components, not internal ones like Suspense.\nreturn;}// We show the whole stack but dedupe on the top component's name because\n// the problematic code almost always lies inside that component.\nvar componentName=getComponentNameFromFiber(fiber)||'ReactComponent';if(didWarnStateUpdateForNotYetMountedComponent!==null){if(didWarnStateUpdateForNotYetMountedComponent.has(componentName)){return;}didWarnStateUpdateForNotYetMountedComponent.add(componentName);}else{didWarnStateUpdateForNotYetMountedComponent=new Set([componentName]);}var previousFiber=current;try{setCurrentFiber(fiber);error(\"Can't perform a React state update on a component that hasn't mounted yet. \"+'This indicates that you have a side-effect in your render function that '+'asynchronously later calls tries to update the component. Move this work to '+'useEffect instead.');}finally{if(previousFiber){setCurrentFiber(fiber);}else{resetCurrentFiber();}}}}var beginWork$1;{var dummyFiber=null;beginWork$1=function(current,unitOfWork,lanes){// If a component throws an error, we replay it again in a synchronously\n// dispatched event, so that the debugger will treat it as an uncaught\n// error See ReactErrorUtils for more information.\n// Before entering the begin phase, copy the work-in-progress onto a dummy\n// fiber. If beginWork throws, we'll use this to reset the state.\nvar originalWorkInProgressCopy=assignFiberPropertiesInDEV(dummyFiber,unitOfWork);try{return beginWork(current,unitOfWork,lanes);}catch(originalError){if(originalError!==null&&typeof originalError==='object'&&typeof originalError.then==='function'){// Don't replay promises. Treat everything else like an error.\nthrow originalError;}// Keep this code in sync with handleError; any changes here must have\n// corresponding changes there.\nresetContextDependencies();resetHooksAfterThrow();// Don't reset current debug fiber, since we're about to work on the\n// same fiber again.\n// Unwind the failed stack frame\nunwindInterruptedWork(current,unitOfWork);// Restore the original properties of the fiber.\nassignFiberPropertiesInDEV(unitOfWork,originalWorkInProgressCopy);if(unitOfWork.mode&ProfileMode){// Reset the profiler timer.\nstartProfilerTimer(unitOfWork);}// Run beginWork again.\ninvokeGuardedCallback(null,beginWork,null,current,unitOfWork,lanes);if(hasCaughtError()){var replayError=clearCaughtError();if(typeof replayError==='object'&&replayError!==null&&replayError._suppressLogging&&typeof originalError==='object'&&originalError!==null&&!originalError._suppressLogging){// If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\noriginalError._suppressLogging=true;}}// We always throw the original error in case the second render pass is not idempotent.\n// This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\nthrow originalError;}};}var didWarnAboutUpdateInRender=false;var didWarnAboutUpdateInRenderForAnotherComponent;{didWarnAboutUpdateInRenderForAnotherComponent=new Set();}function warnAboutRenderPhaseUpdatesInDEV(fiber){{if(isRendering&&!getIsUpdatingOpaqueValueInRenderPhaseInDEV()){switch(fiber.tag){case FunctionComponent:case ForwardRef:case SimpleMemoComponent:{var renderingComponentName=workInProgress&&getComponentNameFromFiber(workInProgress)||'Unknown';// Dedupe by the rendering component because it's the one that needs to be fixed.\nvar dedupeKey=renderingComponentName;if(!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)){didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);var setStateComponentName=getComponentNameFromFiber(fiber)||'Unknown';error('Cannot update a component (`%s`) while rendering a '+'different component (`%s`). To locate the bad setState() call inside `%s`, '+'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',setStateComponentName,renderingComponentName,renderingComponentName);}break;}case ClassComponent:{if(!didWarnAboutUpdateInRender){error('Cannot update during an existing state transition (such as '+'within `render`). Render methods should be a pure '+'function of props and state.');didWarnAboutUpdateInRender=true;}break;}}}}}function restorePendingUpdaters(root,lanes){{if(isDevToolsPresent){var memoizedUpdaters=root.memoizedUpdaters;memoizedUpdaters.forEach(function(schedulingFiber){addFiberToLanesMap(root,schedulingFiber,lanes);});// This function intentionally does not clear memoized updaters.\n// Those may still be relevant to the current commit\n// and a future one (e.g. Suspense).\n}}}var fakeActCallbackNode={};function scheduleCallback$1(priorityLevel,callback){{// If we're currently inside an `act` scope, bypass Scheduler and push to\n// the `act` queue instead.\nvar actQueue=ReactCurrentActQueue$1.current;if(actQueue!==null){actQueue.push(callback);return fakeActCallbackNode;}else{return scheduleCallback(priorityLevel,callback);}}}function cancelCallback$1(callbackNode){if(callbackNode===fakeActCallbackNode){return;}// In production, always call Scheduler. This function will be stripped out.\nreturn cancelCallback(callbackNode);}function shouldForceFlushFallbacksInDEV(){// Never force flush in production. This function should get stripped out.\nreturn ReactCurrentActQueue$1.current!==null;}function warnIfUpdatesNotWrappedWithActDEV(fiber){{if(fiber.mode&ConcurrentMode){if(!isConcurrentActEnvironment()){// Not in an act environment. No need to warn.\nreturn;}}else{// Legacy mode has additional cases where we suppress a warning.\nif(!isLegacyActEnvironment()){// Not in an act environment. No need to warn.\nreturn;}if(executionContext!==NoContext){// Legacy mode doesn't warn if the update is batched, i.e.\n// batchedUpdates or flushSync.\nreturn;}if(fiber.tag!==FunctionComponent&&fiber.tag!==ForwardRef&&fiber.tag!==SimpleMemoComponent){// For backwards compatibility with pre-hooks code, legacy mode only\n// warns for updates that originate from a hook.\nreturn;}}if(ReactCurrentActQueue$1.current===null){var previousFiber=current;try{setCurrentFiber(fiber);error('An update to %s inside a test was not wrapped in act(...).\\n\\n'+'When testing, code that causes React state updates should be '+'wrapped into act(...):\\n\\n'+'act(() => {\\n'+'  /* fire events that update state */\\n'+'});\\n'+'/* assert on the output */\\n\\n'+\"This ensures that you're testing the behavior the user would see \"+'in the browser.'+' Learn more at https://reactjs.org/link/wrap-tests-with-act',getComponentNameFromFiber(fiber));}finally{if(previousFiber){setCurrentFiber(fiber);}else{resetCurrentFiber();}}}}}function warnIfSuspenseResolutionNotWrappedWithActDEV(root){{if(root.tag!==LegacyRoot&&isConcurrentActEnvironment()&&ReactCurrentActQueue$1.current===null){error('A suspended resource finished loading inside a test, but the event '+'was not wrapped in act(...).\\n\\n'+'When testing, code that resolves suspended data should be wrapped '+'into act(...):\\n\\n'+'act(() => {\\n'+'  /* finish loading suspended data */\\n'+'});\\n'+'/* assert on the output */\\n\\n'+\"This ensures that you're testing the behavior the user would see \"+'in the browser.'+' Learn more at https://reactjs.org/link/wrap-tests-with-act');}}}/* eslint-disable react-internal/prod-error-codes */var resolveFamily=null;// $FlowFixMe Flow gets confused by a WeakSet feature check below.\nvar failedBoundaries=null;var setRefreshHandler=function(handler){{resolveFamily=handler;}};function resolveFunctionForHotReloading(type){{if(resolveFamily===null){// Hot reloading is disabled.\nreturn type;}var family=resolveFamily(type);if(family===undefined){return type;}// Use the latest known implementation.\nreturn family.current;}}function resolveClassForHotReloading(type){// No implementation differences.\nreturn resolveFunctionForHotReloading(type);}function resolveForwardRefForHotReloading(type){{if(resolveFamily===null){// Hot reloading is disabled.\nreturn type;}var family=resolveFamily(type);if(family===undefined){// Check if we're dealing with a real forwardRef. Don't want to crash early.\nif(type!==null&&type!==undefined&&typeof type.render==='function'){// ForwardRef is special because its resolved .type is an object,\n// but it's possible that we only have its inner render function in the map.\n// If that inner render function is different, we'll build a new forwardRef type.\nvar currentRender=resolveFunctionForHotReloading(type.render);if(type.render!==currentRender){var syntheticType={$$typeof:REACT_FORWARD_REF_TYPE,render:currentRender};if(type.displayName!==undefined){syntheticType.displayName=type.displayName;}return syntheticType;}}return type;}// Use the latest known implementation.\nreturn family.current;}}function isCompatibleFamilyForHotReloading(fiber,element){{if(resolveFamily===null){// Hot reloading is disabled.\nreturn false;}var prevType=fiber.elementType;var nextType=element.type;// If we got here, we know types aren't === equal.\nvar needsCompareFamilies=false;var $$typeofNextType=typeof nextType==='object'&&nextType!==null?nextType.$$typeof:null;switch(fiber.tag){case ClassComponent:{if(typeof nextType==='function'){needsCompareFamilies=true;}break;}case FunctionComponent:{if(typeof nextType==='function'){needsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){// We don't know the inner type yet.\n// We're going to assume that the lazy inner type is stable,\n// and so it is sufficient to avoid reconciling it away.\n// We're not going to unwrap or actually use the new lazy type.\nneedsCompareFamilies=true;}break;}case ForwardRef:{if($$typeofNextType===REACT_FORWARD_REF_TYPE){needsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){needsCompareFamilies=true;}break;}case MemoComponent:case SimpleMemoComponent:{if($$typeofNextType===REACT_MEMO_TYPE){// TODO: if it was but can no longer be simple,\n// we shouldn't set this.\nneedsCompareFamilies=true;}else if($$typeofNextType===REACT_LAZY_TYPE){needsCompareFamilies=true;}break;}default:return false;}// Check if both types have a family and it's the same one.\nif(needsCompareFamilies){// Note: memo() and forwardRef() we'll compare outer rather than inner type.\n// This means both of them need to be registered to preserve state.\n// If we unwrapped and compared the inner types for wrappers instead,\n// then we would risk falsely saying two separate memo(Foo)\n// calls are equivalent because they wrap the same Foo function.\nvar prevFamily=resolveFamily(prevType);if(prevFamily!==undefined&&prevFamily===resolveFamily(nextType)){return true;}}return false;}}function markFailedErrorBoundaryForHotReloading(fiber){{if(resolveFamily===null){// Hot reloading is disabled.\nreturn;}if(typeof WeakSet!=='function'){return;}if(failedBoundaries===null){failedBoundaries=new WeakSet();}failedBoundaries.add(fiber);}}var scheduleRefresh=function(root,update){{if(resolveFamily===null){// Hot reloading is disabled.\nreturn;}var staleFamilies=update.staleFamilies,updatedFamilies=update.updatedFamilies;flushPassiveEffects();flushSync(function(){scheduleFibersWithFamiliesRecursively(root.current,updatedFamilies,staleFamilies);});}};var scheduleRoot=function(root,element){{if(root.context!==emptyContextObject){// Super edge case: root has a legacy _renderSubtree context\n// but we don't know the parentComponent so we can't pass it.\n// Just ignore. We'll delete this with _renderSubtree code path later.\nreturn;}flushPassiveEffects();flushSync(function(){updateContainer(element,root,null,null);});}};function scheduleFibersWithFamiliesRecursively(fiber,updatedFamilies,staleFamilies){{var alternate=fiber.alternate,child=fiber.child,sibling=fiber.sibling,tag=fiber.tag,type=fiber.type;var candidateType=null;switch(tag){case FunctionComponent:case SimpleMemoComponent:case ClassComponent:candidateType=type;break;case ForwardRef:candidateType=type.render;break;}if(resolveFamily===null){throw new Error('Expected resolveFamily to be set during hot reload.');}var needsRender=false;var needsRemount=false;if(candidateType!==null){var family=resolveFamily(candidateType);if(family!==undefined){if(staleFamilies.has(family)){needsRemount=true;}else if(updatedFamilies.has(family)){if(tag===ClassComponent){needsRemount=true;}else{needsRender=true;}}}}if(failedBoundaries!==null){if(failedBoundaries.has(fiber)||alternate!==null&&failedBoundaries.has(alternate)){needsRemount=true;}}if(needsRemount){fiber._debugNeedsRemount=true;}if(needsRemount||needsRender){scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);}if(child!==null&&!needsRemount){scheduleFibersWithFamiliesRecursively(child,updatedFamilies,staleFamilies);}if(sibling!==null){scheduleFibersWithFamiliesRecursively(sibling,updatedFamilies,staleFamilies);}}}var findHostInstancesForRefresh=function(root,families){{var hostInstances=new Set();var types=new Set(families.map(function(family){return family.current;}));findHostInstancesForMatchingFibersRecursively(root.current,types,hostInstances);return hostInstances;}};function findHostInstancesForMatchingFibersRecursively(fiber,types,hostInstances){{var child=fiber.child,sibling=fiber.sibling,tag=fiber.tag,type=fiber.type;var candidateType=null;switch(tag){case FunctionComponent:case SimpleMemoComponent:case ClassComponent:candidateType=type;break;case ForwardRef:candidateType=type.render;break;}var didMatch=false;if(candidateType!==null){if(types.has(candidateType)){didMatch=true;}}if(didMatch){// We have a match. This only drills down to the closest host components.\n// There's no need to search deeper because for the purpose of giving\n// visual feedback, \"flashing\" outermost parent rectangles is sufficient.\nfindHostInstancesForFiberShallowly(fiber,hostInstances);}else{// If there's no match, maybe there will be one further down in the child tree.\nif(child!==null){findHostInstancesForMatchingFibersRecursively(child,types,hostInstances);}}if(sibling!==null){findHostInstancesForMatchingFibersRecursively(sibling,types,hostInstances);}}}function findHostInstancesForFiberShallowly(fiber,hostInstances){{var foundHostInstances=findChildHostInstancesForFiberShallowly(fiber,hostInstances);if(foundHostInstances){return;}// If we didn't find any host children, fallback to closest host parent.\nvar node=fiber;while(true){switch(node.tag){case HostComponent:hostInstances.add(node.stateNode);return;case HostPortal:hostInstances.add(node.stateNode.containerInfo);return;case HostRoot:hostInstances.add(node.stateNode.containerInfo);return;}if(node.return===null){throw new Error('Expected to reach root first.');}node=node.return;}}}function findChildHostInstancesForFiberShallowly(fiber,hostInstances){{var node=fiber;var foundHostInstances=false;while(true){if(node.tag===HostComponent){// We got a match.\nfoundHostInstances=true;hostInstances.add(node.stateNode);// There may still be more, so keep searching.\n}else if(node.child!==null){node.child.return=node;node=node.child;continue;}if(node===fiber){return foundHostInstances;}while(node.sibling===null){if(node.return===null||node.return===fiber){return foundHostInstances;}node=node.return;}node.sibling.return=node.return;node=node.sibling;}}return false;}var hasBadMapPolyfill;{hasBadMapPolyfill=false;try{var nonExtensibleObject=Object.preventExtensions({});/* eslint-disable no-new */new Map([[nonExtensibleObject,null]]);new Set([nonExtensibleObject]);/* eslint-enable no-new */}catch(e){// TODO: Consider warning about bad polyfills\nhasBadMapPolyfill=true;}}function FiberNode(tag,pendingProps,key,mode){// Instance\nthis.tag=tag;this.key=key;this.elementType=null;this.type=null;this.stateNode=null;// Fiber\nthis.return=null;this.child=null;this.sibling=null;this.index=0;this.ref=null;this.pendingProps=pendingProps;this.memoizedProps=null;this.updateQueue=null;this.memoizedState=null;this.dependencies=null;this.mode=mode;// Effects\nthis.flags=NoFlags;this.subtreeFlags=NoFlags;this.deletions=null;this.lanes=NoLanes;this.childLanes=NoLanes;this.alternate=null;{// Note: The following is done to avoid a v8 performance cliff.\n//\n// Initializing the fields below to smis and later updating them with\n// double values will cause Fibers to end up having separate shapes.\n// This behavior/bug has something to do with Object.preventExtension().\n// Fortunately this only impacts DEV builds.\n// Unfortunately it makes React unusably slow for some applications.\n// To work around this, initialize the fields below with doubles.\n//\n// Learn more about this here:\n// https://github.com/facebook/react/issues/14365\n// https://bugs.chromium.org/p/v8/issues/detail?id=8538\nthis.actualDuration=Number.NaN;this.actualStartTime=Number.NaN;this.selfBaseDuration=Number.NaN;this.treeBaseDuration=Number.NaN;// It's okay to replace the initial doubles with smis after initialization.\n// This won't trigger the performance cliff mentioned above,\n// and it simplifies other profiler code (including DevTools).\nthis.actualDuration=0;this.actualStartTime=-1;this.selfBaseDuration=0;this.treeBaseDuration=0;}{// This isn't directly used but is handy for debugging internals:\nthis._debugSource=null;this._debugOwner=null;this._debugNeedsRemount=false;this._debugHookTypes=null;if(!hasBadMapPolyfill&&typeof Object.preventExtensions==='function'){Object.preventExtensions(this);}}}// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nvar createFiber=function(tag,pendingProps,key,mode){// $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\nreturn new FiberNode(tag,pendingProps,key,mode);};function shouldConstruct$1(Component){var prototype=Component.prototype;return!!(prototype&&prototype.isReactComponent);}function isSimpleFunctionComponent(type){return typeof type==='function'&&!shouldConstruct$1(type)&&type.defaultProps===undefined;}function resolveLazyComponentTag(Component){if(typeof Component==='function'){return shouldConstruct$1(Component)?ClassComponent:FunctionComponent;}else if(Component!==undefined&&Component!==null){var $$typeof=Component.$$typeof;if($$typeof===REACT_FORWARD_REF_TYPE){return ForwardRef;}if($$typeof===REACT_MEMO_TYPE){return MemoComponent;}}return IndeterminateComponent;}// This is used to create an alternate fiber to do work on.\nfunction createWorkInProgress(current,pendingProps){var workInProgress=current.alternate;if(workInProgress===null){// We use a double buffering pooling technique because we know that we'll\n// only ever need at most two versions of a tree. We pool the \"other\" unused\n// node that we're free to reuse. This is lazily created to avoid allocating\n// extra objects for things that are never updated. It also allow us to\n// reclaim the extra memory if needed.\nworkInProgress=createFiber(current.tag,pendingProps,current.key,current.mode);workInProgress.elementType=current.elementType;workInProgress.type=current.type;workInProgress.stateNode=current.stateNode;{// DEV-only fields\nworkInProgress._debugSource=current._debugSource;workInProgress._debugOwner=current._debugOwner;workInProgress._debugHookTypes=current._debugHookTypes;}workInProgress.alternate=current;current.alternate=workInProgress;}else{workInProgress.pendingProps=pendingProps;// Needed because Blocks store data on type.\nworkInProgress.type=current.type;// We already have an alternate.\n// Reset the effect tag.\nworkInProgress.flags=NoFlags;// The effects are no longer valid.\nworkInProgress.subtreeFlags=NoFlags;workInProgress.deletions=null;{// We intentionally reset, rather than copy, actualDuration & actualStartTime.\n// This prevents time from endlessly accumulating in new commits.\n// This has the downside of resetting values for different priority renders,\n// But works for yielding (the common case) and should support resuming.\nworkInProgress.actualDuration=0;workInProgress.actualStartTime=-1;}}// Reset all effects except static ones.\n// Static effects are not specific to a render.\nworkInProgress.flags=current.flags&StaticMask;workInProgress.childLanes=current.childLanes;workInProgress.lanes=current.lanes;workInProgress.child=current.child;workInProgress.memoizedProps=current.memoizedProps;workInProgress.memoizedState=current.memoizedState;workInProgress.updateQueue=current.updateQueue;// Clone the dependencies object. This is mutated during the render phase, so\n// it cannot be shared with the current fiber.\nvar currentDependencies=current.dependencies;workInProgress.dependencies=currentDependencies===null?null:{lanes:currentDependencies.lanes,firstContext:currentDependencies.firstContext};// These will be overridden during the parent's reconciliation\nworkInProgress.sibling=current.sibling;workInProgress.index=current.index;workInProgress.ref=current.ref;{workInProgress.selfBaseDuration=current.selfBaseDuration;workInProgress.treeBaseDuration=current.treeBaseDuration;}{workInProgress._debugNeedsRemount=current._debugNeedsRemount;switch(workInProgress.tag){case IndeterminateComponent:case FunctionComponent:case SimpleMemoComponent:workInProgress.type=resolveFunctionForHotReloading(current.type);break;case ClassComponent:workInProgress.type=resolveClassForHotReloading(current.type);break;case ForwardRef:workInProgress.type=resolveForwardRefForHotReloading(current.type);break;}}return workInProgress;}// Used to reuse a Fiber for a second pass.\nfunction resetWorkInProgress(workInProgress,renderLanes){// This resets the Fiber to what createFiber or createWorkInProgress would\n// have set the values to before during the first pass. Ideally this wouldn't\n// be necessary but unfortunately many code paths reads from the workInProgress\n// when they should be reading from current and writing to workInProgress.\n// We assume pendingProps, index, key, ref, return are still untouched to\n// avoid doing another reconciliation.\n// Reset the effect flags but keep any Placement tags, since that's something\n// that child fiber is setting, not the reconciliation.\nworkInProgress.flags&=StaticMask|Placement;// The effects are no longer valid.\nvar current=workInProgress.alternate;if(current===null){// Reset to createFiber's initial values.\nworkInProgress.childLanes=NoLanes;workInProgress.lanes=renderLanes;workInProgress.child=null;workInProgress.subtreeFlags=NoFlags;workInProgress.memoizedProps=null;workInProgress.memoizedState=null;workInProgress.updateQueue=null;workInProgress.dependencies=null;workInProgress.stateNode=null;{// Note: We don't reset the actualTime counts. It's useful to accumulate\n// actual time across multiple render passes.\nworkInProgress.selfBaseDuration=0;workInProgress.treeBaseDuration=0;}}else{// Reset to the cloned values that createWorkInProgress would've.\nworkInProgress.childLanes=current.childLanes;workInProgress.lanes=current.lanes;workInProgress.child=current.child;workInProgress.subtreeFlags=NoFlags;workInProgress.deletions=null;workInProgress.memoizedProps=current.memoizedProps;workInProgress.memoizedState=current.memoizedState;workInProgress.updateQueue=current.updateQueue;// Needed because Blocks store data on type.\nworkInProgress.type=current.type;// Clone the dependencies object. This is mutated during the render phase, so\n// it cannot be shared with the current fiber.\nvar currentDependencies=current.dependencies;workInProgress.dependencies=currentDependencies===null?null:{lanes:currentDependencies.lanes,firstContext:currentDependencies.firstContext};{// Note: We don't reset the actualTime counts. It's useful to accumulate\n// actual time across multiple render passes.\nworkInProgress.selfBaseDuration=current.selfBaseDuration;workInProgress.treeBaseDuration=current.treeBaseDuration;}}return workInProgress;}function createHostRootFiber(tag,isStrictMode,concurrentUpdatesByDefaultOverride){var mode;if(tag===ConcurrentRoot){mode=ConcurrentMode;if(isStrictMode===true){mode|=StrictLegacyMode;{mode|=StrictEffectsMode;}}}else{mode=NoMode;}if(isDevToolsPresent){// Always collect profile timings when DevTools are present.\n// This enables DevTools to start capturing timing at any point–\n// Without some nodes in the tree having empty base times.\nmode|=ProfileMode;}return createFiber(HostRoot,null,null,mode);}function createFiberFromTypeAndProps(type,// React$ElementType\nkey,pendingProps,owner,mode,lanes){var fiberTag=IndeterminateComponent;// The resolved type is set if we know what the final type will be. I.e. it's not lazy.\nvar resolvedType=type;if(typeof type==='function'){if(shouldConstruct$1(type)){fiberTag=ClassComponent;{resolvedType=resolveClassForHotReloading(resolvedType);}}else{{resolvedType=resolveFunctionForHotReloading(resolvedType);}}}else if(typeof type==='string'){fiberTag=HostComponent;}else{getTag:switch(type){case REACT_FRAGMENT_TYPE:return createFiberFromFragment(pendingProps.children,mode,lanes,key);case REACT_STRICT_MODE_TYPE:fiberTag=Mode;mode|=StrictLegacyMode;if((mode&ConcurrentMode)!==NoMode){// Strict effects should never run on legacy roots\nmode|=StrictEffectsMode;}break;case REACT_PROFILER_TYPE:return createFiberFromProfiler(pendingProps,mode,lanes,key);case REACT_SUSPENSE_TYPE:return createFiberFromSuspense(pendingProps,mode,lanes,key);case REACT_SUSPENSE_LIST_TYPE:return createFiberFromSuspenseList(pendingProps,mode,lanes,key);case REACT_OFFSCREEN_TYPE:return createFiberFromOffscreen(pendingProps,mode,lanes,key);case REACT_LEGACY_HIDDEN_TYPE:// eslint-disable-next-line no-fallthrough\ncase REACT_SCOPE_TYPE:// eslint-disable-next-line no-fallthrough\ncase REACT_CACHE_TYPE:// eslint-disable-next-line no-fallthrough\ncase REACT_TRACING_MARKER_TYPE:// eslint-disable-next-line no-fallthrough\ncase REACT_DEBUG_TRACING_MODE_TYPE:// eslint-disable-next-line no-fallthrough\ndefault:{if(typeof type==='object'&&type!==null){switch(type.$$typeof){case REACT_PROVIDER_TYPE:fiberTag=ContextProvider;break getTag;case REACT_CONTEXT_TYPE:// This is a consumer\nfiberTag=ContextConsumer;break getTag;case REACT_FORWARD_REF_TYPE:fiberTag=ForwardRef;{resolvedType=resolveForwardRefForHotReloading(resolvedType);}break getTag;case REACT_MEMO_TYPE:fiberTag=MemoComponent;break getTag;case REACT_LAZY_TYPE:fiberTag=LazyComponent;resolvedType=null;break getTag;}}var info='';{if(type===undefined||typeof type==='object'&&type!==null&&Object.keys(type).length===0){info+=' You likely forgot to export your component from the file '+\"it's defined in, or you might have mixed up default and \"+'named imports.';}var ownerName=owner?getComponentNameFromFiber(owner):null;if(ownerName){info+='\\n\\nCheck the render method of `'+ownerName+'`.';}}throw new Error('Element type is invalid: expected a string (for built-in '+'components) or a class/function (for composite components) '+(\"but got: \"+(type==null?type:typeof type)+\".\"+info));}}}var fiber=createFiber(fiberTag,pendingProps,key,mode);fiber.elementType=type;fiber.type=resolvedType;fiber.lanes=lanes;{fiber._debugOwner=owner;}return fiber;}function createFiberFromElement(element,mode,lanes){var owner=null;{owner=element._owner;}var type=element.type;var key=element.key;var pendingProps=element.props;var fiber=createFiberFromTypeAndProps(type,key,pendingProps,owner,mode,lanes);{fiber._debugSource=element._source;fiber._debugOwner=element._owner;}return fiber;}function createFiberFromFragment(elements,mode,lanes,key){var fiber=createFiber(Fragment,elements,key,mode);fiber.lanes=lanes;return fiber;}function createFiberFromProfiler(pendingProps,mode,lanes,key){{if(typeof pendingProps.id!=='string'){error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',typeof pendingProps.id);}}var fiber=createFiber(Profiler,pendingProps,key,mode|ProfileMode);fiber.elementType=REACT_PROFILER_TYPE;fiber.lanes=lanes;{fiber.stateNode={effectDuration:0,passiveEffectDuration:0};}return fiber;}function createFiberFromSuspense(pendingProps,mode,lanes,key){var fiber=createFiber(SuspenseComponent,pendingProps,key,mode);fiber.elementType=REACT_SUSPENSE_TYPE;fiber.lanes=lanes;return fiber;}function createFiberFromSuspenseList(pendingProps,mode,lanes,key){var fiber=createFiber(SuspenseListComponent,pendingProps,key,mode);fiber.elementType=REACT_SUSPENSE_LIST_TYPE;fiber.lanes=lanes;return fiber;}function createFiberFromOffscreen(pendingProps,mode,lanes,key){var fiber=createFiber(OffscreenComponent,pendingProps,key,mode);fiber.elementType=REACT_OFFSCREEN_TYPE;fiber.lanes=lanes;var primaryChildInstance={};fiber.stateNode=primaryChildInstance;return fiber;}function createFiberFromText(content,mode,lanes){var fiber=createFiber(HostText,content,null,mode);fiber.lanes=lanes;return fiber;}function createFiberFromHostInstanceForDeletion(){var fiber=createFiber(HostComponent,null,null,NoMode);fiber.elementType='DELETED';return fiber;}function createFiberFromDehydratedFragment(dehydratedNode){var fiber=createFiber(DehydratedFragment,null,null,NoMode);fiber.stateNode=dehydratedNode;return fiber;}function createFiberFromPortal(portal,mode,lanes){var pendingProps=portal.children!==null?portal.children:[];var fiber=createFiber(HostPortal,pendingProps,portal.key,mode);fiber.lanes=lanes;fiber.stateNode={containerInfo:portal.containerInfo,pendingChildren:null,// Used by persistent updates\nimplementation:portal.implementation};return fiber;}// Used for stashing WIP properties to replay failed work in DEV.\nfunction assignFiberPropertiesInDEV(target,source){if(target===null){// This Fiber's initial properties will always be overwritten.\n// We only use a Fiber to ensure the same hidden class so DEV isn't slow.\ntarget=createFiber(IndeterminateComponent,null,null,NoMode);}// This is intentionally written as a list of all properties.\n// We tried to use Object.assign() instead but this is called in\n// the hottest path, and Object.assign() was too slow:\n// https://github.com/facebook/react/issues/12502\n// This code is DEV-only so size is not a concern.\ntarget.tag=source.tag;target.key=source.key;target.elementType=source.elementType;target.type=source.type;target.stateNode=source.stateNode;target.return=source.return;target.child=source.child;target.sibling=source.sibling;target.index=source.index;target.ref=source.ref;target.pendingProps=source.pendingProps;target.memoizedProps=source.memoizedProps;target.updateQueue=source.updateQueue;target.memoizedState=source.memoizedState;target.dependencies=source.dependencies;target.mode=source.mode;target.flags=source.flags;target.subtreeFlags=source.subtreeFlags;target.deletions=source.deletions;target.lanes=source.lanes;target.childLanes=source.childLanes;target.alternate=source.alternate;{target.actualDuration=source.actualDuration;target.actualStartTime=source.actualStartTime;target.selfBaseDuration=source.selfBaseDuration;target.treeBaseDuration=source.treeBaseDuration;}target._debugSource=source._debugSource;target._debugOwner=source._debugOwner;target._debugNeedsRemount=source._debugNeedsRemount;target._debugHookTypes=source._debugHookTypes;return target;}function FiberRootNode(containerInfo,tag,hydrate,identifierPrefix,onRecoverableError){this.tag=tag;this.containerInfo=containerInfo;this.pendingChildren=null;this.current=null;this.pingCache=null;this.finishedWork=null;this.timeoutHandle=noTimeout;this.context=null;this.pendingContext=null;this.callbackNode=null;this.callbackPriority=NoLane;this.eventTimes=createLaneMap(NoLanes);this.expirationTimes=createLaneMap(NoTimestamp);this.pendingLanes=NoLanes;this.suspendedLanes=NoLanes;this.pingedLanes=NoLanes;this.expiredLanes=NoLanes;this.mutableReadLanes=NoLanes;this.finishedLanes=NoLanes;this.entangledLanes=NoLanes;this.entanglements=createLaneMap(NoLanes);this.identifierPrefix=identifierPrefix;this.onRecoverableError=onRecoverableError;if(supportsHydration){this.mutableSourceEagerHydrationData=null;}{this.effectDuration=0;this.passiveEffectDuration=0;}{this.memoizedUpdaters=new Set();var pendingUpdatersLaneMap=this.pendingUpdatersLaneMap=[];for(var _i=0;_i<TotalLanes;_i++){pendingUpdatersLaneMap.push(new Set());}}{switch(tag){case ConcurrentRoot:this._debugRootType=hydrate?'hydrateRoot()':'createRoot()';break;case LegacyRoot:this._debugRootType=hydrate?'hydrate()':'render()';break;}}}function createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,// TODO: We have several of these arguments that are conceptually part of the\n// host config, but because they are passed in at runtime, we have to thread\n// them through the root constructor. Perhaps we should put them all into a\n// single type, like a DynamicHostConfig that is defined by the renderer.\nidentifierPrefix,onRecoverableError,transitionCallbacks){var root=new FiberRootNode(containerInfo,tag,hydrate,identifierPrefix,onRecoverableError);// stateNode is any.\nvar uninitializedFiber=createHostRootFiber(tag,isStrictMode);root.current=uninitializedFiber;uninitializedFiber.stateNode=root;{var _initialState={element:initialChildren,isDehydrated:hydrate,cache:null,// not enabled yet\ntransitions:null};uninitializedFiber.memoizedState=_initialState;}initializeUpdateQueue(uninitializedFiber);return root;}var ReactVersion='18.0.0-fc46dba67-20220329';function createPortal(children,containerInfo,// TODO: figure out the API for cross-renderer implementation.\nimplementation){var key=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;{checkKeyStringCoercion(key);}return{// This tag allow us to uniquely identify this as a React Portal\n$$typeof:REACT_PORTAL_TYPE,key:key==null?null:''+key,children:children,containerInfo:containerInfo,implementation:implementation};}var didWarnAboutNestedUpdates;var didWarnAboutFindNodeInStrictMode;{didWarnAboutNestedUpdates=false;didWarnAboutFindNodeInStrictMode={};}function getContextForSubtree(parentComponent){if(!parentComponent){return emptyContextObject;}var fiber=get(parentComponent);var parentContext=findCurrentUnmaskedContext(fiber);if(fiber.tag===ClassComponent){var Component=fiber.type;if(isContextProvider(Component)){return processChildContext(fiber,Component,parentContext);}}return parentContext;}function findHostInstance(component){var fiber=get(component);if(fiber===undefined){if(typeof component.render==='function'){throw new Error('Unable to find node on an unmounted component.');}else{var keys=Object.keys(component).join(',');throw new Error(\"Argument appears to not be a ReactComponent. Keys: \"+keys);}}var hostFiber=findCurrentHostFiber(fiber);if(hostFiber===null){return null;}return hostFiber.stateNode;}function findHostInstanceWithWarning(component,methodName){{var fiber=get(component);if(fiber===undefined){if(typeof component.render==='function'){throw new Error('Unable to find node on an unmounted component.');}else{var keys=Object.keys(component).join(',');throw new Error(\"Argument appears to not be a ReactComponent. Keys: \"+keys);}}var hostFiber=findCurrentHostFiber(fiber);if(hostFiber===null){return null;}if(hostFiber.mode&StrictLegacyMode){var componentName=getComponentNameFromFiber(fiber)||'Component';if(!didWarnAboutFindNodeInStrictMode[componentName]){didWarnAboutFindNodeInStrictMode[componentName]=true;var previousFiber=current;try{setCurrentFiber(hostFiber);if(fiber.mode&StrictLegacyMode){error('%s is deprecated in StrictMode. '+'%s was passed an instance of %s which is inside StrictMode. '+'Instead, add a ref directly to the element you want to reference. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-find-node',methodName,methodName,componentName);}else{error('%s is deprecated in StrictMode. '+'%s was passed an instance of %s which renders StrictMode children. '+'Instead, add a ref directly to the element you want to reference. '+'Learn more about using refs safely here: '+'https://reactjs.org/link/strict-mode-find-node',methodName,methodName,componentName);}}finally{// Ideally this should reset to previous but this shouldn't be called in\n// render and there's another warning for that anyway.\nif(previousFiber){setCurrentFiber(previousFiber);}else{resetCurrentFiber();}}}}return hostFiber.stateNode;}}function createContainer(containerInfo,tag,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError,transitionCallbacks){var hydrate=false;var initialChildren=null;return createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);}function createHydrationContainer(initialChildren,// TODO: Remove `callback` when we delete legacy mode.\ncallback,containerInfo,tag,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError,transitionCallbacks){var hydrate=true;var root=createFiberRoot(containerInfo,tag,hydrate,initialChildren,hydrationCallbacks,isStrictMode,concurrentUpdatesByDefaultOverride,identifierPrefix,onRecoverableError);// TODO: Move this to FiberRoot constructor\nroot.context=getContextForSubtree(null);// Schedule the initial render. In a hydration root, this is different from\n// a regular update because the initial render must match was was rendered\n// on the server.\n// NOTE: This update intentionally doesn't have a payload. We're only using\n// the update to schedule work on the root fiber (and, for legacy roots, to\n// enqueue the callback if one is provided).\nvar current=root.current;var eventTime=requestEventTime();var lane=requestUpdateLane(current);var update=createUpdate(eventTime,lane);update.callback=callback!==undefined&&callback!==null?callback:null;enqueueUpdate(current,update);scheduleInitialHydrationOnRoot(root,lane,eventTime);return root;}function updateContainer(element,container,parentComponent,callback){{onScheduleRoot(container,element);}var current$1=container.current;var eventTime=requestEventTime();var lane=requestUpdateLane(current$1);{markRenderScheduled(lane);}var context=getContextForSubtree(parentComponent);if(container.context===null){container.context=context;}else{container.pendingContext=context;}{if(isRendering&&current!==null&&!didWarnAboutNestedUpdates){didWarnAboutNestedUpdates=true;error('Render methods should be a pure function of props and state; '+'triggering nested component updates from render is not allowed. '+'If necessary, trigger nested updates in componentDidUpdate.\\n\\n'+'Check the render method of %s.',getComponentNameFromFiber(current)||'Unknown');}}var update=createUpdate(eventTime,lane);// Caution: React DevTools currently depends on this property\n// being called \"element\".\nupdate.payload={element:element};callback=callback===undefined?null:callback;if(callback!==null){{if(typeof callback!=='function'){error('render(...): Expected the last optional `callback` argument to be a '+'function. Instead received: %s.',callback);}}update.callback=callback;}enqueueUpdate(current$1,update);var root=scheduleUpdateOnFiber(current$1,lane,eventTime);if(root!==null){entangleTransitions(root,current$1,lane);}return lane;}function getPublicRootInstance(container){var containerFiber=container.current;if(!containerFiber.child){return null;}switch(containerFiber.child.tag){case HostComponent:return getPublicInstance(containerFiber.child.stateNode);default:return containerFiber.child.stateNode;}}function attemptSynchronousHydration(fiber){switch(fiber.tag){case HostRoot:var root=fiber.stateNode;if(isRootDehydrated(root)){// Flush the first scheduled \"update\".\nvar lanes=getHighestPriorityPendingLanes(root);flushRoot(root,lanes);}break;case SuspenseComponent:var eventTime=requestEventTime();flushSync(function(){return scheduleUpdateOnFiber(fiber,SyncLane,eventTime);});// If we're still blocked after this, we need to increase\n// the priority of any promises resolving within this\n// boundary so that they next attempt also has higher pri.\nvar retryLane=SyncLane;markRetryLaneIfNotHydrated(fiber,retryLane);break;}}function markRetryLaneImpl(fiber,retryLane){var suspenseState=fiber.memoizedState;if(suspenseState!==null&&suspenseState.dehydrated!==null){suspenseState.retryLane=higherPriorityLane(suspenseState.retryLane,retryLane);}}// Increases the priority of thenables when they resolve within this boundary.\nfunction markRetryLaneIfNotHydrated(fiber,retryLane){markRetryLaneImpl(fiber,retryLane);var alternate=fiber.alternate;if(alternate){markRetryLaneImpl(alternate,retryLane);}}function attemptContinuousHydration(fiber){if(fiber.tag!==SuspenseComponent){// We ignore HostRoots here because we can't increase\n// their priority and they should not suspend on I/O,\n// since you have to wrap anything that might suspend in\n// Suspense.\nreturn;}var eventTime=requestEventTime();var lane=SelectiveHydrationLane;scheduleUpdateOnFiber(fiber,lane,eventTime);markRetryLaneIfNotHydrated(fiber,lane);}function attemptHydrationAtCurrentPriority(fiber){if(fiber.tag!==SuspenseComponent){// We ignore HostRoots here because we can't increase\n// their priority other than synchronously flush it.\nreturn;}var eventTime=requestEventTime();var lane=requestUpdateLane(fiber);scheduleUpdateOnFiber(fiber,lane,eventTime);markRetryLaneIfNotHydrated(fiber,lane);}function findHostInstanceWithNoPortals(fiber){var hostFiber=findCurrentHostFiberWithNoPortals(fiber);if(hostFiber===null){return null;}return hostFiber.stateNode;}var shouldErrorImpl=function(fiber){return null;};function shouldError(fiber){return shouldErrorImpl(fiber);}var shouldSuspendImpl=function(fiber){return false;};function shouldSuspend(fiber){return shouldSuspendImpl(fiber);}var overrideHookState=null;var overrideHookStateDeletePath=null;var overrideHookStateRenamePath=null;var overrideProps=null;var overridePropsDeletePath=null;var overridePropsRenamePath=null;var scheduleUpdate=null;var setErrorHandler=null;var setSuspenseHandler=null;{var copyWithDeleteImpl=function(obj,path,index){var key=path[index];var updated=isArray(obj)?obj.slice():assign({},obj);if(index+1===path.length){if(isArray(updated)){updated.splice(key,1);}else{delete updated[key];}return updated;}// $FlowFixMe number or string is fine here\nupdated[key]=copyWithDeleteImpl(obj[key],path,index+1);return updated;};var copyWithDelete=function(obj,path){return copyWithDeleteImpl(obj,path,0);};var copyWithRenameImpl=function(obj,oldPath,newPath,index){var oldKey=oldPath[index];var updated=isArray(obj)?obj.slice():assign({},obj);if(index+1===oldPath.length){var newKey=newPath[index];// $FlowFixMe number or string is fine here\nupdated[newKey]=updated[oldKey];if(isArray(updated)){updated.splice(oldKey,1);}else{delete updated[oldKey];}}else{// $FlowFixMe number or string is fine here\nupdated[oldKey]=copyWithRenameImpl(// $FlowFixMe number or string is fine here\nobj[oldKey],oldPath,newPath,index+1);}return updated;};var copyWithRename=function(obj,oldPath,newPath){if(oldPath.length!==newPath.length){warn('copyWithRename() expects paths of the same length');return;}else{for(var i=0;i<newPath.length-1;i++){if(oldPath[i]!==newPath[i]){warn('copyWithRename() expects paths to be the same except for the deepest key');return;}}}return copyWithRenameImpl(obj,oldPath,newPath,0);};var copyWithSetImpl=function(obj,path,index,value){if(index>=path.length){return value;}var key=path[index];var updated=isArray(obj)?obj.slice():assign({},obj);// $FlowFixMe number or string is fine here\nupdated[key]=copyWithSetImpl(obj[key],path,index+1,value);return updated;};var copyWithSet=function(obj,path,value){return copyWithSetImpl(obj,path,0,value);};var findHook=function(fiber,id){// For now, the \"id\" of stateful hooks is just the stateful hook index.\n// This may change in the future with e.g. nested hooks.\nvar currentHook=fiber.memoizedState;while(currentHook!==null&&id>0){currentHook=currentHook.next;id--;}return currentHook;};// Support DevTools editable values for useState and useReducer.\noverrideHookState=function(fiber,id,path,value){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithSet(hook.memoizedState,path,value);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,\n// because there is no update we can add for useReducer hooks that won't trigger an error.\n// (There's no appropriate action type for DevTools overrides.)\n// As a result though, React will see the scheduled update as a noop and bailout.\n// Shallow cloning props works as a workaround for now to bypass the bailout check.\nfiber.memoizedProps=assign({},fiber.memoizedProps);scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);}};overrideHookStateDeletePath=function(fiber,id,path){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithDelete(hook.memoizedState,path);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,\n// because there is no update we can add for useReducer hooks that won't trigger an error.\n// (There's no appropriate action type for DevTools overrides.)\n// As a result though, React will see the scheduled update as a noop and bailout.\n// Shallow cloning props works as a workaround for now to bypass the bailout check.\nfiber.memoizedProps=assign({},fiber.memoizedProps);scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);}};overrideHookStateRenamePath=function(fiber,id,oldPath,newPath){var hook=findHook(fiber,id);if(hook!==null){var newState=copyWithRename(hook.memoizedState,oldPath,newPath);hook.memoizedState=newState;hook.baseState=newState;// We aren't actually adding an update to the queue,\n// because there is no update we can add for useReducer hooks that won't trigger an error.\n// (There's no appropriate action type for DevTools overrides.)\n// As a result though, React will see the scheduled update as a noop and bailout.\n// Shallow cloning props works as a workaround for now to bypass the bailout check.\nfiber.memoizedProps=assign({},fiber.memoizedProps);scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);}};// Support DevTools props for function components, forwardRef, memo, host components, etc.\noverrideProps=function(fiber,path,value){fiber.pendingProps=copyWithSet(fiber.memoizedProps,path,value);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);};overridePropsDeletePath=function(fiber,path){fiber.pendingProps=copyWithDelete(fiber.memoizedProps,path);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);};overridePropsRenamePath=function(fiber,oldPath,newPath){fiber.pendingProps=copyWithRename(fiber.memoizedProps,oldPath,newPath);if(fiber.alternate){fiber.alternate.pendingProps=fiber.pendingProps;}scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);};scheduleUpdate=function(fiber){scheduleUpdateOnFiber(fiber,SyncLane,NoTimestamp);};setErrorHandler=function(newShouldErrorImpl){shouldErrorImpl=newShouldErrorImpl;};setSuspenseHandler=function(newShouldSuspendImpl){shouldSuspendImpl=newShouldSuspendImpl;};}function findHostInstanceByFiber(fiber){var hostFiber=findCurrentHostFiber(fiber);if(hostFiber===null){return null;}return hostFiber.stateNode;}function emptyFindFiberByHostInstance(instance){return null;}function getCurrentFiberForDevTools(){return current;}function injectIntoDevTools(devToolsConfig){var findFiberByHostInstance=devToolsConfig.findFiberByHostInstance;var ReactCurrentDispatcher=ReactSharedInternals.ReactCurrentDispatcher;return injectInternals({bundleType:devToolsConfig.bundleType,version:devToolsConfig.version,rendererPackageName:devToolsConfig.rendererPackageName,rendererConfig:devToolsConfig.rendererConfig,overrideHookState:overrideHookState,overrideHookStateDeletePath:overrideHookStateDeletePath,overrideHookStateRenamePath:overrideHookStateRenamePath,overrideProps:overrideProps,overridePropsDeletePath:overridePropsDeletePath,overridePropsRenamePath:overridePropsRenamePath,setErrorHandler:setErrorHandler,setSuspenseHandler:setSuspenseHandler,scheduleUpdate:scheduleUpdate,currentDispatcherRef:ReactCurrentDispatcher,findHostInstanceByFiber:findHostInstanceByFiber,findFiberByHostInstance:findFiberByHostInstance||emptyFindFiberByHostInstance,// React Refresh\nfindHostInstancesForRefresh:findHostInstancesForRefresh,scheduleRefresh:scheduleRefresh,scheduleRoot:scheduleRoot,setRefreshHandler:setRefreshHandler,// Enables DevTools to append owner stacks to error messages in DEV mode.\ngetCurrentFiber:getCurrentFiberForDevTools,// Enables DevTools to detect reconciler version rather than renderer version\n// which may not match for third party renderers.\nreconcilerVersion:ReactVersion});}exports.attemptContinuousHydration=attemptContinuousHydration;exports.attemptHydrationAtCurrentPriority=attemptHydrationAtCurrentPriority;exports.attemptSynchronousHydration=attemptSynchronousHydration;exports.batchedUpdates=batchedUpdates;exports.createComponentSelector=createComponentSelector;exports.createContainer=createContainer;exports.createHasPseudoClassSelector=createHasPseudoClassSelector;exports.createHydrationContainer=createHydrationContainer;exports.createPortal=createPortal;exports.createRoleSelector=createRoleSelector;exports.createTestNameSelector=createTestNameSelector;exports.createTextSelector=createTextSelector;exports.deferredUpdates=deferredUpdates;exports.discreteUpdates=discreteUpdates;exports.findAllNodes=findAllNodes;exports.findBoundingRects=findBoundingRects;exports.findHostInstance=findHostInstance;exports.findHostInstanceWithNoPortals=findHostInstanceWithNoPortals;exports.findHostInstanceWithWarning=findHostInstanceWithWarning;exports.flushControlled=flushControlled;exports.flushPassiveEffects=flushPassiveEffects;exports.flushSync=flushSync;exports.focusWithin=focusWithin;exports.getCurrentUpdatePriority=getCurrentUpdatePriority;exports.getFindAllNodesFailureDescription=getFindAllNodesFailureDescription;exports.getPublicRootInstance=getPublicRootInstance;exports.injectIntoDevTools=injectIntoDevTools;exports.isAlreadyRendering=isAlreadyRendering;exports.observeVisibleRects=observeVisibleRects;exports.registerMutableSourceForHydration=registerMutableSourceForHydration;exports.runWithPriority=runWithPriority;exports.shouldError=shouldError;exports.shouldSuspend=shouldSuspend;exports.updateContainer=updateContainer;return exports;};}", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-reconciler.production.min.js');\n} else {\n  module.exports = require('./cjs/react-reconciler.development.js');\n}\n", "/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { DefaultEventPriority, ContinuousEventPriority, DiscreteEventPriority, ConcurrentRoot } from 'react-reconciler/constants';\nimport create from 'zustand';\nimport { suspend, preload, clear } from 'suspend-react';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport Reconciler from 'react-reconciler';\nimport { unstable_scheduleCallback, unstable_IdlePriority } from 'scheduler';\nvar threeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\nconst catalogue = {};\nconst extend = objects => void Object.assign(catalogue, objects);\nfunction createRenderer(_roots, _getEventPriority) {\n  function createInstance(type, {\n    args = [],\n    attach,\n    ...props\n  }, root) {\n    let name = `${type[0].toUpperCase()}${type.slice(1)}`;\n    let instance;\n    if (type === 'primitive') {\n      if (props.object === undefined) throw new Error(\"R3F: Primitives without 'object' are invalid!\");\n      const object = props.object;\n      instance = prepare(object, {\n        type,\n        root,\n        attach,\n        primitive: true\n      });\n    } else {\n      const target = catalogue[name];\n      if (!target) {\n        throw new Error(`R3F: ${name} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);\n      }\n\n      // Throw if an object or literal was passed for args\n      if (!Array.isArray(args)) throw new Error('R3F: The args prop must be an array!');\n\n      // Instanciate new object, link it to the root\n      // Append memoized props with args so it's not forgotten\n      instance = prepare(new target(...args), {\n        type,\n        root,\n        attach,\n        // Save args in case we need to reconstruct later for HMR\n        memoizedProps: {\n          args\n        }\n      });\n    }\n\n    // Auto-attach geometries and materials\n    if (instance.__r3f.attach === undefined) {\n      if (instance instanceof THREE.BufferGeometry) instance.__r3f.attach = 'geometry';else if (instance instanceof THREE.Material) instance.__r3f.attach = 'material';\n    }\n\n    // It should NOT call onUpdate on object instanciation, because it hasn't been added to the\n    // view yet. If the callback relies on references for instance, they won't be ready yet, this is\n    // why it passes \"true\" here\n    // There is no reason to apply props to injects\n    if (name !== 'inject') applyProps$1(instance, props);\n    return instance;\n  }\n  function appendChild(parentInstance, child) {\n    let added = false;\n    if (child) {\n      var _child$__r3f, _parentInstance$__r3f;\n      // The attach attribute implies that the object attaches itself on the parent\n      if ((_child$__r3f = child.__r3f) != null && _child$__r3f.attach) {\n        attach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        // add in the usual parent-child way\n        parentInstance.add(child);\n        added = true;\n      }\n      // This is for anything that used attach, and for non-Object3Ds that don't get attached to props;\n      // that is, anything that's a child in React but not a child in the scenegraph.\n      if (!added) (_parentInstance$__r3f = parentInstance.__r3f) == null ? void 0 : _parentInstance$__r3f.objects.push(child);\n      if (!child.__r3f) prepare(child, {});\n      child.__r3f.parent = parentInstance;\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n  function insertBefore(parentInstance, child, beforeChild) {\n    let added = false;\n    if (child) {\n      var _child$__r3f2, _parentInstance$__r3f2;\n      if ((_child$__r3f2 = child.__r3f) != null && _child$__r3f2.attach) {\n        attach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        child.parent = parentInstance;\n        child.dispatchEvent({\n          type: 'added'\n        });\n        parentInstance.dispatchEvent({\n          type: 'childadded',\n          child\n        });\n        const restSiblings = parentInstance.children.filter(sibling => sibling !== child);\n        const index = restSiblings.indexOf(beforeChild);\n        parentInstance.children = [...restSiblings.slice(0, index), child, ...restSiblings.slice(index)];\n        added = true;\n      }\n      if (!added) (_parentInstance$__r3f2 = parentInstance.__r3f) == null ? void 0 : _parentInstance$__r3f2.objects.push(child);\n      if (!child.__r3f) prepare(child, {});\n      child.__r3f.parent = parentInstance;\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n  function removeRecursive(array, parent, dispose = false) {\n    if (array) [...array].forEach(child => removeChild(parent, child, dispose));\n  }\n  function removeChild(parentInstance, child, dispose) {\n    if (child) {\n      var _parentInstance$__r3f3, _child$__r3f3, _child$__r3f5;\n      // Clear the parent reference\n      if (child.__r3f) child.__r3f.parent = null;\n      // Remove child from the parents objects\n      if ((_parentInstance$__r3f3 = parentInstance.__r3f) != null && _parentInstance$__r3f3.objects) parentInstance.__r3f.objects = parentInstance.__r3f.objects.filter(x => x !== child);\n      // Remove attachment\n      if ((_child$__r3f3 = child.__r3f) != null && _child$__r3f3.attach) {\n        detach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        var _child$__r3f4;\n        parentInstance.remove(child);\n        // @ts-expect-error\n        // Remove interactivity on the initial root\n        if ((_child$__r3f4 = child.__r3f) != null && _child$__r3f4.root) {\n          removeInteractivity(findInitialRoot(child), child);\n        }\n      }\n\n      // Allow objects to bail out of recursive dispose altogether by passing dispose={null}\n      // Never dispose of primitives because their state may be kept outside of React!\n      // In order for an object to be able to dispose it has to have\n      //   - a dispose method,\n      //   - it cannot be a <primitive object={...} />\n      //   - it cannot be a THREE.Scene, because three has broken it's own api\n      //\n      // Since disposal is recursive, we can check the optional dispose arg, which will be undefined\n      // when the reconciler calls it, but then carry our own check recursively\n      const isPrimitive = (_child$__r3f5 = child.__r3f) == null ? void 0 : _child$__r3f5.primitive;\n      const shouldDispose = !isPrimitive && (dispose === undefined ? child.dispose !== null : dispose);\n\n      // Remove nested child objects. Primitives should not have objects and children that are\n      // attached to them declaratively ...\n      if (!isPrimitive) {\n        var _child$__r3f6;\n        removeRecursive((_child$__r3f6 = child.__r3f) == null ? void 0 : _child$__r3f6.objects, child, shouldDispose);\n        removeRecursive(child.children, child, shouldDispose);\n      }\n\n      // Remove references\n      delete child.__r3f;\n\n      // Dispose item whenever the reconciler feels like it\n      if (shouldDispose && child.dispose && child.type !== 'Scene') {\n        const callback = () => {\n          try {\n            child.dispose();\n          } catch (e) {\n            /* ... */\n          }\n        };\n\n        // Schedule async at runtime, flush sync in testing\n        if (typeof IS_REACT_ACT_ENVIRONMENT === 'undefined') {\n          unstable_scheduleCallback(unstable_IdlePriority, callback);\n        } else {\n          callback();\n        }\n      }\n      invalidateInstance(parentInstance);\n    }\n  }\n  function switchInstance(instance, type, newProps, fiber) {\n    var _instance$__r3f;\n    const parent = (_instance$__r3f = instance.__r3f) == null ? void 0 : _instance$__r3f.parent;\n    if (!parent) return;\n    const newInstance = createInstance(type, newProps, instance.__r3f.root);\n\n    // https://github.com/pmndrs/react-three-fiber/issues/1348\n    // When args change the instance has to be re-constructed, which then\n    // forces r3f to re-parent the children and non-scene objects\n    if (instance.children) {\n      for (const child of instance.children) {\n        if (child.__r3f) appendChild(newInstance, child);\n      }\n      instance.children = instance.children.filter(child => !child.__r3f);\n    }\n    instance.__r3f.objects.forEach(child => appendChild(newInstance, child));\n    instance.__r3f.objects = [];\n    if (!instance.__r3f.autoRemovedBeforeAppend) {\n      removeChild(parent, instance);\n    }\n    if (newInstance.parent) {\n      newInstance.__r3f.autoRemovedBeforeAppend = true;\n    }\n    appendChild(parent, newInstance);\n\n    // Re-bind event handlers on the initial root\n    if (newInstance.raycast && newInstance.__r3f.eventCount) {\n      const rootState = findInitialRoot(newInstance).getState();\n      rootState.internal.interaction.push(newInstance);\n    }\n    [fiber, fiber.alternate].forEach(fiber => {\n      if (fiber !== null) {\n        fiber.stateNode = newInstance;\n        if (fiber.ref) {\n          if (typeof fiber.ref === 'function') fiber.ref(newInstance);else fiber.ref.current = newInstance;\n        }\n      }\n    });\n  }\n\n  // Don't handle text instances, warn on undefined behavior\n  const handleTextInstance = () => console.warn('Text is not allowed in the R3F tree! This could be stray whitespace or characters.');\n  const reconciler = Reconciler({\n    createInstance,\n    removeChild,\n    appendChild,\n    appendInitialChild: appendChild,\n    insertBefore,\n    supportsMutation: true,\n    isPrimaryRenderer: false,\n    supportsPersistence: false,\n    supportsHydration: false,\n    noTimeout: -1,\n    appendChildToContainer: (container, child) => {\n      if (!child) return;\n\n      // Don't append to unmounted container\n      const scene = container.getState().scene;\n      if (!scene.__r3f) return;\n\n      // Link current root to the default scene\n      scene.__r3f.root = container;\n      appendChild(scene, child);\n    },\n    removeChildFromContainer: (container, child) => {\n      if (!child) return;\n      removeChild(container.getState().scene, child);\n    },\n    insertInContainerBefore: (container, child, beforeChild) => {\n      if (!child || !beforeChild) return;\n\n      // Don't append to unmounted container\n      const scene = container.getState().scene;\n      if (!scene.__r3f) return;\n      insertBefore(scene, child, beforeChild);\n    },\n    getRootHostContext: () => null,\n    getChildHostContext: parentHostContext => parentHostContext,\n    finalizeInitialChildren(instance) {\n      var _instance$__r3f2;\n      const localState = (_instance$__r3f2 = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f2 : {};\n      // https://github.com/facebook/react/issues/20271\n      // Returning true will trigger commitMount\n      return Boolean(localState.handlers);\n    },\n    prepareUpdate(instance, _type, oldProps, newProps) {\n      var _instance$__r3f3;\n      const localState = (_instance$__r3f3 = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f3 : {};\n\n      // Create diff-sets\n      if (localState.primitive && newProps.object && newProps.object !== instance) {\n        return [true];\n      } else {\n        // This is a data object, let's extract critical information about it\n        const {\n          args: argsNew = [],\n          children: cN,\n          ...restNew\n        } = newProps;\n        const {\n          args: argsOld = [],\n          children: cO,\n          ...restOld\n        } = oldProps;\n\n        // Throw if an object or literal was passed for args\n        if (!Array.isArray(argsNew)) throw new Error('R3F: the args prop must be an array!');\n\n        // If it has new props or arguments, then it needs to be re-instantiated\n        if (argsNew.some((value, index) => value !== argsOld[index])) return [true];\n        // Create a diff-set, flag if there are any changes\n        const diff = diffProps(instance, restNew, restOld, true);\n        if (diff.changes.length) return [false, diff];\n\n        // Otherwise do not touch the instance\n        return null;\n      }\n    },\n    commitUpdate(instance, [reconstruct, diff], type, _oldProps, newProps, fiber) {\n      // Reconstruct when args or <primitive object={...} have changes\n      if (reconstruct) switchInstance(instance, type, newProps, fiber);\n      // Otherwise just overwrite props\n      else applyProps$1(instance, diff);\n    },\n    commitMount(instance, _type, _props, _int) {\n      var _instance$__r3f4;\n      // https://github.com/facebook/react/issues/20271\n      // This will make sure events are only added once to the central container on the initial root\n      const localState = (_instance$__r3f4 = instance.__r3f) != null ? _instance$__r3f4 : {};\n      if (instance.raycast && localState.handlers && localState.eventCount) {\n        findInitialRoot(instance).getState().internal.interaction.push(instance);\n      }\n    },\n    getPublicInstance: instance => instance,\n    prepareForCommit: () => null,\n    preparePortalMount: container => prepare(container.getState().scene),\n    resetAfterCommit: () => {},\n    shouldSetTextContent: () => false,\n    clearContainer: () => false,\n    hideInstance(instance) {\n      var _instance$__r3f5;\n      // Detach while the instance is hidden\n      const {\n        attach: type,\n        parent\n      } = (_instance$__r3f5 = instance.__r3f) != null ? _instance$__r3f5 : {};\n      if (type && parent) detach(parent, instance, type);\n      if (instance.isObject3D) instance.visible = false;\n      invalidateInstance(instance);\n    },\n    unhideInstance(instance, props) {\n      var _instance$__r3f6;\n      // Re-attach when the instance is unhidden\n      const {\n        attach: type,\n        parent\n      } = (_instance$__r3f6 = instance.__r3f) != null ? _instance$__r3f6 : {};\n      if (type && parent) attach(parent, instance, type);\n      if (instance.isObject3D && props.visible == null || props.visible) instance.visible = true;\n      invalidateInstance(instance);\n    },\n    createTextInstance: handleTextInstance,\n    hideTextInstance: handleTextInstance,\n    unhideTextInstance: handleTextInstance,\n    // https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r916356874\n    // @ts-expect-error\n    getCurrentEventPriority: () => _getEventPriority ? _getEventPriority() : DefaultEventPriority,\n    beforeActiveInstanceBlur: () => {},\n    afterActiveInstanceBlur: () => {},\n    detachDeletedInstance: () => {},\n    now: typeof performance !== 'undefined' && is.fun(performance.now) ? performance.now : is.fun(Date.now) ? Date.now : () => 0,\n    // https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r920883503\n    scheduleTimeout: is.fun(setTimeout) ? setTimeout : undefined,\n    cancelTimeout: is.fun(clearTimeout) ? clearTimeout : undefined\n  });\n  return {\n    reconciler,\n    applyProps: applyProps$1\n  };\n}\nvar _window$document, _window$navigator;\n/**\r\n * Returns `true` with correct TS type inference if an object has a configurable color space (since r152).\r\n */\nconst hasColorSpace = object => 'colorSpace' in object || 'outputColorSpace' in object;\n/**\r\n * The current THREE.ColorManagement instance, if present.\r\n */\nconst getColorManagement = () => {\n  var _ColorManagement;\n  return (_ColorManagement = catalogue.ColorManagement) != null ? _ColorManagement : null;\n};\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst isRef = obj => obj && obj.hasOwnProperty('current');\n\n/**\r\n * An SSR-friendly useLayoutEffect.\r\n *\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect elsewhere.\r\n *\r\n * @see https://github.com/facebook/react/issues/14927\r\n */\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && ((_window$document = window.document) != null && _window$document.createElement || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative') ? React.useLayoutEffect : React.useEffect;\nfunction useMutableCallback(fn) {\n  const ref = React.useRef(fn);\n  useIsomorphicLayoutEffect(() => void (ref.current = fn), [fn]);\n  return ref;\n}\nfunction Block({\n  set\n}) {\n  useIsomorphicLayoutEffect(() => {\n    set(new Promise(() => null));\n    return () => set(false);\n  }, [set]);\n  return null;\n}\nclass ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false\n    };\n  }\n  componentDidCatch(err) {\n    this.props.set(err);\n  }\n  render() {\n    return this.state.error ? null : this.props.children;\n  }\n}\nErrorBoundary.getDerivedStateFromError = () => ({\n  error: true\n});\nconst DEFAULT = '__default';\nconst DEFAULTS = new Map();\nconst isDiffSet = def => def && !!def.memoized && !!def.changes;\nfunction calculateDpr(dpr) {\n  var _window$devicePixelRa;\n  // Err on the side of progress by assuming 2x dpr if we can't detect it\n  // This will happen in workers where window is defined but dpr isn't.\n  const target = typeof window !== 'undefined' ? (_window$devicePixelRa = window.devicePixelRatio) != null ? _window$devicePixelRa : 2 : 1;\n  return Array.isArray(dpr) ? Math.min(Math.max(dpr[0], target), dpr[1]) : dpr;\n}\n\n/**\r\n * Returns instance root state\r\n */\nconst getRootState = obj => {\n  var _r3f;\n  return (_r3f = obj.__r3f) == null ? void 0 : _r3f.root.getState();\n};\n\n/**\r\n * Returns the instances initial (outmost) root\r\n */\nfunction findInitialRoot(child) {\n  let root = child.__r3f.root;\n  while (root.getState().previousRoot) root = root.getState().previousRoot;\n  return root;\n}\n// A collection of compare functions\nconst is = {\n  obj: a => a === Object(a) && !is.arr(a) && typeof a !== 'function',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  boo: a => typeof a === 'boolean',\n  und: a => a === void 0,\n  arr: a => Array.isArray(a),\n  equ(a, b, {\n    arrays = 'shallow',\n    objects = 'reference',\n    strict = true\n  } = {}) {\n    // Wrong type or one of the two undefined, doesn't match\n    if (typeof a !== typeof b || !!a !== !!b) return false;\n    // Atomic, just compare a against b\n    if (is.str(a) || is.num(a) || is.boo(a)) return a === b;\n    const isObj = is.obj(a);\n    if (isObj && objects === 'reference') return a === b;\n    const isArr = is.arr(a);\n    if (isArr && arrays === 'reference') return a === b;\n    // Array or Object, shallow compare first to see if it's a match\n    if ((isArr || isObj) && a === b) return true;\n    // Last resort, go through keys\n    let i;\n    // Check if a has all the keys of b\n    for (i in a) if (!(i in b)) return false;\n    // Check if values between keys match\n    if (isObj && arrays === 'shallow' && objects === 'shallow') {\n      for (i in strict ? b : a) if (!is.equ(a[i], b[i], {\n        strict,\n        objects: 'reference'\n      })) return false;\n    } else {\n      for (i in strict ? b : a) if (a[i] !== b[i]) return false;\n    }\n    // If i is undefined\n    if (is.und(i)) {\n      // If both arrays are empty we consider them equal\n      if (isArr && a.length === 0 && b.length === 0) return true;\n      // If both objects are empty we consider them equal\n      if (isObj && Object.keys(a).length === 0 && Object.keys(b).length === 0) return true;\n      // Otherwise match them by value\n      if (a !== b) return false;\n    }\n    return true;\n  }\n};\n\n/**\r\n * Collects nodes and materials from a THREE.Object3D.\r\n */\nfunction buildGraph(object) {\n  const data = {\n    nodes: {},\n    materials: {}\n  };\n  if (object) {\n    object.traverse(obj => {\n      if (obj.name) data.nodes[obj.name] = obj;\n      if (obj.material && !data.materials[obj.material.name]) data.materials[obj.material.name] = obj.material;\n    });\n  }\n  return data;\n}\n\n// Disposes an object and all its properties\nfunction dispose(obj) {\n  if (obj.dispose && obj.type !== 'Scene') obj.dispose();\n  for (const p in obj) {\n    p.dispose == null ? void 0 : p.dispose();\n    delete obj[p];\n  }\n}\n\n// Each object in the scene carries a small LocalState descriptor\nfunction prepare(object, state) {\n  const instance = object;\n  instance.__r3f = {\n    type: '',\n    root: null,\n    previousAttach: null,\n    memoizedProps: {},\n    eventCount: 0,\n    handlers: {},\n    objects: [],\n    parent: null,\n    ...state\n  };\n  return object;\n}\nfunction resolve(instance, key) {\n  let target = instance;\n  if (key.includes('-')) {\n    const entries = key.split('-');\n    const last = entries.pop();\n    target = entries.reduce((acc, key) => acc[key], instance);\n    return {\n      target,\n      key: last\n    };\n  } else return {\n    target,\n    key\n  };\n}\n\n// Checks if a dash-cased string ends with an integer\nconst INDEX_REGEX = /-\\d+$/;\nfunction attach(parent, child, type) {\n  if (is.str(type)) {\n    // If attaching into an array (foo-0), create one\n    if (INDEX_REGEX.test(type)) {\n      const root = type.replace(INDEX_REGEX, '');\n      const {\n        target,\n        key\n      } = resolve(parent, root);\n      if (!Array.isArray(target[key])) target[key] = [];\n    }\n    const {\n      target,\n      key\n    } = resolve(parent, type);\n    child.__r3f.previousAttach = target[key];\n    target[key] = child;\n  } else child.__r3f.previousAttach = type(parent, child);\n}\nfunction detach(parent, child, type) {\n  var _child$__r3f, _child$__r3f2;\n  if (is.str(type)) {\n    const {\n      target,\n      key\n    } = resolve(parent, type);\n    const previous = child.__r3f.previousAttach;\n    // When the previous value was undefined, it means the value was never set to begin with\n    if (previous === undefined) delete target[key];\n    // Otherwise set the previous value\n    else target[key] = previous;\n  } else (_child$__r3f = child.__r3f) == null ? void 0 : _child$__r3f.previousAttach == null ? void 0 : _child$__r3f.previousAttach(parent, child);\n  (_child$__r3f2 = child.__r3f) == null ? true : delete _child$__r3f2.previousAttach;\n}\n// This function prepares a set of changes to be applied to the instance\nfunction diffProps(instance, {\n  children: cN,\n  key: kN,\n  ref: rN,\n  ...props\n}, {\n  children: cP,\n  key: kP,\n  ref: rP,\n  ...previous\n} = {}, remove = false) {\n  const localState = instance.__r3f;\n  const entries = Object.entries(props);\n  const changes = [];\n\n  // Catch removed props, prepend them so they can be reset or removed\n  if (remove) {\n    const previousKeys = Object.keys(previous);\n    for (let i = 0; i < previousKeys.length; i++) {\n      if (!props.hasOwnProperty(previousKeys[i])) entries.unshift([previousKeys[i], DEFAULT + 'remove']);\n    }\n  }\n  entries.forEach(([key, value]) => {\n    var _instance$__r3f;\n    // Bail out on primitive object\n    if ((_instance$__r3f = instance.__r3f) != null && _instance$__r3f.primitive && key === 'object') return;\n    // When props match bail out\n    if (is.equ(value, previous[key])) return;\n    // Collect handlers and bail out\n    if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(key)) return changes.push([key, value, true, []]);\n    // Split dashed props\n    let entries = [];\n    if (key.includes('-')) entries = key.split('-');\n    changes.push([key, value, false, entries]);\n\n    // Reset pierced props\n    for (const prop in props) {\n      const value = props[prop];\n      if (prop.startsWith(`${key}-`)) changes.push([prop, value, false, prop.split('-')]);\n    }\n  });\n  const memoized = {\n    ...props\n  };\n  if (localState != null && localState.memoizedProps && localState != null && localState.memoizedProps.args) memoized.args = localState.memoizedProps.args;\n  if (localState != null && localState.memoizedProps && localState != null && localState.memoizedProps.attach) memoized.attach = localState.memoizedProps.attach;\n  return {\n    memoized,\n    changes\n  };\n}\nconst __DEV__ = typeof process !== 'undefined' && process.env.NODE_ENV !== 'production';\n\n// This function applies a set of changes to the instance\nfunction applyProps$1(instance, data) {\n  var _instance$__r3f2;\n  // Filter equals, events and reserved props\n  const localState = instance.__r3f;\n  const root = localState == null ? void 0 : localState.root;\n  const rootState = root == null ? void 0 : root.getState == null ? void 0 : root.getState();\n  const {\n    memoized,\n    changes\n  } = isDiffSet(data) ? data : diffProps(instance, data);\n  const prevHandlers = localState == null ? void 0 : localState.eventCount;\n\n  // Prepare memoized props\n  if (instance.__r3f) instance.__r3f.memoizedProps = memoized;\n  for (let i = 0; i < changes.length; i++) {\n    let [key, value, isEvent, keys] = changes[i];\n\n    // Alias (output)encoding => (output)colorSpace (since r152)\n    // https://github.com/pmndrs/react-three-fiber/pull/2829\n    if (hasColorSpace(instance)) {\n      const sRGBEncoding = 3001;\n      const SRGBColorSpace = 'srgb';\n      const LinearSRGBColorSpace = 'srgb-linear';\n      if (key === 'encoding') {\n        key = 'colorSpace';\n        value = value === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n      } else if (key === 'outputEncoding') {\n        key = 'outputColorSpace';\n        value = value === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n      }\n    }\n    let currentInstance = instance;\n    let targetProp = currentInstance[key];\n\n    // Revolve dashed props\n    if (keys.length) {\n      targetProp = keys.reduce((acc, key) => acc[key], instance);\n      // If the target is atomic, it forces us to switch the root\n      if (!(targetProp && targetProp.set)) {\n        const [name, ...reverseEntries] = keys.reverse();\n        currentInstance = reverseEntries.reverse().reduce((acc, key) => acc[key], instance);\n        key = name;\n      }\n    }\n\n    // https://github.com/mrdoob/three.js/issues/21209\n    // HMR/fast-refresh relies on the ability to cancel out props, but threejs\n    // has no means to do this. Hence we curate a small collection of value-classes\n    // with their respective constructor/set arguments\n    // For removed props, try to set default values, if possible\n    if (value === DEFAULT + 'remove') {\n      if (currentInstance.constructor) {\n        // create a blank slate of the instance and copy the particular parameter.\n        let ctor = DEFAULTS.get(currentInstance.constructor);\n        if (!ctor) {\n          // @ts-expect-error\n          ctor = new currentInstance.constructor();\n          DEFAULTS.set(currentInstance.constructor, ctor);\n        }\n        value = ctor[key];\n      } else {\n        // instance does not have constructor, just set it to 0\n        value = 0;\n      }\n    }\n\n    // Deal with pointer events ...\n    if (isEvent && localState) {\n      if (value) localState.handlers[key] = value;else delete localState.handlers[key];\n      localState.eventCount = Object.keys(localState.handlers).length;\n    }\n    // Special treatment for objects with support for set/copy, and layers\n    else if (targetProp && targetProp.set && (targetProp.copy || targetProp instanceof THREE.Layers)) {\n      // If value is an array\n      if (Array.isArray(value)) {\n        if (targetProp.fromArray) targetProp.fromArray(value);else targetProp.set(...value);\n      }\n      // Test again target.copy(class) next ...\n      else if (targetProp.copy && value && value.constructor && (\n      // Some environments may break strict identity checks by duplicating versions of three.js.\n      // Loosen to unminified names, ignoring descendents.\n      // https://github.com/pmndrs/react-three-fiber/issues/2856\n      // TODO: fix upstream and remove in v9\n      __DEV__ ? targetProp.constructor.name === value.constructor.name : targetProp.constructor === value.constructor)) {\n        targetProp.copy(value);\n      }\n      // If nothing else fits, just set the single value, ignore undefined\n      // https://github.com/pmndrs/react-three-fiber/issues/274\n      else if (value !== undefined) {\n        const isColor = targetProp instanceof THREE.Color;\n        // Allow setting array scalars\n        if (!isColor && targetProp.setScalar) targetProp.setScalar(value);\n        // Layers have no copy function, we must therefore copy the mask property\n        else if (targetProp instanceof THREE.Layers && value instanceof THREE.Layers) targetProp.mask = value.mask;\n        // Otherwise just set ...\n        else targetProp.set(value);\n        // For versions of three which don't support THREE.ColorManagement,\n        // Auto-convert sRGB colors\n        // https://github.com/pmndrs/react-three-fiber/issues/344\n        if (!getColorManagement() && rootState && !rootState.linear && isColor) targetProp.convertSRGBToLinear();\n      }\n      // Else, just overwrite the value\n    } else {\n      currentInstance[key] = value;\n\n      // Auto-convert sRGB textures, for now ...\n      // https://github.com/pmndrs/react-three-fiber/issues/344\n      if (currentInstance[key] instanceof THREE.Texture &&\n      // sRGB textures must be RGBA8 since r137 https://github.com/mrdoob/three.js/pull/23129\n      currentInstance[key].format === THREE.RGBAFormat && currentInstance[key].type === THREE.UnsignedByteType && rootState) {\n        const texture = currentInstance[key];\n        if (hasColorSpace(texture) && hasColorSpace(rootState.gl)) texture.colorSpace = rootState.gl.outputColorSpace;else texture.encoding = rootState.gl.outputEncoding;\n      }\n    }\n    invalidateInstance(instance);\n  }\n  if (localState && localState.parent && instance.raycast && prevHandlers !== localState.eventCount) {\n    // Get the initial root state's internals\n    const internal = findInitialRoot(instance).getState().internal;\n    // Pre-emptively remove the instance from the interaction manager\n    const index = internal.interaction.indexOf(instance);\n    if (index > -1) internal.interaction.splice(index, 1);\n    // Add the instance to the interaction manager only when it has handlers\n    if (localState.eventCount) internal.interaction.push(instance);\n  }\n\n  // Call the update lifecycle when it is being updated, but only when it is part of the scene.\n  // Skip updates to the `onUpdate` prop itself\n  const isCircular = changes.length === 1 && changes[0][0] === 'onUpdate';\n  if (!isCircular && changes.length && (_instance$__r3f2 = instance.__r3f) != null && _instance$__r3f2.parent) updateInstance(instance);\n  return instance;\n}\nfunction invalidateInstance(instance) {\n  var _instance$__r3f3, _instance$__r3f3$root;\n  const state = (_instance$__r3f3 = instance.__r3f) == null ? void 0 : (_instance$__r3f3$root = _instance$__r3f3.root) == null ? void 0 : _instance$__r3f3$root.getState == null ? void 0 : _instance$__r3f3$root.getState();\n  if (state && state.internal.frames === 0) state.invalidate();\n}\nfunction updateInstance(instance) {\n  instance.onUpdate == null ? void 0 : instance.onUpdate(instance);\n}\nfunction updateCamera(camera, size) {\n  // https://github.com/pmndrs/react-three-fiber/issues/92\n  // Do not mess with the camera if it belongs to the user\n  if (!camera.manual) {\n    if (isOrthographicCamera(camera)) {\n      camera.left = size.width / -2;\n      camera.right = size.width / 2;\n      camera.top = size.height / 2;\n      camera.bottom = size.height / -2;\n    } else {\n      camera.aspect = size.width / size.height;\n    }\n    camera.updateProjectionMatrix();\n    // https://github.com/pmndrs/react-three-fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    camera.updateMatrixWorld();\n  }\n}\nfunction makeId(event) {\n  return (event.eventObject || event.object).uuid + '/' + event.index + event.instanceId;\n}\n\n// https://github.com/facebook/react/tree/main/packages/react-reconciler#getcurrenteventpriority\n// Gives React a clue as to how import the current interaction is\nfunction getEventPriority() {\n  var _globalScope$event;\n  // Get a handle to the current global scope in window and worker contexts if able\n  // https://github.com/pmndrs/react-three-fiber/pull/2493\n  const globalScope = typeof self !== 'undefined' && self || typeof window !== 'undefined' && window;\n  if (!globalScope) return DefaultEventPriority;\n  const name = (_globalScope$event = globalScope.event) == null ? void 0 : _globalScope$event.type;\n  switch (name) {\n    case 'click':\n    case 'contextmenu':\n    case 'dblclick':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointerup':\n      return DiscreteEventPriority;\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'pointerenter':\n    case 'pointerleave':\n    case 'wheel':\n      return ContinuousEventPriority;\n    default:\n      return DefaultEventPriority;\n  }\n}\n\n/**\r\n * Release pointer captures.\r\n * This is called by releasePointerCapture in the API, and when an object is removed.\r\n */\nfunction releaseInternalPointerCapture(capturedMap, obj, captures, pointerId) {\n  const captureData = captures.get(obj);\n  if (captureData) {\n    captures.delete(obj);\n    // If this was the last capturing object for this pointer\n    if (captures.size === 0) {\n      capturedMap.delete(pointerId);\n      captureData.target.releasePointerCapture(pointerId);\n    }\n  }\n}\nfunction removeInteractivity(store, object) {\n  const {\n    internal\n  } = store.getState();\n  // Removes every trace of an object from the data store\n  internal.interaction = internal.interaction.filter(o => o !== object);\n  internal.initialHits = internal.initialHits.filter(o => o !== object);\n  internal.hovered.forEach((value, key) => {\n    if (value.eventObject === object || value.object === object) {\n      // Clear out intersects, they are outdated by now\n      internal.hovered.delete(key);\n    }\n  });\n  internal.capturedMap.forEach((captures, pointerId) => {\n    releaseInternalPointerCapture(internal.capturedMap, object, captures, pointerId);\n  });\n}\nfunction createEvents(store) {\n  /** Calculates delta */\n  function calculateDistance(event) {\n    const {\n      internal\n    } = store.getState();\n    const dx = event.offsetX - internal.initialClick[0];\n    const dy = event.offsetY - internal.initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n  function filterPointerEvents(objects) {\n    return objects.filter(obj => ['Move', 'Over', 'Enter', 'Out', 'Leave'].some(name => {\n      var _r3f;\n      return (_r3f = obj.__r3f) == null ? void 0 : _r3f.handlers['onPointer' + name];\n    }));\n  }\n  function intersect(event, filter) {\n    const state = store.getState();\n    const duplicates = new Set();\n    const intersections = [];\n    // Allow callers to eliminate event objects\n    const eventsObjects = filter ? filter(state.internal.interaction) : state.internal.interaction;\n    // Reset all raycaster cameras to undefined\n    for (let i = 0; i < eventsObjects.length; i++) {\n      const state = getRootState(eventsObjects[i]);\n      if (state) {\n        state.raycaster.camera = undefined;\n      }\n    }\n    if (!state.previousRoot) {\n      // Make sure root-level pointer and ray are set up\n      state.events.compute == null ? void 0 : state.events.compute(event, state);\n    }\n    function handleRaycast(obj) {\n      const state = getRootState(obj);\n      // Skip event handling when noEvents is set, or when the raycasters camera is null\n      if (!state || !state.events.enabled || state.raycaster.camera === null) return [];\n\n      // When the camera is undefined we have to call the event layers update function\n      if (state.raycaster.camera === undefined) {\n        var _state$previousRoot;\n        state.events.compute == null ? void 0 : state.events.compute(event, state, (_state$previousRoot = state.previousRoot) == null ? void 0 : _state$previousRoot.getState());\n        // If the camera is still undefined we have to skip this layer entirely\n        if (state.raycaster.camera === undefined) state.raycaster.camera = null;\n      }\n\n      // Intersect object by object\n      return state.raycaster.camera ? state.raycaster.intersectObject(obj, true) : [];\n    }\n\n    // Collect events\n    let hits = eventsObjects\n    // Intersect objects\n    .flatMap(handleRaycast)\n    // Sort by event priority and distance\n    .sort((a, b) => {\n      const aState = getRootState(a.object);\n      const bState = getRootState(b.object);\n      if (!aState || !bState) return a.distance - b.distance;\n      return bState.events.priority - aState.events.priority || a.distance - b.distance;\n    })\n    // Filter out duplicates\n    .filter(item => {\n      const id = makeId(item);\n      if (duplicates.has(id)) return false;\n      duplicates.add(id);\n      return true;\n    });\n\n    // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order, this likely only makes sense on the root filter\n    if (state.events.filter) hits = state.events.filter(hits, state);\n\n    // Bubble up the events, find the event source (eventObject)\n    for (const hit of hits) {\n      let eventObject = hit.object;\n      // Bubble event up\n      while (eventObject) {\n        var _r3f2;\n        if ((_r3f2 = eventObject.__r3f) != null && _r3f2.eventCount) intersections.push({\n          ...hit,\n          eventObject\n        });\n        eventObject = eventObject.parent;\n      }\n    }\n\n    // If the interaction is captured, make all capturing targets part of the intersect.\n    if ('pointerId' in event && state.internal.capturedMap.has(event.pointerId)) {\n      for (let captureData of state.internal.capturedMap.get(event.pointerId).values()) {\n        if (!duplicates.has(makeId(captureData.intersection))) intersections.push(captureData.intersection);\n      }\n    }\n    return intersections;\n  }\n\n  /**  Handles intersections by forwarding them to handlers */\n  function handleIntersects(intersections, event, delta, callback) {\n    const rootState = store.getState();\n\n    // If anything has been found, forward it to the event listeners\n    if (intersections.length) {\n      const localState = {\n        stopped: false\n      };\n      for (const hit of intersections) {\n        const state = getRootState(hit.object) || rootState;\n        const {\n          raycaster,\n          pointer,\n          camera,\n          internal\n        } = state;\n        const unprojectedPoint = new THREE.Vector3(pointer.x, pointer.y, 0).unproject(camera);\n        const hasPointerCapture = id => {\n          var _internal$capturedMap, _internal$capturedMap2;\n          return (_internal$capturedMap = (_internal$capturedMap2 = internal.capturedMap.get(id)) == null ? void 0 : _internal$capturedMap2.has(hit.eventObject)) != null ? _internal$capturedMap : false;\n        };\n        const setPointerCapture = id => {\n          const captureData = {\n            intersection: hit,\n            target: event.target\n          };\n          if (internal.capturedMap.has(id)) {\n            // if the pointerId was previously captured, we add the hit to the\n            // event capturedMap.\n            internal.capturedMap.get(id).set(hit.eventObject, captureData);\n          } else {\n            // if the pointerId was not previously captured, we create a map\n            // containing the hitObject, and the hit. hitObject is used for\n            // faster access.\n            internal.capturedMap.set(id, new Map([[hit.eventObject, captureData]]));\n          }\n          event.target.setPointerCapture(id);\n        };\n        const releasePointerCapture = id => {\n          const captures = internal.capturedMap.get(id);\n          if (captures) {\n            releaseInternalPointerCapture(internal.capturedMap, hit.eventObject, captures, id);\n          }\n        };\n\n        // Add native event props\n        let extractEventProps = {};\n        // This iterates over the event's properties including the inherited ones. Native PointerEvents have most of their props as getters which are inherited, but polyfilled PointerEvents have them all as their own properties (i.e. not inherited). We can't use Object.keys() or Object.entries() as they only return \"own\" properties; nor Object.getPrototypeOf(event) as that *doesn't* return \"own\" properties, only inherited ones.\n        for (let prop in event) {\n          let property = event[prop];\n          // Only copy over atomics, leave functions alone as these should be\n          // called as event.nativeEvent.fn()\n          if (typeof property !== 'function') extractEventProps[prop] = property;\n        }\n        let raycastEvent = {\n          ...hit,\n          ...extractEventProps,\n          pointer,\n          intersections,\n          stopped: localState.stopped,\n          delta,\n          unprojectedPoint,\n          ray: raycaster.ray,\n          camera: camera,\n          // Hijack stopPropagation, which just sets a flag\n          stopPropagation() {\n            // https://github.com/pmndrs/react-three-fiber/issues/596\n            // Events are not allowed to stop propagation if the pointer has been captured\n            const capturesForPointer = 'pointerId' in event && internal.capturedMap.get(event.pointerId);\n\n            // We only authorize stopPropagation...\n            if (\n            // ...if this pointer hasn't been captured\n            !capturesForPointer ||\n            // ... or if the hit object is capturing the pointer\n            capturesForPointer.has(hit.eventObject)) {\n              raycastEvent.stopped = localState.stopped = true;\n              // Propagation is stopped, remove all other hover records\n              // An event handler is only allowed to flush other handlers if it is hovered itself\n              if (internal.hovered.size && Array.from(internal.hovered.values()).find(i => i.eventObject === hit.eventObject)) {\n                // Objects cannot flush out higher up objects that have already caught the event\n                const higher = intersections.slice(0, intersections.indexOf(hit));\n                cancelPointer([...higher, hit]);\n              }\n            }\n          },\n          // there should be a distinction between target and currentTarget\n          target: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          currentTarget: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          nativeEvent: event\n        };\n\n        // Call subscribers\n        callback(raycastEvent);\n        // Event bubbling may be interrupted by stopPropagation\n        if (localState.stopped === true) break;\n      }\n    }\n    return intersections;\n  }\n  function cancelPointer(intersections) {\n    const {\n      internal\n    } = store.getState();\n    for (const hoveredObj of internal.hovered.values()) {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (!intersections.length || !intersections.find(hit => hit.object === hoveredObj.object && hit.index === hoveredObj.index && hit.instanceId === hoveredObj.instanceId)) {\n        const eventObject = hoveredObj.eventObject;\n        const instance = eventObject.__r3f;\n        const handlers = instance == null ? void 0 : instance.handlers;\n        internal.hovered.delete(makeId(hoveredObj));\n        if (instance != null && instance.eventCount) {\n          // Clear out intersects, they are outdated by now\n          const data = {\n            ...hoveredObj,\n            intersections\n          };\n          handlers.onPointerOut == null ? void 0 : handlers.onPointerOut(data);\n          handlers.onPointerLeave == null ? void 0 : handlers.onPointerLeave(data);\n        }\n      }\n    }\n  }\n  function pointerMissed(event, objects) {\n    for (let i = 0; i < objects.length; i++) {\n      const instance = objects[i].__r3f;\n      instance == null ? void 0 : instance.handlers.onPointerMissed == null ? void 0 : instance.handlers.onPointerMissed(event);\n    }\n  }\n  function handlePointer(name) {\n    // Deal with cancelation\n    switch (name) {\n      case 'onPointerLeave':\n      case 'onPointerCancel':\n        return () => cancelPointer([]);\n      case 'onLostPointerCapture':\n        return event => {\n          const {\n            internal\n          } = store.getState();\n          if ('pointerId' in event && internal.capturedMap.has(event.pointerId)) {\n            // If the object event interface had onLostPointerCapture, we'd call it here on every\n            // object that's getting removed. We call it on the next frame because onLostPointerCapture\n            // fires before onPointerUp. Otherwise pointerUp would never be called if the event didn't\n            // happen in the object it originated from, leaving components in a in-between state.\n            requestAnimationFrame(() => {\n              // Only release if pointer-up didn't do it already\n              if (internal.capturedMap.has(event.pointerId)) {\n                internal.capturedMap.delete(event.pointerId);\n                cancelPointer([]);\n              }\n            });\n          }\n        };\n    }\n\n    // Any other pointer goes here ...\n    return function handleEvent(event) {\n      const {\n        onPointerMissed,\n        internal\n      } = store.getState();\n\n      // prepareRay(event)\n      internal.lastEvent.current = event;\n\n      // Get fresh intersects\n      const isPointerMove = name === 'onPointerMove';\n      const isClickEvent = name === 'onClick' || name === 'onContextMenu' || name === 'onDoubleClick';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = intersect(event, filter);\n      const delta = isClickEvent ? calculateDistance(event) : 0;\n\n      // Save initial coordinates on pointer-down\n      if (name === 'onPointerDown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map(hit => hit.eventObject);\n      }\n\n      // If a click yields no results, pass it back to the user as a miss\n      // Missed events have to come first in order to establish user-land side-effect clean up\n      if (isClickEvent && !hits.length) {\n        if (delta <= 2) {\n          pointerMissed(event, internal.interaction);\n          if (onPointerMissed) onPointerMissed(event);\n        }\n      }\n      // Take care of unhover\n      if (isPointerMove) cancelPointer(hits);\n      function onIntersect(data) {\n        const eventObject = data.eventObject;\n        const instance = eventObject.__r3f;\n        const handlers = instance == null ? void 0 : instance.handlers;\n\n        // Check presence of handlers\n        if (!(instance != null && instance.eventCount)) return;\n\n        /*\r\n        MAYBE TODO, DELETE IF NOT: \r\n          Check if the object is captured, captured events should not have intersects running in parallel\r\n          But wouldn't it be better to just replace capturedMap with a single entry?\r\n          Also, are we OK with straight up making picking up multiple objects impossible?\r\n          \r\n        const pointerId = (data as ThreeEvent<PointerEvent>).pointerId        \r\n        if (pointerId !== undefined) {\r\n          const capturedMeshSet = internal.capturedMap.get(pointerId)\r\n          if (capturedMeshSet) {\r\n            const captured = capturedMeshSet.get(eventObject)\r\n            if (captured && captured.localState.stopped) return\r\n          }\r\n        }*/\n\n        if (isPointerMove) {\n          // Move event ...\n          if (handlers.onPointerOver || handlers.onPointerEnter || handlers.onPointerOut || handlers.onPointerLeave) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.onPointerOver == null ? void 0 : handlers.onPointerOver(data);\n              handlers.onPointerEnter == null ? void 0 : handlers.onPointerEnter(data);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          }\n          // Call mouse move\n          handlers.onPointerMove == null ? void 0 : handlers.onPointerMove(data);\n        } else {\n          // All other events ...\n          const handler = handlers[name];\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (!isClickEvent || internal.initialHits.includes(eventObject)) {\n              // Missed events have to come first\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n              // Now call the handler\n              handler(data);\n            }\n          } else {\n            // Trigger onPointerMissed on all elements that have pointer over/out handlers, but not click and weren't hit\n            if (isClickEvent && internal.initialHits.includes(eventObject)) {\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n            }\n          }\n        }\n      }\n      handleIntersects(hits, event, delta, onIntersect);\n    };\n  }\n  return {\n    handlePointer\n  };\n}\n\n// Keys that shouldn't be copied between R3F stores\nconst privateKeys = ['set', 'get', 'setSize', 'setFrameloop', 'setDpr', 'events', 'invalidate', 'advance', 'size', 'viewport'];\nconst isRenderer = def => !!(def != null && def.render);\nconst context = /*#__PURE__*/React.createContext(null);\nconst createStore = (invalidate, advance) => {\n  const rootState = create((set, get) => {\n    const position = new THREE.Vector3();\n    const defaultTarget = new THREE.Vector3();\n    const tempTarget = new THREE.Vector3();\n    function getCurrentViewport(camera = get().camera, target = defaultTarget, size = get().size) {\n      const {\n        width,\n        height,\n        top,\n        left\n      } = size;\n      const aspect = width / height;\n      if (target instanceof THREE.Vector3) tempTarget.copy(target);else tempTarget.set(...target);\n      const distance = camera.getWorldPosition(position).distanceTo(tempTarget);\n      if (isOrthographicCamera(camera)) {\n        return {\n          width: width / camera.zoom,\n          height: height / camera.zoom,\n          top,\n          left,\n          factor: 1,\n          distance,\n          aspect\n        };\n      } else {\n        const fov = camera.fov * Math.PI / 180; // convert vertical fov to radians\n        const h = 2 * Math.tan(fov / 2) * distance; // visible height\n        const w = h * (width / height);\n        return {\n          width: w,\n          height: h,\n          top,\n          left,\n          factor: width / w,\n          distance,\n          aspect\n        };\n      }\n    }\n    let performanceTimeout = undefined;\n    const setPerformanceCurrent = current => set(state => ({\n      performance: {\n        ...state.performance,\n        current\n      }\n    }));\n    const pointer = new THREE.Vector2();\n    const rootState = {\n      set,\n      get,\n      // Mock objects that have to be configured\n      gl: null,\n      camera: null,\n      raycaster: null,\n      events: {\n        priority: 1,\n        enabled: true,\n        connected: false\n      },\n      xr: null,\n      scene: null,\n      invalidate: (frames = 1) => invalidate(get(), frames),\n      advance: (timestamp, runGlobalEffects) => advance(timestamp, runGlobalEffects, get()),\n      legacy: false,\n      linear: false,\n      flat: false,\n      controls: null,\n      clock: new THREE.Clock(),\n      pointer,\n      mouse: pointer,\n      frameloop: 'always',\n      onPointerMissed: undefined,\n      performance: {\n        current: 1,\n        min: 0.5,\n        max: 1,\n        debounce: 200,\n        regress: () => {\n          const state = get();\n          // Clear timeout\n          if (performanceTimeout) clearTimeout(performanceTimeout);\n          // Set lower bound performance\n          if (state.performance.current !== state.performance.min) setPerformanceCurrent(state.performance.min);\n          // Go back to upper bound performance after a while unless something regresses meanwhile\n          performanceTimeout = setTimeout(() => setPerformanceCurrent(get().performance.max), state.performance.debounce);\n        }\n      },\n      size: {\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        updateStyle: false\n      },\n      viewport: {\n        initialDpr: 0,\n        dpr: 0,\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        aspect: 0,\n        distance: 0,\n        factor: 0,\n        getCurrentViewport\n      },\n      setEvents: events => set(state => ({\n        ...state,\n        events: {\n          ...state.events,\n          ...events\n        }\n      })),\n      setSize: (width, height, updateStyle, top, left) => {\n        const camera = get().camera;\n        const size = {\n          width,\n          height,\n          top: top || 0,\n          left: left || 0,\n          updateStyle\n        };\n        set(state => ({\n          size,\n          viewport: {\n            ...state.viewport,\n            ...getCurrentViewport(camera, defaultTarget, size)\n          }\n        }));\n      },\n      setDpr: dpr => set(state => {\n        const resolved = calculateDpr(dpr);\n        return {\n          viewport: {\n            ...state.viewport,\n            dpr: resolved,\n            initialDpr: state.viewport.initialDpr || resolved\n          }\n        };\n      }),\n      setFrameloop: (frameloop = 'always') => {\n        const clock = get().clock;\n\n        // if frameloop === \"never\" clock.elapsedTime is updated using advance(timestamp)\n        clock.stop();\n        clock.elapsedTime = 0;\n        if (frameloop !== 'never') {\n          clock.start();\n          clock.elapsedTime = 0;\n        }\n        set(() => ({\n          frameloop\n        }));\n      },\n      previousRoot: undefined,\n      internal: {\n        active: false,\n        priority: 0,\n        frames: 0,\n        lastEvent: /*#__PURE__*/React.createRef(),\n        interaction: [],\n        hovered: new Map(),\n        subscribers: [],\n        initialClick: [0, 0],\n        initialHits: [],\n        capturedMap: new Map(),\n        subscribe: (ref, priority, store) => {\n          const internal = get().internal;\n          // If this subscription was given a priority, it takes rendering into its own hands\n          // For that reason we switch off automatic rendering and increase the manual flag\n          // As long as this flag is positive there can be no internal rendering at all\n          // because there could be multiple render subscriptions\n          internal.priority = internal.priority + (priority > 0 ? 1 : 0);\n          internal.subscribers.push({\n            ref,\n            priority,\n            store\n          });\n          // Register subscriber and sort layers from lowest to highest, meaning,\n          // highest priority renders last (on top of the other frames)\n          internal.subscribers = internal.subscribers.sort((a, b) => a.priority - b.priority);\n          return () => {\n            const internal = get().internal;\n            if (internal != null && internal.subscribers) {\n              // Decrease manual flag if this subscription had a priority\n              internal.priority = internal.priority - (priority > 0 ? 1 : 0);\n              // Remove subscriber from list\n              internal.subscribers = internal.subscribers.filter(s => s.ref !== ref);\n            }\n          };\n        }\n      }\n    };\n    return rootState;\n  });\n  const state = rootState.getState();\n  let oldSize = state.size;\n  let oldDpr = state.viewport.dpr;\n  let oldCamera = state.camera;\n  rootState.subscribe(() => {\n    const {\n      camera,\n      size,\n      viewport,\n      gl,\n      set\n    } = rootState.getState();\n\n    // Resize camera and renderer on changes to size and pixelratio\n    if (size.width !== oldSize.width || size.height !== oldSize.height || viewport.dpr !== oldDpr) {\n      var _size$updateStyle;\n      oldSize = size;\n      oldDpr = viewport.dpr;\n      // Update camera & renderer\n      updateCamera(camera, size);\n      gl.setPixelRatio(viewport.dpr);\n      const updateStyle = (_size$updateStyle = size.updateStyle) != null ? _size$updateStyle : typeof HTMLCanvasElement !== 'undefined' && gl.domElement instanceof HTMLCanvasElement;\n      gl.setSize(size.width, size.height, updateStyle);\n    }\n\n    // Update viewport once the camera changes\n    if (camera !== oldCamera) {\n      oldCamera = camera;\n      // Update viewport\n      set(state => ({\n        viewport: {\n          ...state.viewport,\n          ...state.viewport.getCurrentViewport(camera)\n        }\n      }));\n    }\n  });\n\n  // Invalidate on any change\n  rootState.subscribe(state => invalidate(state));\n\n  // Return root state\n  return rootState;\n};\nfunction createSubs(callback, subs) {\n  const sub = {\n    callback\n  };\n  subs.add(sub);\n  return () => void subs.delete(sub);\n}\nlet i;\nlet globalEffects = new Set();\nlet globalAfterEffects = new Set();\nlet globalTailEffects = new Set();\n\n/**\r\n * Adds a global render callback which is called each frame.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addEffect\r\n */\nconst addEffect = callback => createSubs(callback, globalEffects);\n\n/**\r\n * Adds a global after-render callback which is called each frame.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addAfterEffect\r\n */\nconst addAfterEffect = callback => createSubs(callback, globalAfterEffects);\n\n/**\r\n * Adds a global callback which is called when rendering stops.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addTail\r\n */\nconst addTail = callback => createSubs(callback, globalTailEffects);\nfunction run(effects, timestamp) {\n  if (!effects.size) return;\n  for (const {\n    callback\n  } of effects.values()) {\n    callback(timestamp);\n  }\n}\nfunction flushGlobalEffects(type, timestamp) {\n  switch (type) {\n    case 'before':\n      return run(globalEffects, timestamp);\n    case 'after':\n      return run(globalAfterEffects, timestamp);\n    case 'tail':\n      return run(globalTailEffects, timestamp);\n  }\n}\nlet subscribers;\nlet subscription;\nfunction render$1(timestamp, state, frame) {\n  // Run local effects\n  let delta = state.clock.getDelta();\n  // In frameloop='never' mode, clock times are updated using the provided timestamp\n  if (state.frameloop === 'never' && typeof timestamp === 'number') {\n    delta = timestamp - state.clock.elapsedTime;\n    state.clock.oldTime = state.clock.elapsedTime;\n    state.clock.elapsedTime = timestamp;\n  }\n  // Call subscribers (useFrame)\n  subscribers = state.internal.subscribers;\n  for (i = 0; i < subscribers.length; i++) {\n    subscription = subscribers[i];\n    subscription.ref.current(subscription.store.getState(), delta, frame);\n  }\n  // Render content\n  if (!state.internal.priority && state.gl.render) state.gl.render(state.scene, state.camera);\n  // Decrease frame count\n  state.internal.frames = Math.max(0, state.internal.frames - 1);\n  return state.frameloop === 'always' ? 1 : state.internal.frames;\n}\nfunction createLoop(roots) {\n  let running = false;\n  let useFrameInProgress = false;\n  let repeat;\n  let frame;\n  let state;\n  function loop(timestamp) {\n    frame = requestAnimationFrame(loop);\n    running = true;\n    repeat = 0;\n\n    // Run effects\n    flushGlobalEffects('before', timestamp);\n\n    // Render all roots\n    useFrameInProgress = true;\n    for (const root of roots.values()) {\n      var _state$gl$xr;\n      state = root.store.getState();\n      // If the frameloop is invalidated, do not run another frame\n      if (state.internal.active && (state.frameloop === 'always' || state.internal.frames > 0) && !((_state$gl$xr = state.gl.xr) != null && _state$gl$xr.isPresenting)) {\n        repeat += render$1(timestamp, state);\n      }\n    }\n    useFrameInProgress = false;\n\n    // Run after-effects\n    flushGlobalEffects('after', timestamp);\n\n    // Stop the loop if nothing invalidates it\n    if (repeat === 0) {\n      // Tail call effects, they are called when rendering stops\n      flushGlobalEffects('tail', timestamp);\n\n      // Flag end of operation\n      running = false;\n      return cancelAnimationFrame(frame);\n    }\n  }\n  function invalidate(state, frames = 1) {\n    var _state$gl$xr2;\n    if (!state) return roots.forEach(root => invalidate(root.store.getState(), frames));\n    if ((_state$gl$xr2 = state.gl.xr) != null && _state$gl$xr2.isPresenting || !state.internal.active || state.frameloop === 'never') return;\n    if (frames > 1) {\n      // legacy support for people using frames parameters\n      // Increase frames, do not go higher than 60\n      state.internal.frames = Math.min(60, state.internal.frames + frames);\n    } else {\n      if (useFrameInProgress) {\n        //called from within a useFrame, it means the user wants an additional frame\n        state.internal.frames = 2;\n      } else {\n        //the user need a new frame, no need to increment further than 1\n        state.internal.frames = 1;\n      }\n    }\n\n    // If the render-loop isn't active, start it\n    if (!running) {\n      running = true;\n      requestAnimationFrame(loop);\n    }\n  }\n  function advance(timestamp, runGlobalEffects = true, state, frame) {\n    if (runGlobalEffects) flushGlobalEffects('before', timestamp);\n    if (!state) for (const root of roots.values()) render$1(timestamp, root.store.getState());else render$1(timestamp, state, frame);\n    if (runGlobalEffects) flushGlobalEffects('after', timestamp);\n  }\n  return {\n    loop,\n    invalidate,\n    advance\n  };\n}\n\n/**\r\n * Exposes an object's {@link LocalState}.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#useInstanceHandle\r\n *\r\n * **Note**: this is an escape hatch to react-internal fields. Expect this to change significantly between versions.\r\n */\nfunction useInstanceHandle(ref) {\n  const instance = React.useRef(null);\n  useIsomorphicLayoutEffect(() => void (instance.current = ref.current.__r3f), [ref]);\n  return instance;\n}\nfunction useStore() {\n  const store = React.useContext(context);\n  if (!store) throw new Error('R3F: Hooks can only be used within the Canvas component!');\n  return store;\n}\n\n/**\r\n * Accesses R3F's internal state, containing renderer, canvas, scene, etc.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usethree\r\n */\nfunction useThree(selector = state => state, equalityFn) {\n  return useStore()(selector, equalityFn);\n}\n\n/**\r\n * Executes a callback before render in a shared frame loop.\r\n * Can order effects with render priority or manually render with a positive priority.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useframe\r\n */\nfunction useFrame(callback, renderPriority = 0) {\n  const store = useStore();\n  const subscribe = store.getState().internal.subscribe;\n  // Memoize ref\n  const ref = useMutableCallback(callback);\n  // Subscribe on mount, unsubscribe on unmount\n  useIsomorphicLayoutEffect(() => subscribe(ref, renderPriority, store), [renderPriority, subscribe, store]);\n  return null;\n}\n\n/**\r\n * Returns a node graph of an object with named nodes & materials.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usegraph\r\n */\nfunction useGraph(object) {\n  return React.useMemo(() => buildGraph(object), [object]);\n}\nconst memoizedLoaders = new WeakMap();\nfunction loadingFn(extensions, onProgress) {\n  return function (Proto, ...input) {\n    // Construct new loader and run extensions\n    let loader = memoizedLoaders.get(Proto);\n    if (!loader) {\n      loader = new Proto();\n      memoizedLoaders.set(Proto, loader);\n    }\n    if (extensions) extensions(loader);\n    // Go through the urls and load them\n    return Promise.all(input.map(input => new Promise((res, reject) => loader.load(input, data => {\n      if (data.scene) Object.assign(data, buildGraph(data.scene));\n      res(data);\n    }, onProgress, error => reject(new Error(`Could not load ${input}: ${error == null ? void 0 : error.message}`))))));\n  };\n}\n/**\r\n * Synchronously loads and caches assets with a three loader.\r\n *\r\n * Note: this hook's caller must be wrapped with `React.Suspense`\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useloader\r\n */\nfunction useLoader(Proto, input, extensions, onProgress) {\n  // Use suspense to load async assets\n  const keys = Array.isArray(input) ? input : [input];\n  const results = suspend(loadingFn(extensions, onProgress), [Proto, ...keys], {\n    equal: is.equ\n  });\n  // Return the object/s\n  return Array.isArray(input) ? results : results[0];\n}\n\n/**\r\n * Preloads an asset into cache as a side-effect.\r\n */\nuseLoader.preload = function (Proto, input, extensions) {\n  const keys = Array.isArray(input) ? input : [input];\n  return preload(loadingFn(extensions), [Proto, ...keys]);\n};\n\n/**\r\n * Removes a loaded asset from cache.\r\n */\nuseLoader.clear = function (Proto, input) {\n  const keys = Array.isArray(input) ? input : [input];\n  return clear([Proto, ...keys]);\n};\nconst roots = new Map();\nconst {\n  invalidate,\n  advance\n} = createLoop(roots);\nconst {\n  reconciler,\n  applyProps\n} = createRenderer(roots, getEventPriority);\nconst shallowLoose = {\n  objects: 'shallow',\n  strict: false\n};\nconst createRendererInstance = (gl, canvas) => {\n  const customRenderer = typeof gl === 'function' ? gl(canvas) : gl;\n  if (isRenderer(customRenderer)) return customRenderer;else return new THREE.WebGLRenderer({\n    powerPreference: 'high-performance',\n    canvas: canvas,\n    antialias: true,\n    alpha: true,\n    ...gl\n  });\n};\nfunction computeInitialSize(canvas, defaultSize) {\n  const defaultStyle = typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement;\n  if (defaultSize) {\n    const {\n      width,\n      height,\n      top,\n      left,\n      updateStyle = defaultStyle\n    } = defaultSize;\n    return {\n      width,\n      height,\n      top,\n      left,\n      updateStyle\n    };\n  } else if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement && canvas.parentElement) {\n    const {\n      width,\n      height,\n      top,\n      left\n    } = canvas.parentElement.getBoundingClientRect();\n    return {\n      width,\n      height,\n      top,\n      left,\n      updateStyle: defaultStyle\n    };\n  } else if (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return {\n      width: canvas.width,\n      height: canvas.height,\n      top: 0,\n      left: 0,\n      updateStyle: defaultStyle\n    };\n  }\n  return {\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  };\n}\nfunction createRoot(canvas) {\n  // Check against mistaken use of createRoot\n  const prevRoot = roots.get(canvas);\n  const prevFiber = prevRoot == null ? void 0 : prevRoot.fiber;\n  const prevStore = prevRoot == null ? void 0 : prevRoot.store;\n  if (prevRoot) console.warn('R3F.createRoot should only be called once!');\n\n  // Report when an error was detected in a previous render\n  // https://github.com/pmndrs/react-three-fiber/pull/2261\n  const logRecoverableError = typeof reportError === 'function' ?\n  // In modern browsers, reportError will dispatch an error event,\n  // emulating an uncaught JavaScript error.\n  reportError :\n  // In older browsers and test environments, fallback to console.error.\n  console.error;\n\n  // Create store\n  const store = prevStore || createStore(invalidate, advance);\n  // Create renderer\n  const fiber = prevFiber || reconciler.createContainer(store, ConcurrentRoot, null, false, null, '', logRecoverableError, null);\n  // Map it\n  if (!prevRoot) roots.set(canvas, {\n    fiber,\n    store\n  });\n\n  // Locals\n  let onCreated;\n  let configured = false;\n  let lastCamera;\n  return {\n    configure(props = {}) {\n      let {\n        gl: glConfig,\n        size: propsSize,\n        scene: sceneOptions,\n        events,\n        onCreated: onCreatedCallback,\n        shadows = false,\n        linear = false,\n        flat = false,\n        legacy = false,\n        orthographic = false,\n        frameloop = 'always',\n        dpr = [1, 2],\n        performance,\n        raycaster: raycastOptions,\n        camera: cameraOptions,\n        onPointerMissed\n      } = props;\n      let state = store.getState();\n\n      // Set up renderer (one time only!)\n      let gl = state.gl;\n      if (!state.gl) state.set({\n        gl: gl = createRendererInstance(glConfig, canvas)\n      });\n\n      // Set up raycaster (one time only!)\n      let raycaster = state.raycaster;\n      if (!raycaster) state.set({\n        raycaster: raycaster = new THREE.Raycaster()\n      });\n\n      // Set raycaster options\n      const {\n        params,\n        ...options\n      } = raycastOptions || {};\n      if (!is.equ(options, raycaster, shallowLoose)) applyProps(raycaster, {\n        ...options\n      });\n      if (!is.equ(params, raycaster.params, shallowLoose)) applyProps(raycaster, {\n        params: {\n          ...raycaster.params,\n          ...params\n        }\n      });\n\n      // Create default camera, don't overwrite any user-set state\n      if (!state.camera || state.camera === lastCamera && !is.equ(lastCamera, cameraOptions, shallowLoose)) {\n        lastCamera = cameraOptions;\n        const isCamera = cameraOptions instanceof THREE.Camera;\n        const camera = isCamera ? cameraOptions : orthographic ? new THREE.OrthographicCamera(0, 0, 0, 0, 0.1, 1000) : new THREE.PerspectiveCamera(75, 0, 0.1, 1000);\n        if (!isCamera) {\n          camera.position.z = 5;\n          if (cameraOptions) {\n            applyProps(camera, cameraOptions);\n            // Preserve user-defined frustum if possible\n            // https://github.com/pmndrs/react-three-fiber/issues/3160\n            if ('aspect' in cameraOptions || 'left' in cameraOptions || 'right' in cameraOptions || 'bottom' in cameraOptions || 'top' in cameraOptions) {\n              camera.manual = true;\n              camera.updateProjectionMatrix();\n            }\n          }\n          // Always look at center by default\n          if (!state.camera && !(cameraOptions != null && cameraOptions.rotation)) camera.lookAt(0, 0, 0);\n        }\n        state.set({\n          camera\n        });\n\n        // Configure raycaster\n        // https://github.com/pmndrs/react-xr/issues/300\n        raycaster.camera = camera;\n      }\n\n      // Set up scene (one time only!)\n      if (!state.scene) {\n        let scene;\n        if (sceneOptions instanceof THREE.Scene) {\n          scene = sceneOptions;\n        } else {\n          scene = new THREE.Scene();\n          if (sceneOptions) applyProps(scene, sceneOptions);\n        }\n        state.set({\n          scene: prepare(scene)\n        });\n      }\n\n      // Set up XR (one time only!)\n      if (!state.xr) {\n        var _gl$xr;\n        // Handle frame behavior in WebXR\n        const handleXRFrame = (timestamp, frame) => {\n          const state = store.getState();\n          if (state.frameloop === 'never') return;\n          advance(timestamp, true, state, frame);\n        };\n\n        // Toggle render switching on session\n        const handleSessionChange = () => {\n          const state = store.getState();\n          state.gl.xr.enabled = state.gl.xr.isPresenting;\n          state.gl.xr.setAnimationLoop(state.gl.xr.isPresenting ? handleXRFrame : null);\n          if (!state.gl.xr.isPresenting) invalidate(state);\n        };\n\n        // WebXR session manager\n        const xr = {\n          connect() {\n            const gl = store.getState().gl;\n            gl.xr.addEventListener('sessionstart', handleSessionChange);\n            gl.xr.addEventListener('sessionend', handleSessionChange);\n          },\n          disconnect() {\n            const gl = store.getState().gl;\n            gl.xr.removeEventListener('sessionstart', handleSessionChange);\n            gl.xr.removeEventListener('sessionend', handleSessionChange);\n          }\n        };\n\n        // Subscribe to WebXR session events\n        if (typeof ((_gl$xr = gl.xr) == null ? void 0 : _gl$xr.addEventListener) === 'function') xr.connect();\n        state.set({\n          xr\n        });\n      }\n\n      // Set shadowmap\n      if (gl.shadowMap) {\n        const oldEnabled = gl.shadowMap.enabled;\n        const oldType = gl.shadowMap.type;\n        gl.shadowMap.enabled = !!shadows;\n        if (is.boo(shadows)) {\n          gl.shadowMap.type = THREE.PCFSoftShadowMap;\n        } else if (is.str(shadows)) {\n          var _types$shadows;\n          const types = {\n            basic: THREE.BasicShadowMap,\n            percentage: THREE.PCFShadowMap,\n            soft: THREE.PCFSoftShadowMap,\n            variance: THREE.VSMShadowMap\n          };\n          gl.shadowMap.type = (_types$shadows = types[shadows]) != null ? _types$shadows : THREE.PCFSoftShadowMap;\n        } else if (is.obj(shadows)) {\n          Object.assign(gl.shadowMap, shadows);\n        }\n        if (oldEnabled !== gl.shadowMap.enabled || oldType !== gl.shadowMap.type) gl.shadowMap.needsUpdate = true;\n      }\n\n      // Safely set color management if available.\n      // Avoid accessing THREE.ColorManagement to play nice with older versions\n      const ColorManagement = getColorManagement();\n      if (ColorManagement) {\n        if ('enabled' in ColorManagement) ColorManagement.enabled = !legacy;else if ('legacyMode' in ColorManagement) ColorManagement.legacyMode = legacy;\n      }\n      if (!configured) {\n        // Set color space and tonemapping preferences, once\n        const LinearEncoding = 3000;\n        const sRGBEncoding = 3001;\n        applyProps(gl, {\n          outputEncoding: linear ? LinearEncoding : sRGBEncoding,\n          toneMapping: flat ? THREE.NoToneMapping : THREE.ACESFilmicToneMapping\n        });\n      }\n\n      // Update color management state\n      if (state.legacy !== legacy) state.set(() => ({\n        legacy\n      }));\n      if (state.linear !== linear) state.set(() => ({\n        linear\n      }));\n      if (state.flat !== flat) state.set(() => ({\n        flat\n      }));\n\n      // Set gl props\n      if (glConfig && !is.fun(glConfig) && !isRenderer(glConfig) && !is.equ(glConfig, gl, shallowLoose)) applyProps(gl, glConfig);\n      // Store events internally\n      if (events && !state.events.handlers) state.set({\n        events: events(store)\n      });\n      // Check size, allow it to take on container bounds initially\n      const size = computeInitialSize(canvas, propsSize);\n      if (!is.equ(size, state.size, shallowLoose)) {\n        state.setSize(size.width, size.height, size.updateStyle, size.top, size.left);\n      }\n      // Check pixelratio\n      if (dpr && state.viewport.dpr !== calculateDpr(dpr)) state.setDpr(dpr);\n      // Check frameloop\n      if (state.frameloop !== frameloop) state.setFrameloop(frameloop);\n      // Check pointer missed\n      if (!state.onPointerMissed) state.set({\n        onPointerMissed\n      });\n      // Check performance\n      if (performance && !is.equ(performance, state.performance, shallowLoose)) state.set(state => ({\n        performance: {\n          ...state.performance,\n          ...performance\n        }\n      }));\n\n      // Set locals\n      onCreated = onCreatedCallback;\n      configured = true;\n      return this;\n    },\n    render(children) {\n      // The root has to be configured before it can be rendered\n      if (!configured) this.configure();\n      reconciler.updateContainer(/*#__PURE__*/jsx(SceneObject, {\n        store: store,\n        children: children,\n        onCreated: onCreated,\n        rootElement: canvas,\n        __component: Provider,\n        __meta: {\n          \"path\": \"\",\n          \"name\": \"unknown\",\n          \"line\": -2,\n          \"column\": -2\n        }\n      }), fiber, null, () => undefined);\n      return store;\n    },\n    unmount() {\n      unmountComponentAtNode(canvas);\n    }\n  };\n}\nfunction render(children, canvas, config) {\n  console.warn('R3F.render is no longer supported in React 18. Use createRoot instead!');\n  const root = createRoot(canvas);\n  root.configure(config);\n  return root.render(children);\n}\nfunction Provider({\n  store,\n  children,\n  onCreated,\n  rootElement\n}) {\n  useIsomorphicLayoutEffect(() => {\n    const state = store.getState();\n    // Flag the canvas active, rendering will now begin\n    state.set(state => ({\n      internal: {\n        ...state.internal,\n        active: true\n      }\n    }));\n    // Notifiy that init is completed, the scene graph exists, but nothing has yet rendered\n    if (onCreated) onCreated(state);\n    // Connect events to the targets parent, this is done to ensure events are registered on\n    // a shared target, and not on the canvas itself\n    if (!store.getState().events.connected) state.events.connect == null ? void 0 : state.events.connect(rootElement);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/jsx(SceneObject, {\n    value: store,\n    children: children,\n    __component: context.Provider,\n    __meta: {\n      \"path\": \"\",\n      \"name\": \"unknown\",\n      \"line\": -2,\n      \"column\": -2\n    }\n  });\n}\nfunction unmountComponentAtNode(canvas, callback) {\n  const root = roots.get(canvas);\n  const fiber = root == null ? void 0 : root.fiber;\n  if (fiber) {\n    const state = root == null ? void 0 : root.store.getState();\n    if (state) state.internal.active = false;\n    reconciler.updateContainer(null, fiber, null, () => {\n      if (state) {\n        setTimeout(() => {\n          try {\n            var _state$gl, _state$gl$renderLists, _state$gl2, _state$gl3;\n            state.events.disconnect == null ? void 0 : state.events.disconnect();\n            (_state$gl = state.gl) == null ? void 0 : (_state$gl$renderLists = _state$gl.renderLists) == null ? void 0 : _state$gl$renderLists.dispose == null ? void 0 : _state$gl$renderLists.dispose();\n            (_state$gl2 = state.gl) == null ? void 0 : _state$gl2.forceContextLoss == null ? void 0 : _state$gl2.forceContextLoss();\n            if ((_state$gl3 = state.gl) != null && _state$gl3.xr) state.xr.disconnect();\n            dispose(state);\n            roots.delete(canvas);\n            if (callback) callback(canvas);\n          } catch (e) {\n            /* ... */\n          }\n        }, 500);\n      }\n    });\n  }\n}\nfunction createPortal(children, container, state) {\n  return /*#__PURE__*/jsx(SceneObject, {\n    children: children,\n    container: container,\n    state: state,\n    __component: Portal,\n    __meta: {\n      \"path\": \"\",\n      \"name\": \"unknown\",\n      \"line\": -2,\n      \"column\": -2\n    }\n  }, container.uuid);\n}\nfunction Portal({\n  state = {},\n  children,\n  container\n}) {\n  /** This has to be a component because it would not be able to call useThree/useStore otherwise since\r\n   *  if this is our environment, then we are not in r3f's renderer but in react-dom, it would trigger\r\n   *  the \"R3F hooks can only be used within the Canvas component!\" warning:\r\n   *  <Canvas>\r\n   *    {createPortal(...)} */\n  const {\n    events,\n    size,\n    ...rest\n  } = state;\n  const previousRoot = useStore();\n  const [raycaster] = React.useState(() => new THREE.Raycaster());\n  const [pointer] = React.useState(() => new THREE.Vector2());\n  const inject = React.useCallback((rootState, injectState) => {\n    const intersect = {\n      ...rootState\n    }; // all prev state props\n\n    // Only the fields of \"rootState\" that do not differ from injectState\n    // Some props should be off-limits\n    // Otherwise filter out the props that are different and let the inject layer take precedence\n    Object.keys(rootState).forEach(key => {\n      if (\n      // Some props should be off-limits\n      privateKeys.includes(key) ||\n      // Otherwise filter out the props that are different and let the inject layer take precedence\n      // Unless the inject layer props is undefined, then we keep the root layer\n      rootState[key] !== injectState[key] && injectState[key]) {\n        delete intersect[key];\n      }\n    });\n    let viewport = undefined;\n    if (injectState && size) {\n      const camera = injectState.camera;\n      // Calculate the override viewport, if present\n      viewport = rootState.viewport.getCurrentViewport(camera, new THREE.Vector3(), size);\n      // Update the portal camera, if it differs from the previous layer\n      if (camera !== rootState.camera) updateCamera(camera, size);\n    }\n    return {\n      // The intersect consists of the previous root state\n      ...intersect,\n      // Portals have their own scene, which forms the root, a raycaster and a pointer\n      scene: container,\n      raycaster,\n      pointer,\n      mouse: pointer,\n      // Their previous root is the layer before it\n      previousRoot,\n      // Events, size and viewport can be overridden by the inject layer\n      events: {\n        ...rootState.events,\n        ...(injectState == null ? void 0 : injectState.events),\n        ...events\n      },\n      size: {\n        ...rootState.size,\n        ...size\n      },\n      viewport: {\n        ...rootState.viewport,\n        ...viewport\n      },\n      ...rest\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [state]);\n  const [usePortalStore] = React.useState(() => {\n    // Create a mirrored store, based on the previous root with a few overrides ...\n    const previousState = previousRoot.getState();\n    const store = create((set, get) => ({\n      ...previousState,\n      scene: container,\n      raycaster,\n      pointer,\n      mouse: pointer,\n      previousRoot,\n      events: {\n        ...previousState.events,\n        ...events\n      },\n      size: {\n        ...previousState.size,\n        ...size\n      },\n      ...rest,\n      // Set and get refer to this root-state\n      set,\n      get,\n      // Layers are allowed to override events\n      setEvents: events => set(state => ({\n        ...state,\n        events: {\n          ...state.events,\n          ...events\n        }\n      }))\n    }));\n    return store;\n  });\n  React.useEffect(() => {\n    // Subscribe to previous root-state and copy changes over to the mirrored portal-state\n    const unsub = previousRoot.subscribe(prev => usePortalStore.setState(state => inject(prev, state)));\n    return () => {\n      unsub();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inject]);\n  React.useEffect(() => {\n    usePortalStore.setState(injectState => inject(previousRoot.getState(), injectState));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inject]);\n  React.useEffect(() => {\n    return () => {\n      usePortalStore.destroy();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/jsx(SceneObject, {\n    children: reconciler.createPortal(/*#__PURE__*/jsx(SceneObject, {\n      value: usePortalStore,\n      children: children,\n      __component: context.Provider,\n      __meta: {\n        \"path\": \"\",\n        \"name\": \"unknown\",\n        \"line\": -2,\n        \"column\": -2\n      }\n    }), usePortalStore, null),\n    __component: Fragment,\n    __meta: {\n      \"path\": \"\",\n      \"name\": \"unknown\",\n      \"line\": -2,\n      \"column\": -2\n    }\n  });\n}\n\n/**\r\n * Force React to flush any updates inside the provided callback synchronously and immediately.\r\n * All the same caveats documented for react-dom's `flushSync` apply here (see https://react.dev/reference/react-dom/flushSync).\r\n * Nevertheless, sometimes one needs to render synchronously, for example to keep DOM and 3D changes in lock-step without\r\n * having to revert to a non-React solution.\r\n */\nfunction flushSync(fn) {\n  // `flushSync` implementation only takes one argument. I don't know what's up with the type declaration for it.\n  return reconciler.flushSync(fn, undefined);\n}\nreconciler.injectIntoDevTools({\n  bundleType: process.env.NODE_ENV === 'production' ? 0 : 1,\n  rendererPackageName: '@react-three/fiber',\n  version: React.version\n});\nconst act = React.unstable_act;\nconst DOM_EVENTS = {\n  onClick: ['click', false],\n  onContextMenu: ['contextmenu', false],\n  onDoubleClick: ['dblclick', false],\n  onWheel: ['wheel', true],\n  onPointerDown: ['pointerdown', true],\n  onPointerUp: ['pointerup', true],\n  onPointerLeave: ['pointerleave', true],\n  onPointerMove: ['pointermove', true],\n  onPointerCancel: ['pointercancel', true],\n  onLostPointerCapture: ['lostpointercapture', true]\n};\n\n/** Default R3F event manager for web */\nfunction createPointerEvents(store) {\n  const {\n    handlePointer\n  } = createEvents(store);\n  return {\n    priority: 1,\n    enabled: true,\n    compute(event, state, previous) {\n      // https://github.com/pmndrs/react-three-fiber/pull/782\n      // Events trigger outside of canvas when moved, use offsetX/Y by default and allow overrides\n      state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    },\n    connected: undefined,\n    handlers: Object.keys(DOM_EVENTS).reduce((acc, key) => ({\n      ...acc,\n      [key]: handlePointer(key)\n    }), {}),\n    update: () => {\n      var _internal$lastEvent;\n      const {\n        events,\n        internal\n      } = store.getState();\n      if ((_internal$lastEvent = internal.lastEvent) != null && _internal$lastEvent.current && events.handlers) events.handlers.onPointerMove(internal.lastEvent.current);\n    },\n    connect: target => {\n      var _events$handlers;\n      const {\n        set,\n        events\n      } = store.getState();\n      events.disconnect == null ? void 0 : events.disconnect();\n      set(state => ({\n        events: {\n          ...state.events,\n          connected: target\n        }\n      }));\n      Object.entries((_events$handlers = events.handlers) != null ? _events$handlers : []).forEach(([name, event]) => {\n        const [eventName, passive] = DOM_EVENTS[name];\n        target.addEventListener(eventName, event, {\n          passive\n        });\n      });\n    },\n    disconnect: () => {\n      const {\n        set,\n        events\n      } = store.getState();\n      if (events.connected) {\n        var _events$handlers2;\n        Object.entries((_events$handlers2 = events.handlers) != null ? _events$handlers2 : []).forEach(([name, event]) => {\n          if (events && events.connected instanceof HTMLElement) {\n            const [eventName] = DOM_EVENTS[name];\n            events.connected.removeEventListener(eventName, event);\n          }\n        });\n        set(state => ({\n          events: {\n            ...state.events,\n            connected: undefined\n          }\n        }));\n      }\n    }\n  };\n}\nexport { useInstanceHandle as A, Block as B, useStore as C, useThree as D, ErrorBoundary as E, useFrame as F, useGraph as G, useLoader as H, useIsomorphicLayoutEffect as a, createRoot as b, createPointerEvents as c, unmountComponentAtNode as d, extend as e, createEvents as f, context as g, createPortal as h, isRef as i, reconciler as j, applyProps as k, dispose as l, invalidate as m, advance as n, addEffect as o, addAfterEffect as p, addTail as q, render as r, flushGlobalEffects as s, threeTypes as t, useMutableCallback as u, flushSync as v, getRootState as w, act as x, buildGraph as y, roots as z };", "import { useReducer, useRef, useDebugValue, useEffect, useLayoutEffect } from 'react';\n\nfunction createStore(createState) {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribeWithSelector = (listener, selector = getState, equalityFn = Object.is) => {\n    console.warn(\"[DEPRECATED] Please use `subscribeWithSelector` middleware\");\n    let currentSlice = selector(state);\n    function listenerToAdd() {\n      const nextSlice = selector(state);\n      if (!equalityFn(currentSlice, nextSlice)) {\n        const previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, previousSlice);\n      }\n    }\n    listeners.add(listenerToAdd);\n    return () => listeners.delete(listenerToAdd);\n  };\n  const subscribe = (listener, selector, equalityFn) => {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => listeners.clear();\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nconst isSSR = typeof window === \"undefined\" || !window.navigator || /ServerSideRendering|^Deno\\//.test(window.navigator.userAgent);\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\nfunction create(createState) {\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useStore = (selector = api.getState, equalityFn = Object.is) => {\n    const [, forceUpdate] = useReducer((c) => c + 1, 0);\n    const state = api.getState();\n    const stateRef = useRef(state);\n    const selectorRef = useRef(selector);\n    const equalityFnRef = useRef(equalityFn);\n    const erroredRef = useRef(false);\n    const currentSliceRef = useRef();\n    if (currentSliceRef.current === void 0) {\n      currentSliceRef.current = selector(state);\n    }\n    let newStateSlice;\n    let hasNewStateSlice = false;\n    if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {\n      newStateSlice = selector(state);\n      hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);\n    }\n    useIsomorphicLayoutEffect(() => {\n      if (hasNewStateSlice) {\n        currentSliceRef.current = newStateSlice;\n      }\n      stateRef.current = state;\n      selectorRef.current = selector;\n      equalityFnRef.current = equalityFn;\n      erroredRef.current = false;\n    });\n    const stateBeforeSubscriptionRef = useRef(state);\n    useIsomorphicLayoutEffect(() => {\n      const listener = () => {\n        try {\n          const nextState = api.getState();\n          const nextStateSlice = selectorRef.current(nextState);\n          if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {\n            stateRef.current = nextState;\n            currentSliceRef.current = nextStateSlice;\n            forceUpdate();\n          }\n        } catch (error) {\n          erroredRef.current = true;\n          forceUpdate();\n        }\n      };\n      const unsubscribe = api.subscribe(listener);\n      if (api.getState() !== stateBeforeSubscriptionRef.current) {\n        listener();\n      }\n      return unsubscribe;\n    }, []);\n    const sliceToReturn = hasNewStateSlice ? newStateSlice : currentSliceRef.current;\n    useDebugValue(sliceToReturn);\n    return sliceToReturn;\n  };\n  Object.assign(useStore, api);\n  useStore[Symbol.iterator] = function() {\n    console.warn(\"[useStore, api] = create() is deprecated and will be removed in v4\");\n    const items = [useStore, api];\n    return {\n      next() {\n        const done = items.length <= 0;\n        return { value: items.shift(), done };\n      }\n    };\n  };\n  return useStore;\n}\n\nexport { create as default };\n", "const isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys = null, preload = false, config = {}) {\n  // If no keys were given, the function is the key\n  if (keys === null) keys = [fn];\n\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n    ).then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };\n", "import { c as createPointerEvents, e as extend, u as useMutableCallback, a as useIsomorphicLayoutEffect, b as createRoot, i as isRef, E as ErrorBoundary, B as Block, d as unmountComponentAtNode } from './events-3515660a.esm.js';\nexport { t as ReactThreeFiber, z as _roots, x as act, p as addAfterEffect, o as addEffect, q as addTail, n as advance, k as applyProps, y as buildGraph, g as context, f as createEvents, c as createPointerEvents, h as createPortal, b as createRoot, l as dispose, c as events, e as extend, s as flushGlobalEffects, v as flushSync, w as getRootState, m as invalidate, j as reconciler, r as render, d as unmountComponentAtNode, F as useFrame, G as useGraph, A as useInstanceHandle, H as useLoader, C as useStore, D as useThree } from './events-3515660a.esm.js';\nimport * as React from 'react';\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport * as THREE from 'three';\nimport createDebounce from 'debounce';\nimport { FiberProvider, useContextBridge } from 'its-fine';\nimport { jsx } from 'react/jsx-runtime';\nimport 'react-reconciler/constants';\nimport 'zustand';\nimport 'suspend-react';\nimport 'react-reconciler';\nimport 'scheduler';\n\n/* eslint-disable react-hooks/rules-of-hooks */\nfunction useMeasure({\n  debounce,\n  scroll,\n  polyfill,\n  offsetSize\n} = {\n  debounce: 0,\n  scroll: false,\n  offsetSize: false\n}) {\n  const ResizeObserver = polyfill || typeof window !== 'undefined' && window.ResizeObserver;\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  });\n\n  // In test mode\n  if (!ResizeObserver) {\n    // @ts-ignore\n    bounds.width = 1280;\n    // @ts-ignore\n    bounds.height = 800;\n    return [() => {}, bounds, () => {}];\n  }\n\n  // keep all state in a ref\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  });\n\n  // set actual debounce values early, so effects know if they should react accordingly\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null;\n\n  // make sure to update state only as long as the component is truly mounted\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  });\n\n  // memoize handlers, so event-listeners know when they should update\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]);\n\n  // cleanup current scroll-listeners / observers\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  }\n\n  // add scroll-listeners / observers\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  }\n\n  // the ref we expose to the user\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  };\n\n  // add general event listeners\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange);\n\n  // respond to changes that are relevant for the listeners\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]);\n\n  // remove all listeners when the components unmounts\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n}\n\n// Adds native resize listener to window\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n}\n\n// Returns a list of scroll offsets\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n}\n\n// Checks if element boundaries are equal\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\nconst CanvasImpl = /*#__PURE__*/React.forwardRef(function Canvas({\n  children,\n  fallback,\n  resize,\n  style,\n  gl,\n  events = createPointerEvents,\n  eventSource,\n  eventPrefix,\n  shadows,\n  linear,\n  flat,\n  legacy,\n  orthographic,\n  frameloop,\n  dpr,\n  performance,\n  raycaster,\n  camera,\n  scene,\n  onPointerMissed,\n  onCreated,\n  ...props\n}, forwardedRef) {\n  // Create a known catalogue of Threejs-native elements\n  // This will include the entire THREE namespace by default, users can extend\n  // their own elements by using the createRoot API instead\n  React.useMemo(() => extend(THREE), []);\n  const Bridge = useContextBridge();\n  const [containerRef, containerRect] = useMeasure({\n    scroll: true,\n    debounce: {\n      scroll: 50,\n      resize: 0\n    },\n    ...resize\n  });\n  const canvasRef = React.useRef(null);\n  const divRef = React.useRef(null);\n  React.useImperativeHandle(forwardedRef, () => canvasRef.current);\n  const handlePointerMissed = useMutableCallback(onPointerMissed);\n  const [block, setBlock] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  // Suspend this component if block is a promise (2nd run)\n  if (block) throw block;\n  // Throw exception outwards if anything within canvas throws\n  if (error) throw error;\n  const root = React.useRef(null);\n  useIsomorphicLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    if (containerRect.width > 0 && containerRect.height > 0 && canvas) {\n      if (!root.current) root.current = createRoot(canvas);\n      root.current.configure({\n        gl,\n        events,\n        shadows,\n        linear,\n        flat,\n        legacy,\n        orthographic,\n        frameloop,\n        dpr,\n        performance,\n        raycaster,\n        camera,\n        scene,\n        size: containerRect,\n        // Pass mutable reference to onPointerMissed so it's free to update\n        onPointerMissed: (...args) => handlePointerMissed.current == null ? void 0 : handlePointerMissed.current(...args),\n        onCreated: state => {\n          // Connect to event source\n          state.events.connect == null ? void 0 : state.events.connect(eventSource ? isRef(eventSource) ? eventSource.current : eventSource : divRef.current);\n          // Set up compute function\n          if (eventPrefix) {\n            state.setEvents({\n              compute: (event, state) => {\n                const x = event[eventPrefix + 'X'];\n                const y = event[eventPrefix + 'Y'];\n                state.pointer.set(x / state.size.width * 2 - 1, -(y / state.size.height) * 2 + 1);\n                state.raycaster.setFromCamera(state.pointer, state.camera);\n              }\n            });\n          }\n          // Call onCreated callback\n          onCreated == null ? void 0 : onCreated(state);\n        }\n      });\n      root.current.render(/*#__PURE__*/jsx(SceneObject, {\n        children: /*#__PURE__*/jsx(SceneObject, {\n          set: setError,\n          children: /*#__PURE__*/jsx(SceneObject, {\n            fallback: /*#__PURE__*/jsx(SceneObject, {\n              set: setBlock,\n              __component: Block,\n              __meta: {\n                \"path\": \"\",\n                \"name\": \"unknown\",\n                \"line\": -2,\n                \"column\": -2\n              }\n            }),\n            children: children,\n            __component: React.Suspense,\n            __meta: {\n              \"path\": \"\",\n              \"name\": \"unknown\",\n              \"line\": -2,\n              \"column\": -2\n            }\n          }),\n          __component: ErrorBoundary,\n          __meta: {\n            \"path\": \"\",\n            \"name\": \"unknown\",\n            \"line\": -2,\n            \"column\": -2\n          }\n        }),\n        __component: Bridge,\n        __meta: {\n          \"path\": \"\",\n          \"name\": \"unknown\",\n          \"line\": -2,\n          \"column\": -2\n        }\n      }));\n    }\n  });\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) return () => unmountComponentAtNode(canvas);\n  }, []);\n\n  // When the event source is not this div, we need to set pointer-events to none\n  // Or else the canvas will block events from reaching the event source\n  const pointerEvents = eventSource ? 'none' : 'auto';\n  return /*#__PURE__*/jsx(SceneObject, {\n    ref: divRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      pointerEvents,\n      ...style\n    },\n    ...props,\n    children: /*#__PURE__*/jsx(SceneObject, {\n      ref: containerRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/jsx(SceneObject, {\n        ref: canvasRef,\n        style: {\n          display: 'block'\n        },\n        children: fallback,\n        __component: \"canvas\",\n        __meta: {\n          \"path\": \"\",\n          \"name\": \"canvas\",\n          \"line\": -2,\n          \"column\": -2\n        }\n      }),\n      __component: \"div\",\n      __meta: {\n        \"path\": \"\",\n        \"name\": \"div\",\n        \"line\": -2,\n        \"column\": -2\n      }\n    }),\n    __component: \"div\",\n    __meta: {\n      \"path\": \"\",\n      \"name\": \"div\",\n      \"line\": -2,\n      \"column\": -2\n    }\n  });\n});\n\n/**\r\n * A DOM canvas which accepts threejs elements as children.\r\n * @see https://docs.pmnd.rs/react-three-fiber/api/canvas\r\n */\nconst Canvas = /*#__PURE__*/React.forwardRef(function CanvasWrapper(props, ref) {\n  return /*#__PURE__*/jsx(SceneObject, {\n    children: /*#__PURE__*/jsx(SceneObject, {\n      ...props,\n      ref: ref,\n      __component: CanvasImpl,\n      __meta: {\n        \"path\": \"\",\n        \"name\": \"unknown\",\n        \"line\": -2,\n        \"column\": -2\n      }\n    }),\n    __component: FiberProvider,\n    __meta: {\n      \"path\": \"\",\n      \"name\": \"unknown\",\n      \"line\": -2,\n      \"column\": -2\n    }\n  });\n});\nexport { Canvas };", "import * as React from \"react\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar _a, _b;\nconst useIsomorphicLayoutEffect = typeof window !== \"undefined\" && (((_a = window.document) == null ? void 0 : _a.createElement) || ((_b = window.navigator) == null ? void 0 : _b.product) === \"ReactNative\") ? React.useLayoutEffect : React.useEffect;\nfunction traverseFiber(fiber, ascending, selector) {\n  if (!fiber) return;\n  if (selector(fiber) === true) return fiber;\n  let child = ascending ? fiber.return : fiber.child;\n  while (child) {\n    const match = traverseFiber(child, ascending, selector);\n    if (match) return match;\n    child = ascending ? null : child.sibling;\n  }\n}\nfunction wrapContext(context) {\n  try {\n    return Object.defineProperties(context, {\n      _currentRenderer: {\n        get() {\n          return null;\n        },\n        set() {}\n      },\n      _currentRenderer2: {\n        get() {\n          return null;\n        },\n        set() {}\n      }\n    });\n  } catch (_) {\n    return context;\n  }\n}\nconst error = console.error;\nconsole.error = function () {\n  const message = [...arguments].join(\"\");\n  if ((message == null ? void 0 : message.startsWith(\"Warning:\")) && message.includes(\"useContext\")) {\n    console.error = error;\n    return;\n  }\n  return error.apply(this, arguments);\n};\nconst FiberContext = wrapContext(React.createContext(null));\nclass FiberProvider extends React.Component {\n  render() {\n    return /* @__PURE__ */React.createElement(SceneObject, {\n      ...{\n        value: this._reactInternals\n      },\n      __component: FiberContext.Provider,\n      __meta: {\n        \"path\": \"\",\n        \"name\": \"unknown\",\n        \"line\": -2,\n        \"column\": -2\n      }\n    }, this.props.children);\n  }\n}\nfunction useFiber() {\n  const root = React.useContext(FiberContext);\n  if (root === null) throw new Error(\"its-fine: useFiber must be called within a <FiberProvider />!\");\n  const id = React.useId();\n  const fiber = React.useMemo(() => {\n    for (const maybeFiber of [root, root == null ? void 0 : root.alternate]) {\n      if (!maybeFiber) continue;\n      const fiber2 = traverseFiber(maybeFiber, false, node => {\n        let state = node.memoizedState;\n        while (state) {\n          if (state.memoizedState === id) return true;\n          state = state.next;\n        }\n      });\n      if (fiber2) return fiber2;\n    }\n  }, [root, id]);\n  return fiber;\n}\nfunction useContainer() {\n  const fiber = useFiber();\n  const root = React.useMemo(() => traverseFiber(fiber, true, node => {\n    var _a2;\n    return ((_a2 = node.stateNode) == null ? void 0 : _a2.containerInfo) != null;\n  }), [fiber]);\n  return root == null ? void 0 : root.stateNode.containerInfo;\n}\nfunction useNearestChild(type) {\n  const fiber = useFiber();\n  const childRef = React.useRef();\n  useIsomorphicLayoutEffect(() => {\n    var _a2;\n    childRef.current = (_a2 = traverseFiber(fiber, false, node => typeof node.type === \"string\" && (type === void 0 || node.type === type))) == null ? void 0 : _a2.stateNode;\n  }, [fiber]);\n  return childRef;\n}\nfunction useNearestParent(type) {\n  const fiber = useFiber();\n  const parentRef = React.useRef();\n  useIsomorphicLayoutEffect(() => {\n    var _a2;\n    parentRef.current = (_a2 = traverseFiber(fiber, true, node => typeof node.type === \"string\" && (type === void 0 || node.type === type))) == null ? void 0 : _a2.stateNode;\n  }, [fiber]);\n  return parentRef;\n}\nfunction useContextMap() {\n  const fiber = useFiber();\n  const [contextMap] = React.useState(() => /* @__PURE__ */new Map());\n  contextMap.clear();\n  let node = fiber;\n  while (node) {\n    if (node.type && typeof node.type === \"object\") {\n      const enableRenderableContext = node.type._context === void 0 && node.type.Provider === node.type;\n      const context = enableRenderableContext ? node.type : node.type._context;\n      if (context && context !== FiberContext && !contextMap.has(context)) {\n        contextMap.set(context, React.useContext(wrapContext(context)));\n      }\n    }\n    node = node.return;\n  }\n  return contextMap;\n}\nfunction useContextBridge() {\n  const contextMap = useContextMap();\n  return React.useMemo(() => Array.from(contextMap.keys()).reduce((Prev, context) => props => /* @__PURE__ */React.createElement(SceneObject, {\n    ...null,\n    __component: Prev,\n    __meta: {\n      \"path\": \"\",\n      \"name\": \"unknown\",\n      \"line\": -2,\n      \"column\": -2\n    }\n  }, /* @__PURE__ */React.createElement(SceneObject, {\n    ...__spreadProps(__spreadValues({}, props), {\n      value: contextMap.get(context)\n    }),\n    __component: context.Provider,\n    __meta: {\n      \"path\": \"\",\n      \"name\": \"unknown\",\n      \"line\": -2,\n      \"column\": -2\n    }\n  })), props => /* @__PURE__ */React.createElement(SceneObject, {\n    ...__spreadValues({}, props),\n    __component: FiberProvider,\n    __meta: {\n      \"path\": \"\",\n      \"name\": \"unknown\",\n      \"line\": -2,\n      \"column\": -2\n    }\n  })), [contextMap]);\n}\nexport { FiberProvider, traverseFiber, useContainer, useContextBridge, useContextMap, useFiber, useNearestChild, useNearestParent };"],
  "mappings": "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",
  "names": ["DiscreteEventPriority", "ContinuousEventPriority", "DefaultEventPriority", "ConcurrentRoot", "i", "initialTime", "error", "unstable_scheduleCallback", "startTime", "exports", "React", "error", "ReactDebugCurrentFrame", "Fragment", "context", "Component", "workInProgress", "ConcurrentRoot", "index", "set", "i", "renderLanes", "DiscreteEventPriority", "ContinuousEventPriority", "DefaultEventPriority", "is", "current", "useFiber", "updateFragment", "child", "reconcileChildFibers", "didSuspend", "version", "isHydrating", "create", "error$1", "render", "subtreeRenderLanes", "hasContextChanged", "callCallback", "commitTime", "flushSync", "shouldFireAfterActiveInstanceBlur", "createPortal", "keys", "currentHook", "ReactCurrentDispatcher", "context", "useStore", "error", "i", "keys", "preload", "entry", "error", "keys", "entry", "attach", "dispose", "fiber", "reconciler", "Reconciler", "useIsomorphicLayoutEffect", "i", "key", "target", "entries", "value", "keys", "state", "createStore", "invalidate", "advance", "rootState", "internal", "roots", "frame", "input", "error", "performance", "gl", "events", "React", "import_react", "React", "useIsomorphicLayoutEffect", "context", "context", "import_jsx_runtime", "import_constants", "import_react_reconciler", "import_scheduler", "createDebounce", "performance", "error", "useIsomorphicLayoutEffect", "state", "Canvas"]
}
